# -*- shell-script -*-

_porto_containers ()
{
	COMPREPLY=( $( compgen -W "$(portoctl list -1 2>/dev/null) $*" -- "$cur" ) )
	__ltrim_colon_completions "$cur"
}

_porto_volumes ()
{
	COMPREPLY=( $( compgen -W "$(portoctl vlist -1 2>/dev/null) $1" -- "$cur" ) )
	__ltrim_colon_completions "$cur"
}

_porto_layers ()
{
	COMPREPLY=( $( compgen -f -W "$(portoctl layer -L 2>/dev/null)" -- "$cur" ) )
}

_porto_docker_images ()
{
	COMPREPLY=( $( compgen -W "$(portoctl docker-images 2>/dev/null) $*" -- "$cur" ) )
	__ltrim_colon_completions "$cur"
}

_porto_property_keys ()
{
	local prop="${cur%%[*}"
	if [ "$prop" != "$cur" -a "$prop" != "" ] ; then
		local IFS=$'\n'
		local keys=$(portoctl get "$1" "$prop" 2>/dev/null | sed -n -E "s/(^|;)\ *([^=:;]+)[:=][^;]*/$prop\[\2\]\n/g;s/ /\\\\\\\\ /g;p")
		COMPREPLY=( $( compgen -W "$keys" -- "$cur" ) )
	else
		COMPREPLY=( $( compgen -W "$2" -- "$cur" ) )
	fi
}

_portoctl ()
{
	local i cur prev ct=
	local _porto_commands _porto_properies

	COMPREPLY=()
	_get_comp_words_by_ref -n : cur prev words cword

	i=$(portoctl 2>&1)
	_porto_commands=$(echo "$i" | awk '/^Command/ {f=1;next} !f { next } !NF { exit } /^  [^ ]/ { print $1 }' ;
			  ls /usr/lib/porto/portoctl-* 2>/dev/null | sed -e 's#.*/portoctl-##' ;
			  compgen -c portoctl- | sed -e 's/portoctl-//')
	_porto_volume_properies=$(echo "$i" | awk '/^Volume properties/ {f=1;next} !f { next } !NF { exit } /^  [^ ]/ { print $1 }')
	_porto_properies=$(echo "$i" | awk '/^Container properties/ {f=1;next} !f { next } !NF { exit } /^  [^ ]/ { print $1 }')

	if [ "$cword" = 1 ]; then
		COMPREPLY=( $(compgen -W "$_porto_commands -h --help -v --version" -- $cur) )
		return 0
	fi

	for ((i=2; i<cword; i++)); do
		[[ "${words[i]}" == "-u" || "${words[i]}" == "-g" ]] && : $((i++)) && continue
		[[ "${words[i]}" != -* ]] && ct=$i && break
	done

	case "${words[1]}" in
	help)
		COMPREPLY=( $(compgen -W "$_porto_commands" -- $cur) )
		;;
	create|destroy|start|stop|restart|pause|resume|wait)
		_porto_containers
		;;
	exec|run)
		if [ "$prev" = "-L" ] ; then
			_porto_layers
		elif [ -z "$ct" ] ; then
			_porto_containers "-C -T -L"
		else
			compopt -o filenames
			COMPREPLY=( $( compgen -S "=" -W "$_porto_properies" -- "$cur" ) )
			compopt -o nospace
		fi
		;;
	docker-rmi)
		case "$cword" in
		2)
			_porto_docker_images
			;;
		esac
		;;
	docker-run)
		case "$cword" in
		2)
			_porto_containers
			;;
		3)
			_porto_docker_images
			;;
		*)
			compopt -o filenames
			COMPREPLY=( $( compgen -S "=" -W "$_porto_properies" -- "$cur" ) )
			compopt -o nospace
			;;
		esac
		;;
	build)
		case "$prev" in
		-l|-L)
			_porto_layers
			;;
		-B|-S|-o|-O)
			_filedir
			;;
		*)
			COMPREPLY=( $( compgen -W "-M -l -L -B -S -o -O -k" -- "$cur" ) )
			compopt -o filenames
			COMPREPLY+=( $( compgen -S "=" -W "$_porto_properies $_porto_volume_properies" -- "$cur" ) )
			compopt -o nospace
			;;
		esac
		;;
	shell)
		case "$prev" in
		-u)
			COMPREPLY=( $( compgen -u -- "$cur" ) )
			;;
		-g)
			COMPREPLY=( $( compgen -g -- "$cur" ) )
			;;
		*)
			if [ -z "$ct" ] ; then
				_porto_containers "-u -g"
			else
				_command_offset $(( $COMP_CWORD + $ct - $cword + 1 ))
			fi
			;;
		esac
		;;
	find)
		_pids
		;;
	get)
		if [ -z "$ct" ] ; then
			_porto_containers / /porto
		else
			_porto_property_keys "${words[$ct]}" "$_porto_properies"
		fi
		;;
	set)
		case "$cword" in
		2)
			_porto_containers
			;;
		3)
			_porto_property_keys "${words[$ct]}" "$_porto_properies"
			;;
		4)
			compopt -o filenames
			[ -z "$cur" ] && COMPREPLY=$(portoctl pget "${words[2]}" "${words[3]}" 2>/dev/null)
			;;
		esac
		;;
	kill)
		case "$cword" in
		2)
			_porto_containers
			;;
		3)
			COMPREPLY=( $( compgen -A signal -- $cur ) )
			;;
		esac
		;;
	list)
		COMPREPLY=( $( compgen -W "-1 -f -t" -- $cur ) )
		;;
	sort)
		_porto_property_keys "/" "$_porto_properies"
		;;
	top)
		_filedir
		;;
	vcreate)
		case "$cword" in
		2)
			_filedir -d
			;;
		*)
			COMPREPLY=( $( compgen -S "=" -W "$_porto_volume_properies" -- "$cur" ) )
			compopt -o nospace
			;;
		esac
		;;
	vlist)
		case "$cword" in
		2)
			_porto_volumes "-1 -i -v"
			;;
		3)
			_porto_volumes
			;;
		esac
		;;
	vlink|vunlink)
		case "$cword" in
		2)
			_porto_volumes
			;;
		3)
			_porto_containers /
			;;
		esac
		;;
	vtune)
		case "$cword" in
		2)
			_porto_volumes
			;;
		*)
			COMPREPLY=( $( compgen -S "=" -W "$_porto_volume_properies" -- "$cur" ) )
			compopt -o nospace
			;;
		esac
		;;
	layer)
		case "$prev" in
		-P)
			_filedir
			;;
		-E)
			_porto_volumes
			;;
		-F)
			;;
		-I|-M|-R)
			if [ "$cword" -eq "5" ] ; then
				COMPREPLY=( $( compgen -W "$(portoctl layer -P ${words[3]} -L 2>/dev/null)" -- "$cur" ) )
			else
				COMPREPLY=( $( compgen -W "$(portoctl layer -L 2>/dev/null)" -- "$cur" ) )
			fi
			;;
		*)
			if [ "$cword" -eq "2" ] ; then
				COMPREPLY=( $( compgen -W "-P -I -M -R -L -F -E" -- "$cur" ) )
			elif [ "$cword" -eq "4" ] && [ "x${words[2]}" = "x-P" ] ; then
				COMPREPLY=( $( compgen -W "-I -M -R -L -F" -- "$cur" ) )
			else
				_filedir
			fi
			;;
		esac
		;;
	esac
}

complete -F _portoctl portoctl
