// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: rpc.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// List of error codes
type EError int32

const (
	// Request executed successfully. No errors occured.
	EError_Success EError = 0
	// Unknown critical error.
	EError_Unknown EError = 1
	// Unknown or bad request
	EError_InvalidMethod EError = 2
	// Container with specified name already exists. Can't create a new one.
	EError_ContainerAlreadyExists EError = 3
	// Container with specified name doesn't exist.
	EError_ContainerDoesNotExist EError = 4
	// Unknown property specified.
	EError_InvalidProperty EError = 5
	// Unknown data specified.
	EError_InvalidData EError = 6
	// Invalid value of property or data.
	EError_InvalidValue EError = 7
	// Can't perform specified operation in current container state.
	EError_InvalidState EError = 8
	// Operation is not supported due to some reasons (old kernel version, missing
	// kernel modules, etc).
	EError_NotSupported EError = 9
	// Requested resources are not available (e.g. can't allocate requested memory
	// without overcommiting).
	EError_ResourceNotAvailable EError = 10
	// Insufficient rights for performing requested operation.
	EError_Permission EError = 11
	// Can't create new volume with specified name, because there is already one.
	EError_VolumeAlreadyExists EError = 12
	// Volume with specified name doesn't exist.
	EError_VolumeNotFound EError = 13
	// Operation failed because of insufficient disk space.
	EError_NoSpace EError = 14
	// Operation can't be performed, because container or volume are in use by
	// other simultaneous operation.
	EError_Busy EError = 15
	// Volume already linked with container
	EError_VolumeAlreadyLinked EError = 16
	// Volume not linked with container
	EError_VolumeNotLinked    EError = 17
	EError_LayerAlreadyExists EError = 18
	EError_LayerNotFound      EError = 19
	EError_NoValue            EError = 20
	EError_VolumeNotReady     EError = 21
	// Cannot parse or execute command
	EError_InvalidCommand EError = 22
	// Error code is lost or came from future
	EError_LostError             EError = 23
	EError_DeviceNotFound        EError = 24
	EError_InvalidPath           EError = 25
	EError_InvalidNetworkAddress EError = 26
	EError_PortoFrozen           EError = 27
	EError_LabelNotFound         EError = 28
	EError_InvalidLabel          EError = 29
	EError_HelperError           EError = 30
	EError_HelperFatalError      EError = 31
	EError_NotFound              EError = 404
	EError_SocketError           EError = 502
	EError_SocketUnavailable     EError = 503
	EError_SocketTimeout         EError = 504
	EError_PortodReloaded        EError = 505
	EError_Taint                 EError = 666
	// 700-800 reserved to docker
	EError_Docker              EError = 700
	EError_DockerImageNotFound EError = 701
	// Reserved error code used by Porto internals. Can't be returned to a user.
	EError_Queued EError = 1000
)

// Enum value maps for EError.
var (
	EError_name = map[int32]string{
		0:    "Success",
		1:    "Unknown",
		2:    "InvalidMethod",
		3:    "ContainerAlreadyExists",
		4:    "ContainerDoesNotExist",
		5:    "InvalidProperty",
		6:    "InvalidData",
		7:    "InvalidValue",
		8:    "InvalidState",
		9:    "NotSupported",
		10:   "ResourceNotAvailable",
		11:   "Permission",
		12:   "VolumeAlreadyExists",
		13:   "VolumeNotFound",
		14:   "NoSpace",
		15:   "Busy",
		16:   "VolumeAlreadyLinked",
		17:   "VolumeNotLinked",
		18:   "LayerAlreadyExists",
		19:   "LayerNotFound",
		20:   "NoValue",
		21:   "VolumeNotReady",
		22:   "InvalidCommand",
		23:   "LostError",
		24:   "DeviceNotFound",
		25:   "InvalidPath",
		26:   "InvalidNetworkAddress",
		27:   "PortoFrozen",
		28:   "LabelNotFound",
		29:   "InvalidLabel",
		30:   "HelperError",
		31:   "HelperFatalError",
		404:  "NotFound",
		502:  "SocketError",
		503:  "SocketUnavailable",
		504:  "SocketTimeout",
		505:  "PortodReloaded",
		666:  "Taint",
		700:  "Docker",
		701:  "DockerImageNotFound",
		1000: "Queued",
	}
	EError_value = map[string]int32{
		"Success":                0,
		"Unknown":                1,
		"InvalidMethod":          2,
		"ContainerAlreadyExists": 3,
		"ContainerDoesNotExist":  4,
		"InvalidProperty":        5,
		"InvalidData":            6,
		"InvalidValue":           7,
		"InvalidState":           8,
		"NotSupported":           9,
		"ResourceNotAvailable":   10,
		"Permission":             11,
		"VolumeAlreadyExists":    12,
		"VolumeNotFound":         13,
		"NoSpace":                14,
		"Busy":                   15,
		"VolumeAlreadyLinked":    16,
		"VolumeNotLinked":        17,
		"LayerAlreadyExists":     18,
		"LayerNotFound":          19,
		"NoValue":                20,
		"VolumeNotReady":         21,
		"InvalidCommand":         22,
		"LostError":              23,
		"DeviceNotFound":         24,
		"InvalidPath":            25,
		"InvalidNetworkAddress":  26,
		"PortoFrozen":            27,
		"LabelNotFound":          28,
		"InvalidLabel":           29,
		"HelperError":            30,
		"HelperFatalError":       31,
		"NotFound":               404,
		"SocketError":            502,
		"SocketUnavailable":      503,
		"SocketTimeout":          504,
		"PortodReloaded":         505,
		"Taint":                  666,
		"Docker":                 700,
		"DockerImageNotFound":    701,
		"Queued":                 1000,
	}
)

func (x EError) Enum() *EError {
	p := new(EError)
	*p = x
	return p
}

func (x EError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EError) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_proto_enumTypes[0].Descriptor()
}

func (EError) Type() protoreflect.EnumType {
	return &file_rpc_proto_enumTypes[0]
}

func (x EError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EError) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EError(num)
	return nil
}

// Deprecated: Use EError.Descriptor instead.
func (EError) EnumDescriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

type TContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Create               *TContainerCreateRequest       `protobuf:"bytes,1,opt,name=create" json:"create,omitempty"`
	Destroy              *TContainerDestroyRequest      `protobuf:"bytes,2,opt,name=destroy" json:"destroy,omitempty"`
	List                 *TContainerListRequest         `protobuf:"bytes,3,opt,name=list" json:"list,omitempty"`
	GetProperty          *TContainerGetPropertyRequest  `protobuf:"bytes,4,opt,name=getProperty" json:"getProperty,omitempty"`
	SetProperty          *TContainerSetPropertyRequest  `protobuf:"bytes,5,opt,name=setProperty" json:"setProperty,omitempty"`
	GetData              *TContainerGetDataRequest      `protobuf:"bytes,6,opt,name=getData" json:"getData,omitempty"` // deprecated
	Start                *TContainerStartRequest        `protobuf:"bytes,7,opt,name=start" json:"start,omitempty"`
	Stop                 *TContainerStopRequest         `protobuf:"bytes,8,opt,name=stop" json:"stop,omitempty"`
	Pause                *TContainerPauseRequest        `protobuf:"bytes,9,opt,name=pause" json:"pause,omitempty"`
	Resume               *TContainerResumeRequest       `protobuf:"bytes,10,opt,name=resume" json:"resume,omitempty"`
	PropertyList         *TContainerPropertyListRequest `protobuf:"bytes,11,opt,name=propertyList" json:"propertyList,omitempty"`
	DataList             *TContainerDataListRequest     `protobuf:"bytes,12,opt,name=dataList" json:"dataList,omitempty"` // deprecated
	Kill                 *TContainerKillRequest         `protobuf:"bytes,13,opt,name=kill" json:"kill,omitempty"`
	Version              *TVersionRequest               `protobuf:"bytes,14,opt,name=version" json:"version,omitempty"`
	Get                  *TContainerGetRequest          `protobuf:"bytes,15,opt,name=get" json:"get,omitempty"`
	Wait                 *TContainerWaitRequest         `protobuf:"bytes,16,opt,name=wait" json:"wait,omitempty"`
	CreateWeak           *TContainerCreateRequest       `protobuf:"bytes,17,opt,name=createWeak" json:"createWeak,omitempty"`
	Respawn              *TContainerRespawnRequest      `protobuf:"bytes,18,opt,name=Respawn" json:"Respawn,omitempty"`
	AsyncWait            *TContainerWaitRequest         `protobuf:"bytes,19,opt,name=AsyncWait" json:"AsyncWait,omitempty"`
	StopAsyncWait        *TContainerWaitRequest         `protobuf:"bytes,128,opt,name=StopAsyncWait" json:"StopAsyncWait,omitempty"`
	FindLabel            *TFindLabelRequest             `protobuf:"bytes,20,opt,name=FindLabel" json:"FindLabel,omitempty"`
	SetLabel             *TSetLabelRequest              `protobuf:"bytes,21,opt,name=SetLabel" json:"SetLabel,omitempty"`
	IncLabel             *TIncLabelRequest              `protobuf:"bytes,22,opt,name=IncLabel" json:"IncLabel,omitempty"`
	CreateFromSpec       *TCreateFromSpecRequest        `protobuf:"bytes,230,opt,name=CreateFromSpec" json:"CreateFromSpec,omitempty"`
	UpdateFromSpec       *TUpdateFromSpecRequest        `protobuf:"bytes,231,opt,name=UpdateFromSpec" json:"UpdateFromSpec,omitempty"`
	ListContainersBy     *TListContainersRequest        `protobuf:"bytes,232,opt,name=ListContainersBy" json:"ListContainersBy,omitempty"`
	ListVolumeProperties *TVolumePropertyListRequest    `protobuf:"bytes,103,opt,name=listVolumeProperties" json:"listVolumeProperties,omitempty"`
	CreateVolume         *TVolumeCreateRequest          `protobuf:"bytes,104,opt,name=createVolume" json:"createVolume,omitempty"`
	LinkVolume           *TVolumeLinkRequest            `protobuf:"bytes,105,opt,name=linkVolume" json:"linkVolume,omitempty"`
	LinkVolumeTarget     *TVolumeLinkRequest            `protobuf:"bytes,120,opt,name=LinkVolumeTarget" json:"LinkVolumeTarget,omitempty"`
	UnlinkVolume         *TVolumeUnlinkRequest          `protobuf:"bytes,106,opt,name=unlinkVolume" json:"unlinkVolume,omitempty"`
	UnlinkVolumeTarget   *TVolumeUnlinkRequest          `protobuf:"bytes,121,opt,name=UnlinkVolumeTarget" json:"UnlinkVolumeTarget,omitempty"`
	ListVolumes          *TVolumeListRequest            `protobuf:"bytes,107,opt,name=listVolumes" json:"listVolumes,omitempty"`
	TuneVolume           *TVolumeTuneRequest            `protobuf:"bytes,108,opt,name=tuneVolume" json:"tuneVolume,omitempty"`
	CheckVolume          *TVolumeCheckRequest           `protobuf:"bytes,109,opt,name=checkVolume" json:"checkVolume,omitempty"`
	ImportLayer          *TLayerImportRequest           `protobuf:"bytes,110,opt,name=importLayer" json:"importLayer,omitempty"`
	RemoveLayer          *TLayerRemoveRequest           `protobuf:"bytes,111,opt,name=removeLayer" json:"removeLayer,omitempty"`
	ListLayers           *TLayerListRequest             `protobuf:"bytes,112,opt,name=listLayers" json:"listLayers,omitempty"`
	ExportLayer          *TLayerExportRequest           `protobuf:"bytes,113,opt,name=exportLayer" json:"exportLayer,omitempty"`
	Getlayerprivate      *TLayerGetPrivateRequest       `protobuf:"bytes,114,opt,name=getlayerprivate" json:"getlayerprivate,omitempty"`
	Setlayerprivate      *TLayerSetPrivateRequest       `protobuf:"bytes,115,opt,name=setlayerprivate" json:"setlayerprivate,omitempty"`
	ListStorage          *TStorageListRequest           `protobuf:"bytes,116,opt,name=listStorage" json:"listStorage,omitempty"`
	RemoveStorage        *TStorageRemoveRequest         `protobuf:"bytes,117,opt,name=removeStorage" json:"removeStorage,omitempty"`
	ImportStorage        *TStorageImportRequest         `protobuf:"bytes,118,opt,name=importStorage" json:"importStorage,omitempty"`
	ExportStorage        *TStorageExportRequest         `protobuf:"bytes,119,opt,name=exportStorage" json:"exportStorage,omitempty"`
	CreateMetaStorage    *TMetaStorage                  `protobuf:"bytes,122,opt,name=CreateMetaStorage" json:"CreateMetaStorage,omitempty"`
	ResizeMetaStorage    *TMetaStorage                  `protobuf:"bytes,123,opt,name=ResizeMetaStorage" json:"ResizeMetaStorage,omitempty"`
	RemoveMetaStorage    *TMetaStorage                  `protobuf:"bytes,124,opt,name=RemoveMetaStorage" json:"RemoveMetaStorage,omitempty"`
	SetSymlink           *TSetSymlinkRequest            `protobuf:"bytes,125,opt,name=SetSymlink" json:"SetSymlink,omitempty"`
	NewVolume            *TNewVolumeRequest             `protobuf:"bytes,126,opt,name=NewVolume" json:"NewVolume,omitempty"`
	GetVolume            *TGetVolumeRequest             `protobuf:"bytes,127,opt,name=GetVolume" json:"GetVolume,omitempty"`
	ConvertPath          *TConvertPathRequest           `protobuf:"bytes,200,opt,name=convertPath" json:"convertPath,omitempty"`
	AttachProcess        *TAttachProcessRequest         `protobuf:"bytes,201,opt,name=attachProcess" json:"attachProcess,omitempty"`
	LocateProcess        *TLocateProcessRequest         `protobuf:"bytes,202,opt,name=locateProcess" json:"locateProcess,omitempty"`
	AttachThread         *TAttachProcessRequest         `protobuf:"bytes,203,opt,name=AttachThread" json:"AttachThread,omitempty"`
	GetSystem            *TGetSystemRequest             `protobuf:"bytes,300,opt,name=GetSystem" json:"GetSystem,omitempty"`
	SetSystem            *TSetSystemRequest             `protobuf:"bytes,301,opt,name=SetSystem" json:"SetSystem,omitempty"`
	ClearStatistics      *TClearStatisticsRequest       `protobuf:"bytes,302,opt,name=ClearStatistics" json:"ClearStatistics,omitempty"`
	DockerImageStatus    *TDockerImageStatusRequest     `protobuf:"bytes,303,opt,name=dockerImageStatus" json:"dockerImageStatus,omitempty"`
	ListDockerImages     *TDockerImageListRequest       `protobuf:"bytes,304,opt,name=listDockerImages" json:"listDockerImages,omitempty"`
	PullDockerImage      *TDockerImagePullRequest       `protobuf:"bytes,305,opt,name=pullDockerImage" json:"pullDockerImage,omitempty"`
	RemoveDockerImage    *TDockerImageRemoveRequest     `protobuf:"bytes,306,opt,name=removeDockerImage" json:"removeDockerImage,omitempty"`
}

func (x *TContainerRequest) Reset() {
	*x = TContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerRequest) ProtoMessage() {}

func (x *TContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerRequest.ProtoReflect.Descriptor instead.
func (*TContainerRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *TContainerRequest) GetCreate() *TContainerCreateRequest {
	if x != nil {
		return x.Create
	}
	return nil
}

func (x *TContainerRequest) GetDestroy() *TContainerDestroyRequest {
	if x != nil {
		return x.Destroy
	}
	return nil
}

func (x *TContainerRequest) GetList() *TContainerListRequest {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *TContainerRequest) GetGetProperty() *TContainerGetPropertyRequest {
	if x != nil {
		return x.GetProperty
	}
	return nil
}

func (x *TContainerRequest) GetSetProperty() *TContainerSetPropertyRequest {
	if x != nil {
		return x.SetProperty
	}
	return nil
}

func (x *TContainerRequest) GetGetData() *TContainerGetDataRequest {
	if x != nil {
		return x.GetData
	}
	return nil
}

func (x *TContainerRequest) GetStart() *TContainerStartRequest {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *TContainerRequest) GetStop() *TContainerStopRequest {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *TContainerRequest) GetPause() *TContainerPauseRequest {
	if x != nil {
		return x.Pause
	}
	return nil
}

func (x *TContainerRequest) GetResume() *TContainerResumeRequest {
	if x != nil {
		return x.Resume
	}
	return nil
}

func (x *TContainerRequest) GetPropertyList() *TContainerPropertyListRequest {
	if x != nil {
		return x.PropertyList
	}
	return nil
}

func (x *TContainerRequest) GetDataList() *TContainerDataListRequest {
	if x != nil {
		return x.DataList
	}
	return nil
}

func (x *TContainerRequest) GetKill() *TContainerKillRequest {
	if x != nil {
		return x.Kill
	}
	return nil
}

func (x *TContainerRequest) GetVersion() *TVersionRequest {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *TContainerRequest) GetGet() *TContainerGetRequest {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *TContainerRequest) GetWait() *TContainerWaitRequest {
	if x != nil {
		return x.Wait
	}
	return nil
}

func (x *TContainerRequest) GetCreateWeak() *TContainerCreateRequest {
	if x != nil {
		return x.CreateWeak
	}
	return nil
}

func (x *TContainerRequest) GetRespawn() *TContainerRespawnRequest {
	if x != nil {
		return x.Respawn
	}
	return nil
}

func (x *TContainerRequest) GetAsyncWait() *TContainerWaitRequest {
	if x != nil {
		return x.AsyncWait
	}
	return nil
}

func (x *TContainerRequest) GetStopAsyncWait() *TContainerWaitRequest {
	if x != nil {
		return x.StopAsyncWait
	}
	return nil
}

func (x *TContainerRequest) GetFindLabel() *TFindLabelRequest {
	if x != nil {
		return x.FindLabel
	}
	return nil
}

func (x *TContainerRequest) GetSetLabel() *TSetLabelRequest {
	if x != nil {
		return x.SetLabel
	}
	return nil
}

func (x *TContainerRequest) GetIncLabel() *TIncLabelRequest {
	if x != nil {
		return x.IncLabel
	}
	return nil
}

func (x *TContainerRequest) GetCreateFromSpec() *TCreateFromSpecRequest {
	if x != nil {
		return x.CreateFromSpec
	}
	return nil
}

func (x *TContainerRequest) GetUpdateFromSpec() *TUpdateFromSpecRequest {
	if x != nil {
		return x.UpdateFromSpec
	}
	return nil
}

func (x *TContainerRequest) GetListContainersBy() *TListContainersRequest {
	if x != nil {
		return x.ListContainersBy
	}
	return nil
}

func (x *TContainerRequest) GetListVolumeProperties() *TVolumePropertyListRequest {
	if x != nil {
		return x.ListVolumeProperties
	}
	return nil
}

func (x *TContainerRequest) GetCreateVolume() *TVolumeCreateRequest {
	if x != nil {
		return x.CreateVolume
	}
	return nil
}

func (x *TContainerRequest) GetLinkVolume() *TVolumeLinkRequest {
	if x != nil {
		return x.LinkVolume
	}
	return nil
}

func (x *TContainerRequest) GetLinkVolumeTarget() *TVolumeLinkRequest {
	if x != nil {
		return x.LinkVolumeTarget
	}
	return nil
}

func (x *TContainerRequest) GetUnlinkVolume() *TVolumeUnlinkRequest {
	if x != nil {
		return x.UnlinkVolume
	}
	return nil
}

func (x *TContainerRequest) GetUnlinkVolumeTarget() *TVolumeUnlinkRequest {
	if x != nil {
		return x.UnlinkVolumeTarget
	}
	return nil
}

func (x *TContainerRequest) GetListVolumes() *TVolumeListRequest {
	if x != nil {
		return x.ListVolumes
	}
	return nil
}

func (x *TContainerRequest) GetTuneVolume() *TVolumeTuneRequest {
	if x != nil {
		return x.TuneVolume
	}
	return nil
}

func (x *TContainerRequest) GetCheckVolume() *TVolumeCheckRequest {
	if x != nil {
		return x.CheckVolume
	}
	return nil
}

func (x *TContainerRequest) GetImportLayer() *TLayerImportRequest {
	if x != nil {
		return x.ImportLayer
	}
	return nil
}

func (x *TContainerRequest) GetRemoveLayer() *TLayerRemoveRequest {
	if x != nil {
		return x.RemoveLayer
	}
	return nil
}

func (x *TContainerRequest) GetListLayers() *TLayerListRequest {
	if x != nil {
		return x.ListLayers
	}
	return nil
}

func (x *TContainerRequest) GetExportLayer() *TLayerExportRequest {
	if x != nil {
		return x.ExportLayer
	}
	return nil
}

func (x *TContainerRequest) GetGetlayerprivate() *TLayerGetPrivateRequest {
	if x != nil {
		return x.Getlayerprivate
	}
	return nil
}

func (x *TContainerRequest) GetSetlayerprivate() *TLayerSetPrivateRequest {
	if x != nil {
		return x.Setlayerprivate
	}
	return nil
}

func (x *TContainerRequest) GetListStorage() *TStorageListRequest {
	if x != nil {
		return x.ListStorage
	}
	return nil
}

func (x *TContainerRequest) GetRemoveStorage() *TStorageRemoveRequest {
	if x != nil {
		return x.RemoveStorage
	}
	return nil
}

func (x *TContainerRequest) GetImportStorage() *TStorageImportRequest {
	if x != nil {
		return x.ImportStorage
	}
	return nil
}

func (x *TContainerRequest) GetExportStorage() *TStorageExportRequest {
	if x != nil {
		return x.ExportStorage
	}
	return nil
}

func (x *TContainerRequest) GetCreateMetaStorage() *TMetaStorage {
	if x != nil {
		return x.CreateMetaStorage
	}
	return nil
}

func (x *TContainerRequest) GetResizeMetaStorage() *TMetaStorage {
	if x != nil {
		return x.ResizeMetaStorage
	}
	return nil
}

func (x *TContainerRequest) GetRemoveMetaStorage() *TMetaStorage {
	if x != nil {
		return x.RemoveMetaStorage
	}
	return nil
}

func (x *TContainerRequest) GetSetSymlink() *TSetSymlinkRequest {
	if x != nil {
		return x.SetSymlink
	}
	return nil
}

func (x *TContainerRequest) GetNewVolume() *TNewVolumeRequest {
	if x != nil {
		return x.NewVolume
	}
	return nil
}

func (x *TContainerRequest) GetGetVolume() *TGetVolumeRequest {
	if x != nil {
		return x.GetVolume
	}
	return nil
}

func (x *TContainerRequest) GetConvertPath() *TConvertPathRequest {
	if x != nil {
		return x.ConvertPath
	}
	return nil
}

func (x *TContainerRequest) GetAttachProcess() *TAttachProcessRequest {
	if x != nil {
		return x.AttachProcess
	}
	return nil
}

func (x *TContainerRequest) GetLocateProcess() *TLocateProcessRequest {
	if x != nil {
		return x.LocateProcess
	}
	return nil
}

func (x *TContainerRequest) GetAttachThread() *TAttachProcessRequest {
	if x != nil {
		return x.AttachThread
	}
	return nil
}

func (x *TContainerRequest) GetGetSystem() *TGetSystemRequest {
	if x != nil {
		return x.GetSystem
	}
	return nil
}

func (x *TContainerRequest) GetSetSystem() *TSetSystemRequest {
	if x != nil {
		return x.SetSystem
	}
	return nil
}

func (x *TContainerRequest) GetClearStatistics() *TClearStatisticsRequest {
	if x != nil {
		return x.ClearStatistics
	}
	return nil
}

func (x *TContainerRequest) GetDockerImageStatus() *TDockerImageStatusRequest {
	if x != nil {
		return x.DockerImageStatus
	}
	return nil
}

func (x *TContainerRequest) GetListDockerImages() *TDockerImageListRequest {
	if x != nil {
		return x.ListDockerImages
	}
	return nil
}

func (x *TContainerRequest) GetPullDockerImage() *TDockerImagePullRequest {
	if x != nil {
		return x.PullDockerImage
	}
	return nil
}

func (x *TContainerRequest) GetRemoveDockerImage() *TDockerImageRemoveRequest {
	if x != nil {
		return x.RemoveDockerImage
	}
	return nil
}

type TContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Actually always set, hack for adding new error codes
	Error *EError `protobuf:"varint,1,opt,name=error,enum=rpc.EError,def=23" json:"error,omitempty"`
	// Human readable comment - must be shown to user as is
	ErrorMsg           *string                         `protobuf:"bytes,2,opt,name=errorMsg" json:"errorMsg,omitempty"`
	Timestamp          *uint64                         `protobuf:"varint,1000,opt,name=timestamp" json:"timestamp,omitempty"` // for next changed_since
	List               *TContainerListResponse         `protobuf:"bytes,3,opt,name=list" json:"list,omitempty"`
	GetProperty        *TContainerGetPropertyResponse  `protobuf:"bytes,4,opt,name=getProperty" json:"getProperty,omitempty"`
	GetData            *TContainerGetDataResponse      `protobuf:"bytes,5,opt,name=getData" json:"getData,omitempty"` // deprecated
	PropertyList       *TContainerPropertyListResponse `protobuf:"bytes,6,opt,name=propertyList" json:"propertyList,omitempty"`
	DataList           *TContainerDataListResponse     `protobuf:"bytes,7,opt,name=dataList" json:"dataList,omitempty"` // deprecated
	Version            *TVersionResponse               `protobuf:"bytes,8,opt,name=version" json:"version,omitempty"`
	VolumeList         *TVolumeListResponse            `protobuf:"bytes,9,opt,name=volumeList" json:"volumeList,omitempty"`
	Get                *TContainerGetResponse          `protobuf:"bytes,10,opt,name=get" json:"get,omitempty"`
	Wait               *TContainerWaitResponse         `protobuf:"bytes,11,opt,name=wait" json:"wait,omitempty"`
	VolumePropertyList *TVolumePropertyListResponse    `protobuf:"bytes,12,opt,name=volumePropertyList" json:"volumePropertyList,omitempty"`
	VolumeDescription  *TVolumeDescription             `protobuf:"bytes,13,opt,name=volumeDescription" json:"volumeDescription,omitempty"`
	Layers             *TLayerListResponse             `protobuf:"bytes,14,opt,name=layers" json:"layers,omitempty"`
	ConvertPath        *TConvertPathResponse           `protobuf:"bytes,15,opt,name=convertPath" json:"convertPath,omitempty"`
	LayerPrivate       *TLayerGetPrivateResponse       `protobuf:"bytes,16,opt,name=layer_private,json=layerPrivate" json:"layer_private,omitempty"`
	StorageList        *TStorageListResponse           `protobuf:"bytes,17,opt,name=storageList" json:"storageList,omitempty"`
	LocateProcess      *TLocateProcessResponse         `protobuf:"bytes,18,opt,name=locateProcess" json:"locateProcess,omitempty"`
	AsyncWait          *TContainerWaitResponse         `protobuf:"bytes,19,opt,name=AsyncWait" json:"AsyncWait,omitempty"`
	FindLabel          *TFindLabelResponse             `protobuf:"bytes,20,opt,name=FindLabel" json:"FindLabel,omitempty"`
	SetLabel           *TSetLabelResponse              `protobuf:"bytes,21,opt,name=SetLabel" json:"SetLabel,omitempty"`
	IncLabel           *TIncLabelResponse              `protobuf:"bytes,22,opt,name=IncLabel" json:"IncLabel,omitempty"`
	CheckVolume        *TVolumeCheckResponse           `protobuf:"bytes,23,opt,name=checkVolume" json:"checkVolume,omitempty"`
	ListContainersBy   *TListContainersResponse        `protobuf:"bytes,232,opt,name=ListContainersBy" json:"ListContainersBy,omitempty"`
	NewVolume          *TNewVolumeResponse             `protobuf:"bytes,126,opt,name=NewVolume" json:"NewVolume,omitempty"`
	GetVolume          *TGetVolumeResponse             `protobuf:"bytes,127,opt,name=GetVolume" json:"GetVolume,omitempty"`
	GetSystem          *TGetSystemResponse             `protobuf:"bytes,300,opt,name=GetSystem" json:"GetSystem,omitempty"`
	SetSystem          *TSetSystemResponse             `protobuf:"bytes,301,opt,name=SetSystem" json:"SetSystem,omitempty"`
	DockerImageStatus  *TDockerImageStatusResponse     `protobuf:"bytes,302,opt,name=dockerImageStatus" json:"dockerImageStatus,omitempty"`
	ListDockerImages   *TDockerImageListResponse       `protobuf:"bytes,303,opt,name=listDockerImages" json:"listDockerImages,omitempty"`
	PullDockerImage    *TDockerImagePullResponse       `protobuf:"bytes,304,opt,name=pullDockerImage" json:"pullDockerImage,omitempty"`
}

// Default values for TContainerResponse fields.
const (
	Default_TContainerResponse_Error = EError_LostError
)

func (x *TContainerResponse) Reset() {
	*x = TContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerResponse) ProtoMessage() {}

func (x *TContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerResponse.ProtoReflect.Descriptor instead.
func (*TContainerResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *TContainerResponse) GetError() EError {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return Default_TContainerResponse_Error
}

func (x *TContainerResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

func (x *TContainerResponse) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *TContainerResponse) GetList() *TContainerListResponse {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *TContainerResponse) GetGetProperty() *TContainerGetPropertyResponse {
	if x != nil {
		return x.GetProperty
	}
	return nil
}

func (x *TContainerResponse) GetGetData() *TContainerGetDataResponse {
	if x != nil {
		return x.GetData
	}
	return nil
}

func (x *TContainerResponse) GetPropertyList() *TContainerPropertyListResponse {
	if x != nil {
		return x.PropertyList
	}
	return nil
}

func (x *TContainerResponse) GetDataList() *TContainerDataListResponse {
	if x != nil {
		return x.DataList
	}
	return nil
}

func (x *TContainerResponse) GetVersion() *TVersionResponse {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *TContainerResponse) GetVolumeList() *TVolumeListResponse {
	if x != nil {
		return x.VolumeList
	}
	return nil
}

func (x *TContainerResponse) GetGet() *TContainerGetResponse {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *TContainerResponse) GetWait() *TContainerWaitResponse {
	if x != nil {
		return x.Wait
	}
	return nil
}

func (x *TContainerResponse) GetVolumePropertyList() *TVolumePropertyListResponse {
	if x != nil {
		return x.VolumePropertyList
	}
	return nil
}

func (x *TContainerResponse) GetVolumeDescription() *TVolumeDescription {
	if x != nil {
		return x.VolumeDescription
	}
	return nil
}

func (x *TContainerResponse) GetLayers() *TLayerListResponse {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *TContainerResponse) GetConvertPath() *TConvertPathResponse {
	if x != nil {
		return x.ConvertPath
	}
	return nil
}

func (x *TContainerResponse) GetLayerPrivate() *TLayerGetPrivateResponse {
	if x != nil {
		return x.LayerPrivate
	}
	return nil
}

func (x *TContainerResponse) GetStorageList() *TStorageListResponse {
	if x != nil {
		return x.StorageList
	}
	return nil
}

func (x *TContainerResponse) GetLocateProcess() *TLocateProcessResponse {
	if x != nil {
		return x.LocateProcess
	}
	return nil
}

func (x *TContainerResponse) GetAsyncWait() *TContainerWaitResponse {
	if x != nil {
		return x.AsyncWait
	}
	return nil
}

func (x *TContainerResponse) GetFindLabel() *TFindLabelResponse {
	if x != nil {
		return x.FindLabel
	}
	return nil
}

func (x *TContainerResponse) GetSetLabel() *TSetLabelResponse {
	if x != nil {
		return x.SetLabel
	}
	return nil
}

func (x *TContainerResponse) GetIncLabel() *TIncLabelResponse {
	if x != nil {
		return x.IncLabel
	}
	return nil
}

func (x *TContainerResponse) GetCheckVolume() *TVolumeCheckResponse {
	if x != nil {
		return x.CheckVolume
	}
	return nil
}

func (x *TContainerResponse) GetListContainersBy() *TListContainersResponse {
	if x != nil {
		return x.ListContainersBy
	}
	return nil
}

func (x *TContainerResponse) GetNewVolume() *TNewVolumeResponse {
	if x != nil {
		return x.NewVolume
	}
	return nil
}

func (x *TContainerResponse) GetGetVolume() *TGetVolumeResponse {
	if x != nil {
		return x.GetVolume
	}
	return nil
}

func (x *TContainerResponse) GetGetSystem() *TGetSystemResponse {
	if x != nil {
		return x.GetSystem
	}
	return nil
}

func (x *TContainerResponse) GetSetSystem() *TSetSystemResponse {
	if x != nil {
		return x.SetSystem
	}
	return nil
}

func (x *TContainerResponse) GetDockerImageStatus() *TDockerImageStatusResponse {
	if x != nil {
		return x.DockerImageStatus
	}
	return nil
}

func (x *TContainerResponse) GetListDockerImages() *TDockerImageListResponse {
	if x != nil {
		return x.ListDockerImages
	}
	return nil
}

func (x *TContainerResponse) GetPullDockerImage() *TDockerImagePullResponse {
	if x != nil {
		return x.PullDockerImage
	}
	return nil
}

type TStringMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO replace with map
	// map<string, string> map = 1;
	Map   []*TStringMap_TStringMapEntry `protobuf:"bytes,1,rep,name=map" json:"map,omitempty"`
	Merge *bool                         `protobuf:"varint,2,opt,name=merge" json:"merge,omitempty"` // in, default: replace
}

func (x *TStringMap) Reset() {
	*x = TStringMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStringMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStringMap) ProtoMessage() {}

func (x *TStringMap) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStringMap.ProtoReflect.Descriptor instead.
func (*TStringMap) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *TStringMap) GetMap() []*TStringMap_TStringMapEntry {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *TStringMap) GetMerge() bool {
	if x != nil && x.Merge != nil {
		return *x.Merge
	}
	return false
}

type TUintMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO replace with map
	// map<string, uint64> map = 1;
	Map   []*TUintMap_TUintMapEntry `protobuf:"bytes,1,rep,name=map" json:"map,omitempty"`
	Merge *bool                     `protobuf:"varint,2,opt,name=merge" json:"merge,omitempty"` // in, default: replace
}

func (x *TUintMap) Reset() {
	*x = TUintMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TUintMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TUintMap) ProtoMessage() {}

func (x *TUintMap) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TUintMap.ProtoReflect.Descriptor instead.
func (*TUintMap) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *TUintMap) GetMap() []*TUintMap_TUintMapEntry {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *TUintMap) GetMerge() bool {
	if x != nil && x.Merge != nil {
		return *x.Merge
	}
	return false
}

type TError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *EError `protobuf:"varint,1,opt,name=error,enum=rpc.EError,def=23" json:"error,omitempty"`
	Msg   *string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

// Default values for TError fields.
const (
	Default_TError_Error = EError_LostError
)

func (x *TError) Reset() {
	*x = TError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TError) ProtoMessage() {}

func (x *TError) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TError.ProtoReflect.Descriptor instead.
func (*TError) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *TError) GetError() EError {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return Default_TError_Error
}

func (x *TError) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

type TCred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *string  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"` // requires user or uid or both
	Uid   *uint32  `protobuf:"fixed32,2,opt,name=uid" json:"uid,omitempty"`
	Group *string  `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	Gid   *uint32  `protobuf:"fixed32,4,opt,name=gid" json:"gid,omitempty"`
	Grp   []uint32 `protobuf:"fixed32,5,rep,name=grp" json:"grp,omitempty"` // out, supplementary groups
}

func (x *TCred) Reset() {
	*x = TCred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCred) ProtoMessage() {}

func (x *TCred) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCred.ProtoReflect.Descriptor instead.
func (*TCred) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *TCred) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *TCred) GetUid() uint32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *TCred) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *TCred) GetGid() uint32 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *TCred) GetGrp() []uint32 {
	if x != nil {
		return x.Grp
	}
	return nil
}

type TCapabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cap []string `protobuf:"bytes,1,rep,name=cap" json:"cap,omitempty"`
	Hex *string  `protobuf:"bytes,2,opt,name=hex" json:"hex,omitempty"` // out
}

func (x *TCapabilities) Reset() {
	*x = TCapabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCapabilities) ProtoMessage() {}

func (x *TCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCapabilities.ProtoReflect.Descriptor instead.
func (*TCapabilities) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *TCapabilities) GetCap() []string {
	if x != nil {
		return x.Cap
	}
	return nil
}

func (x *TCapabilities) GetHex() string {
	if x != nil && x.Hex != nil {
		return *x.Hex
	}
	return ""
}

type TContainerCommandArgv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Argv []string `protobuf:"bytes,1,rep,name=argv" json:"argv,omitempty"`
}

func (x *TContainerCommandArgv) Reset() {
	*x = TContainerCommandArgv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerCommandArgv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerCommandArgv) ProtoMessage() {}

func (x *TContainerCommandArgv) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerCommandArgv.ProtoReflect.Descriptor instead.
func (*TContainerCommandArgv) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *TContainerCommandArgv) GetArgv() []string {
	if x != nil {
		return x.Argv
	}
	return nil
}

type TContainerEnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Unset *bool   `protobuf:"varint,3,opt,name=unset" json:"unset,omitempty"` // out
	Salt  *string `protobuf:"bytes,4,opt,name=salt" json:"salt,omitempty"`
	Hash  *string `protobuf:"bytes,5,opt,name=hash" json:"hash,omitempty"`
}

func (x *TContainerEnvVar) Reset() {
	*x = TContainerEnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerEnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerEnvVar) ProtoMessage() {}

func (x *TContainerEnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerEnvVar.ProtoReflect.Descriptor instead.
func (*TContainerEnvVar) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *TContainerEnvVar) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerEnvVar) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *TContainerEnvVar) GetUnset() bool {
	if x != nil && x.Unset != nil {
		return *x.Unset
	}
	return false
}

func (x *TContainerEnvVar) GetSalt() string {
	if x != nil && x.Salt != nil {
		return *x.Salt
	}
	return ""
}

func (x *TContainerEnvVar) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

type TContainerEnv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Var   []*TContainerEnvVar `protobuf:"bytes,1,rep,name=var" json:"var,omitempty"`
	Merge *bool               `protobuf:"varint,2,opt,name=merge" json:"merge,omitempty"` // in, default: replace
}

func (x *TContainerEnv) Reset() {
	*x = TContainerEnv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerEnv) ProtoMessage() {}

func (x *TContainerEnv) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerEnv.ProtoReflect.Descriptor instead.
func (*TContainerEnv) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *TContainerEnv) GetVar() []*TContainerEnvVar {
	if x != nil {
		return x.Var
	}
	return nil
}

func (x *TContainerEnv) GetMerge() bool {
	if x != nil && x.Merge != nil {
		return *x.Merge
	}
	return false
}

type TContainerUlimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Unlimited *bool   `protobuf:"varint,2,opt,name=unlimited" json:"unlimited,omitempty"`
	Soft      *uint64 `protobuf:"varint,3,opt,name=soft" json:"soft,omitempty"`
	Hard      *uint64 `protobuf:"varint,4,opt,name=hard" json:"hard,omitempty"`
	Inherited *bool   `protobuf:"varint,5,opt,name=inherited" json:"inherited,omitempty"` // out
}

func (x *TContainerUlimit) Reset() {
	*x = TContainerUlimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerUlimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerUlimit) ProtoMessage() {}

func (x *TContainerUlimit) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerUlimit.ProtoReflect.Descriptor instead.
func (*TContainerUlimit) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *TContainerUlimit) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *TContainerUlimit) GetUnlimited() bool {
	if x != nil && x.Unlimited != nil {
		return *x.Unlimited
	}
	return false
}

func (x *TContainerUlimit) GetSoft() uint64 {
	if x != nil && x.Soft != nil {
		return *x.Soft
	}
	return 0
}

func (x *TContainerUlimit) GetHard() uint64 {
	if x != nil && x.Hard != nil {
		return *x.Hard
	}
	return 0
}

func (x *TContainerUlimit) GetInherited() bool {
	if x != nil && x.Inherited != nil {
		return *x.Inherited
	}
	return false
}

type TContainerUlimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ulimit []*TContainerUlimit `protobuf:"bytes,1,rep,name=ulimit" json:"ulimit,omitempty"`
	Merge  *bool               `protobuf:"varint,2,opt,name=merge" json:"merge,omitempty"` // in, default: replace
}

func (x *TContainerUlimits) Reset() {
	*x = TContainerUlimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerUlimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerUlimits) ProtoMessage() {}

func (x *TContainerUlimits) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerUlimits.ProtoReflect.Descriptor instead.
func (*TContainerUlimits) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *TContainerUlimits) GetUlimit() []*TContainerUlimit {
	if x != nil {
		return x.Ulimit
	}
	return nil
}

func (x *TContainerUlimits) GetMerge() bool {
	if x != nil && x.Merge != nil {
		return *x.Merge
	}
	return false
}

type TContainerControllers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller []string `protobuf:"bytes,1,rep,name=controller" json:"controller,omitempty"`
}

func (x *TContainerControllers) Reset() {
	*x = TContainerControllers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerControllers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerControllers) ProtoMessage() {}

func (x *TContainerControllers) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerControllers.ProtoReflect.Descriptor instead.
func (*TContainerControllers) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *TContainerControllers) GetController() []string {
	if x != nil {
		return x.Controller
	}
	return nil
}

type TContainerCgroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller *string `protobuf:"bytes,1,req,name=controller" json:"controller,omitempty"`
	Path       *string `protobuf:"bytes,2,req,name=path" json:"path,omitempty"`
	Inherited  *bool   `protobuf:"varint,3,opt,name=inherited" json:"inherited,omitempty"`
}

func (x *TContainerCgroup) Reset() {
	*x = TContainerCgroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerCgroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerCgroup) ProtoMessage() {}

func (x *TContainerCgroup) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerCgroup.ProtoReflect.Descriptor instead.
func (*TContainerCgroup) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *TContainerCgroup) GetController() string {
	if x != nil && x.Controller != nil {
		return *x.Controller
	}
	return ""
}

func (x *TContainerCgroup) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TContainerCgroup) GetInherited() bool {
	if x != nil && x.Inherited != nil {
		return *x.Inherited
	}
	return false
}

type TContainerCgroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cgroup []*TContainerCgroup `protobuf:"bytes,1,rep,name=cgroup" json:"cgroup,omitempty"`
}

func (x *TContainerCgroups) Reset() {
	*x = TContainerCgroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerCgroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerCgroups) ProtoMessage() {}

func (x *TContainerCgroups) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerCgroups.ProtoReflect.Descriptor instead.
func (*TContainerCgroups) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *TContainerCgroups) GetCgroup() []*TContainerCgroup {
	if x != nil {
		return x.Cgroup
	}
	return nil
}

type TContainerCpuSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *string  `protobuf:"bytes,1,opt,name=policy" json:"policy,omitempty"` // inherit|set|node|reserve|threads|cores
	Arg    *uint32  `protobuf:"varint,2,opt,name=arg" json:"arg,omitempty"`      // for node|reserve|threads|cores
	List   *string  `protobuf:"bytes,3,opt,name=list" json:"list,omitempty"`     // for set
	Cpu    []uint32 `protobuf:"varint,4,rep,name=cpu" json:"cpu,omitempty"`      // for set (used if list isn't set)
	Count  *uint32  `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`  // out
	Mems   *string  `protobuf:"bytes,6,opt,name=mems" json:"mems,omitempty"`
	Jail   *int32   `protobuf:"varint,7,opt,name=jail" json:"jail,omitempty"`
}

func (x *TContainerCpuSet) Reset() {
	*x = TContainerCpuSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerCpuSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerCpuSet) ProtoMessage() {}

func (x *TContainerCpuSet) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerCpuSet.ProtoReflect.Descriptor instead.
func (*TContainerCpuSet) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *TContainerCpuSet) GetPolicy() string {
	if x != nil && x.Policy != nil {
		return *x.Policy
	}
	return ""
}

func (x *TContainerCpuSet) GetArg() uint32 {
	if x != nil && x.Arg != nil {
		return *x.Arg
	}
	return 0
}

func (x *TContainerCpuSet) GetList() string {
	if x != nil && x.List != nil {
		return *x.List
	}
	return ""
}

func (x *TContainerCpuSet) GetCpu() []uint32 {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *TContainerCpuSet) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *TContainerCpuSet) GetMems() string {
	if x != nil && x.Mems != nil {
		return *x.Mems
	}
	return ""
}

func (x *TContainerCpuSet) GetJail() int32 {
	if x != nil && x.Jail != nil {
		return *x.Jail
	}
	return 0
}

type TContainerBindMount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *string  `protobuf:"bytes,1,req,name=source" json:"source,omitempty"`
	Target *string  `protobuf:"bytes,2,req,name=target" json:"target,omitempty"`
	Flag   []string `protobuf:"bytes,3,rep,name=flag" json:"flag,omitempty"`
}

func (x *TContainerBindMount) Reset() {
	*x = TContainerBindMount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerBindMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerBindMount) ProtoMessage() {}

func (x *TContainerBindMount) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerBindMount.ProtoReflect.Descriptor instead.
func (*TContainerBindMount) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *TContainerBindMount) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *TContainerBindMount) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *TContainerBindMount) GetFlag() []string {
	if x != nil {
		return x.Flag
	}
	return nil
}

type TContainerBindMounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bind []*TContainerBindMount `protobuf:"bytes,1,rep,name=bind" json:"bind,omitempty"`
}

func (x *TContainerBindMounts) Reset() {
	*x = TContainerBindMounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerBindMounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerBindMounts) ProtoMessage() {}

func (x *TContainerBindMounts) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerBindMounts.ProtoReflect.Descriptor instead.
func (*TContainerBindMounts) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *TContainerBindMounts) GetBind() []*TContainerBindMount {
	if x != nil {
		return x.Bind
	}
	return nil
}

type TContainerVolumeLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume   *string `protobuf:"bytes,1,req,name=volume" json:"volume,omitempty"`
	Target   *string `protobuf:"bytes,2,opt,name=target" json:"target,omitempty"`
	Required *bool   `protobuf:"varint,3,opt,name=required" json:"required,omitempty"`
	ReadOnly *bool   `protobuf:"varint,4,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
}

func (x *TContainerVolumeLink) Reset() {
	*x = TContainerVolumeLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerVolumeLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerVolumeLink) ProtoMessage() {}

func (x *TContainerVolumeLink) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerVolumeLink.ProtoReflect.Descriptor instead.
func (*TContainerVolumeLink) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *TContainerVolumeLink) GetVolume() string {
	if x != nil && x.Volume != nil {
		return *x.Volume
	}
	return ""
}

func (x *TContainerVolumeLink) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *TContainerVolumeLink) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *TContainerVolumeLink) GetReadOnly() bool {
	if x != nil && x.ReadOnly != nil {
		return *x.ReadOnly
	}
	return false
}

type TContainerVolumeLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link []*TContainerVolumeLink `protobuf:"bytes,1,rep,name=link" json:"link,omitempty"`
}

func (x *TContainerVolumeLinks) Reset() {
	*x = TContainerVolumeLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerVolumeLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerVolumeLinks) ProtoMessage() {}

func (x *TContainerVolumeLinks) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerVolumeLinks.ProtoReflect.Descriptor instead.
func (*TContainerVolumeLinks) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *TContainerVolumeLinks) GetLink() []*TContainerVolumeLink {
	if x != nil {
		return x.Link
	}
	return nil
}

type TContainerVolumes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume []string `protobuf:"bytes,1,rep,name=volume" json:"volume,omitempty"`
}

func (x *TContainerVolumes) Reset() {
	*x = TContainerVolumes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerVolumes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerVolumes) ProtoMessage() {}

func (x *TContainerVolumes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerVolumes.ProtoReflect.Descriptor instead.
func (*TContainerVolumes) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *TContainerVolumes) GetVolume() []string {
	if x != nil {
		return x.Volume
	}
	return nil
}

type TContainerPlace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Place *string `protobuf:"bytes,1,req,name=place" json:"place,omitempty"`
	Alias *string `protobuf:"bytes,2,opt,name=alias" json:"alias,omitempty"`
}

func (x *TContainerPlace) Reset() {
	*x = TContainerPlace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerPlace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerPlace) ProtoMessage() {}

func (x *TContainerPlace) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerPlace.ProtoReflect.Descriptor instead.
func (*TContainerPlace) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{21}
}

func (x *TContainerPlace) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TContainerPlace) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

type TContainerPlaceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cfg []*TContainerPlace `protobuf:"bytes,1,rep,name=cfg" json:"cfg,omitempty"`
}

func (x *TContainerPlaceConfig) Reset() {
	*x = TContainerPlaceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerPlaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerPlaceConfig) ProtoMessage() {}

func (x *TContainerPlaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerPlaceConfig.ProtoReflect.Descriptor instead.
func (*TContainerPlaceConfig) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *TContainerPlaceConfig) GetCfg() []*TContainerPlace {
	if x != nil {
		return x.Cfg
	}
	return nil
}

type TContainerDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *string `protobuf:"bytes,1,req,name=device" json:"device,omitempty"`
	Access *string `protobuf:"bytes,2,req,name=access" json:"access,omitempty"`
	Path   *string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	Mode   *string `protobuf:"bytes,4,opt,name=mode" json:"mode,omitempty"`
	User   *string `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	Group  *string `protobuf:"bytes,6,opt,name=group" json:"group,omitempty"`
}

func (x *TContainerDevice) Reset() {
	*x = TContainerDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerDevice) ProtoMessage() {}

func (x *TContainerDevice) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerDevice.ProtoReflect.Descriptor instead.
func (*TContainerDevice) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *TContainerDevice) GetDevice() string {
	if x != nil && x.Device != nil {
		return *x.Device
	}
	return ""
}

func (x *TContainerDevice) GetAccess() string {
	if x != nil && x.Access != nil {
		return *x.Access
	}
	return ""
}

func (x *TContainerDevice) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TContainerDevice) GetMode() string {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return ""
}

func (x *TContainerDevice) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *TContainerDevice) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

type TContainerDevices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device []*TContainerDevice `protobuf:"bytes,1,rep,name=device" json:"device,omitempty"`
	Merge  *bool               `protobuf:"varint,2,opt,name=merge" json:"merge,omitempty"` // in, default: replace
}

func (x *TContainerDevices) Reset() {
	*x = TContainerDevices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerDevices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerDevices) ProtoMessage() {}

func (x *TContainerDevices) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerDevices.ProtoReflect.Descriptor instead.
func (*TContainerDevices) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{24}
}

func (x *TContainerDevices) GetDevice() []*TContainerDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *TContainerDevices) GetMerge() bool {
	if x != nil && x.Merge != nil {
		return *x.Merge
	}
	return false
}

type TContainerNetOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt *string  `protobuf:"bytes,1,req,name=opt" json:"opt,omitempty"`
	Arg []string `protobuf:"bytes,2,rep,name=arg" json:"arg,omitempty"`
}

func (x *TContainerNetOption) Reset() {
	*x = TContainerNetOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerNetOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerNetOption) ProtoMessage() {}

func (x *TContainerNetOption) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerNetOption.ProtoReflect.Descriptor instead.
func (*TContainerNetOption) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *TContainerNetOption) GetOpt() string {
	if x != nil && x.Opt != nil {
		return *x.Opt
	}
	return ""
}

func (x *TContainerNetOption) GetArg() []string {
	if x != nil {
		return x.Arg
	}
	return nil
}

type TContainerNetConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cfg       []*TContainerNetOption `protobuf:"bytes,1,rep,name=cfg" json:"cfg,omitempty"`
	Inherited *bool                  `protobuf:"varint,2,opt,name=inherited" json:"inherited,omitempty"` // out
}

func (x *TContainerNetConfig) Reset() {
	*x = TContainerNetConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerNetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerNetConfig) ProtoMessage() {}

func (x *TContainerNetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerNetConfig.ProtoReflect.Descriptor instead.
func (*TContainerNetConfig) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{26}
}

func (x *TContainerNetConfig) GetCfg() []*TContainerNetOption {
	if x != nil {
		return x.Cfg
	}
	return nil
}

func (x *TContainerNetConfig) GetInherited() bool {
	if x != nil && x.Inherited != nil {
		return *x.Inherited
	}
	return false
}

type TContainerIpLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *string  `protobuf:"bytes,1,req,name=policy" json:"policy,omitempty"` // any|none|some
	Ip     []string `protobuf:"bytes,2,rep,name=ip" json:"ip,omitempty"`
}

func (x *TContainerIpLimit) Reset() {
	*x = TContainerIpLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerIpLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerIpLimit) ProtoMessage() {}

func (x *TContainerIpLimit) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerIpLimit.ProtoReflect.Descriptor instead.
func (*TContainerIpLimit) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *TContainerIpLimit) GetPolicy() string {
	if x != nil && x.Policy != nil {
		return *x.Policy
	}
	return ""
}

func (x *TContainerIpLimit) GetIp() []string {
	if x != nil {
		return x.Ip
	}
	return nil
}

type TContainerIpConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cfg []*TContainerIpConfig_TContainerIp `protobuf:"bytes,1,rep,name=cfg" json:"cfg,omitempty"`
}

func (x *TContainerIpConfig) Reset() {
	*x = TContainerIpConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerIpConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerIpConfig) ProtoMessage() {}

func (x *TContainerIpConfig) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerIpConfig.ProtoReflect.Descriptor instead.
func (*TContainerIpConfig) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *TContainerIpConfig) GetCfg() []*TContainerIpConfig_TContainerIp {
	if x != nil {
		return x.Cfg
	}
	return nil
}

type TVmStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   *uint64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Size    *uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	MaxSize *uint64 `protobuf:"varint,3,opt,name=max_size,json=maxSize" json:"max_size,omitempty"`
	Used    *uint64 `protobuf:"varint,4,opt,name=used" json:"used,omitempty"`
	MaxUsed *uint64 `protobuf:"varint,5,opt,name=max_used,json=maxUsed" json:"max_used,omitempty"`
	Anon    *uint64 `protobuf:"varint,6,opt,name=anon" json:"anon,omitempty"`
	File    *uint64 `protobuf:"varint,7,opt,name=file" json:"file,omitempty"`
	Shmem   *uint64 `protobuf:"varint,8,opt,name=shmem" json:"shmem,omitempty"`
	Huge    *uint64 `protobuf:"varint,9,opt,name=huge" json:"huge,omitempty"`
	Swap    *uint64 `protobuf:"varint,10,opt,name=swap" json:"swap,omitempty"`
	Data    *uint64 `protobuf:"varint,11,opt,name=data" json:"data,omitempty"`
	Stack   *uint64 `protobuf:"varint,12,opt,name=stack" json:"stack,omitempty"`
	Code    *uint64 `protobuf:"varint,13,opt,name=code" json:"code,omitempty"`
	Locked  *uint64 `protobuf:"varint,14,opt,name=locked" json:"locked,omitempty"`
	Table   *uint64 `protobuf:"varint,15,opt,name=table" json:"table,omitempty"`
}

func (x *TVmStat) Reset() {
	*x = TVmStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVmStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVmStat) ProtoMessage() {}

func (x *TVmStat) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVmStat.ProtoReflect.Descriptor instead.
func (*TVmStat) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *TVmStat) GetCount() uint64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *TVmStat) GetSize() uint64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *TVmStat) GetMaxSize() uint64 {
	if x != nil && x.MaxSize != nil {
		return *x.MaxSize
	}
	return 0
}

func (x *TVmStat) GetUsed() uint64 {
	if x != nil && x.Used != nil {
		return *x.Used
	}
	return 0
}

func (x *TVmStat) GetMaxUsed() uint64 {
	if x != nil && x.MaxUsed != nil {
		return *x.MaxUsed
	}
	return 0
}

func (x *TVmStat) GetAnon() uint64 {
	if x != nil && x.Anon != nil {
		return *x.Anon
	}
	return 0
}

func (x *TVmStat) GetFile() uint64 {
	if x != nil && x.File != nil {
		return *x.File
	}
	return 0
}

func (x *TVmStat) GetShmem() uint64 {
	if x != nil && x.Shmem != nil {
		return *x.Shmem
	}
	return 0
}

func (x *TVmStat) GetHuge() uint64 {
	if x != nil && x.Huge != nil {
		return *x.Huge
	}
	return 0
}

func (x *TVmStat) GetSwap() uint64 {
	if x != nil && x.Swap != nil {
		return *x.Swap
	}
	return 0
}

func (x *TVmStat) GetData() uint64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

func (x *TVmStat) GetStack() uint64 {
	if x != nil && x.Stack != nil {
		return *x.Stack
	}
	return 0
}

func (x *TVmStat) GetCode() uint64 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *TVmStat) GetLocked() uint64 {
	if x != nil && x.Locked != nil {
		return *x.Locked
	}
	return 0
}

func (x *TVmStat) GetTable() uint64 {
	if x != nil && x.Table != nil {
		return *x.Table
	}
	return 0
}

type TContainerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbsoluteName               *string                `protobuf:"bytes,1,opt,name=absolute_name,json=absoluteName" json:"absolute_name,omitempty"`                                              // out, "/porto/..."
	State                      *string                `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`                                                                                // out
	Id                         *uint64                `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`                                                                                     // out
	Level                      *uint32                `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`                                                                               // out
	Parent                     *string                `protobuf:"bytes,5,opt,name=parent" json:"parent,omitempty"`                                                                              // out, "/porto/..."
	AbsoluteNamespace          *string                `protobuf:"bytes,6,opt,name=absolute_namespace,json=absoluteNamespace" json:"absolute_namespace,omitempty"`                               // out
	RootPid                    *int32                 `protobuf:"varint,7,opt,name=root_pid,json=rootPid" json:"root_pid,omitempty"`                                                            // out
	ExitStatus                 *int32                 `protobuf:"varint,8,opt,name=exit_status,json=exitStatus" json:"exit_status,omitempty"`                                                   // out
	ExitCode                   *int32                 `protobuf:"varint,9,opt,name=exit_code,json=exitCode" json:"exit_code,omitempty"`                                                         // out
	CoreDumped                 *bool                  `protobuf:"varint,10,opt,name=core_dumped,json=coreDumped" json:"core_dumped,omitempty"`                                                  // out
	StartError                 *TError                `protobuf:"bytes,11,opt,name=start_error,json=startError" json:"start_error,omitempty"`                                                   // out
	Time                       *uint64                `protobuf:"varint,12,opt,name=time" json:"time,omitempty"`                                                                                // out
	DeadTime                   *uint64                `protobuf:"varint,13,opt,name=dead_time,json=deadTime" json:"dead_time,omitempty"`                                                        // out
	CapabilitiesAllowed        *TCapabilities         `protobuf:"bytes,14,opt,name=capabilities_allowed,json=capabilitiesAllowed" json:"capabilities_allowed,omitempty"`                        // out
	CapabilitiesAmbientAllowed *TCapabilities         `protobuf:"bytes,15,opt,name=capabilities_ambient_allowed,json=capabilitiesAmbientAllowed" json:"capabilities_ambient_allowed,omitempty"` // out
	RootPath                   *string                `protobuf:"bytes,16,opt,name=root_path,json=rootPath" json:"root_path,omitempty"`                                                         // out, in client namespace
	StdoutOffset               *uint64                `protobuf:"varint,17,opt,name=stdout_offset,json=stdoutOffset" json:"stdout_offset,omitempty"`                                            // out
	StderrOffset               *uint64                `protobuf:"varint,18,opt,name=stderr_offset,json=stderrOffset" json:"stderr_offset,omitempty"`                                            // out
	Stderr                     *string                `protobuf:"bytes,69,opt,name=stderr" json:"stderr,omitempty"`                                                                             // out
	Stdout                     *string                `protobuf:"bytes,70,opt,name=stdout" json:"stdout,omitempty"`                                                                             // out
	CreationTime               *uint64                `protobuf:"varint,19,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`                                            // out
	StartTime                  *uint64                `protobuf:"varint,20,opt,name=start_time,json=startTime" json:"start_time,omitempty"`                                                     // out
	DeathTime                  *uint64                `protobuf:"varint,21,opt,name=death_time,json=deathTime" json:"death_time,omitempty"`                                                     // out
	ChangeTime                 *uint64                `protobuf:"varint,22,opt,name=change_time,json=changeTime" json:"change_time,omitempty"`                                                  // out
	NoChanges                  *bool                  `protobuf:"varint,23,opt,name=no_changes,json=noChanges" json:"no_changes,omitempty"`                                                     // out, change_time < changed_since
	ExtraProperties            *string                `protobuf:"bytes,73,opt,name=extra_properties,json=extraProperties" json:"extra_properties,omitempty"`
	Cgroups                    *TContainerCgroups     `protobuf:"bytes,24,opt,name=cgroups" json:"cgroups,omitempty"`                                                          // out
	CpuSetAffinity             *TContainerCpuSet      `protobuf:"bytes,25,opt,name=cpu_set_affinity,json=cpuSetAffinity" json:"cpu_set_affinity,omitempty"`                    // out
	CpuUsage                   *uint64                `protobuf:"varint,26,opt,name=cpu_usage,json=cpuUsage" json:"cpu_usage,omitempty"`                                       // out
	CpuUsageSystem             *uint64                `protobuf:"varint,27,opt,name=cpu_usage_system,json=cpuUsageSystem" json:"cpu_usage_system,omitempty"`                   // out
	CpuWait                    *uint64                `protobuf:"varint,28,opt,name=cpu_wait,json=cpuWait" json:"cpu_wait,omitempty"`                                          // out
	CpuThrottled               *uint64                `protobuf:"varint,29,opt,name=cpu_throttled,json=cpuThrottled" json:"cpu_throttled,omitempty"`                           // out
	CpuBurstUsage              *uint64                `protobuf:"varint,74,opt,name=cpu_burst_usage,json=cpuBurstUsage" json:"cpu_burst_usage,omitempty"`                      // out
	CpuUnconstrainedWait       *uint64                `protobuf:"varint,75,opt,name=cpu_unconstrained_wait,json=cpuUnconstrainedWait" json:"cpu_unconstrained_wait,omitempty"` // out
	ProcessCount               *uint64                `protobuf:"varint,30,opt,name=process_count,json=processCount" json:"process_count,omitempty"`                           // out
	ThreadCount                *uint64                `protobuf:"varint,31,opt,name=thread_count,json=threadCount" json:"thread_count,omitempty"`                              // out
	IoRead                     *TUintMap              `protobuf:"bytes,32,opt,name=io_read,json=ioRead" json:"io_read,omitempty"`                                              // out, bytes
	IoWrite                    *TUintMap              `protobuf:"bytes,33,opt,name=io_write,json=ioWrite" json:"io_write,omitempty"`                                           // out, bytes
	IoOps                      *TUintMap              `protobuf:"bytes,34,opt,name=io_ops,json=ioOps" json:"io_ops,omitempty"`                                                 // out, ops
	IoReadOps                  *TUintMap              `protobuf:"bytes,341,opt,name=io_read_ops,json=ioReadOps" json:"io_read_ops,omitempty"`                                  // out, ops
	IoWriteOps                 *TUintMap              `protobuf:"bytes,342,opt,name=io_write_ops,json=ioWriteOps" json:"io_write_ops,omitempty"`                               // out, ops
	IoTime                     *TUintMap              `protobuf:"bytes,35,opt,name=io_time,json=ioTime" json:"io_time,omitempty"`                                              // out, ns
	PlaceUsage                 *TUintMap              `protobuf:"bytes,36,opt,name=place_usage,json=placeUsage" json:"place_usage,omitempty"`
	MemoryUsage                *uint64                `protobuf:"varint,37,opt,name=memory_usage,json=memoryUsage" json:"memory_usage,omitempty"`                              // out, bytes
	MemoryGuaranteeTotal       *uint64                `protobuf:"varint,38,opt,name=memory_guarantee_total,json=memoryGuaranteeTotal" json:"memory_guarantee_total,omitempty"` // out
	MemoryLimitTotal           *uint64                `protobuf:"varint,39,opt,name=memory_limit_total,json=memoryLimitTotal" json:"memory_limit_total,omitempty"`             // out
	MemoryLockPolicy           *string                `protobuf:"bytes,82,opt,name=memory_lock_policy,json=memoryLockPolicy" json:"memory_lock_policy,omitempty"`
	AnonLimitTotal             *uint64                `protobuf:"varint,40,opt,name=anon_limit_total,json=anonLimitTotal" json:"anon_limit_total,omitempty"`
	AnonUsage                  *uint64                `protobuf:"varint,41,opt,name=anon_usage,json=anonUsage" json:"anon_usage,omitempty"` // out, bytes
	CpuGuaranteeTotal          *float64               `protobuf:"fixed64,42,opt,name=cpu_guarantee_total,json=cpuGuaranteeTotal" json:"cpu_guarantee_total,omitempty"`
	CpuGuaranteeBound          *float64               `protobuf:"fixed64,421,opt,name=cpu_guarantee_bound,json=cpuGuaranteeBound" json:"cpu_guarantee_bound,omitempty"`
	CpuLimitTotal              *float64               `protobuf:"fixed64,422,opt,name=cpu_limit_total,json=cpuLimitTotal" json:"cpu_limit_total,omitempty"`
	CpuLimitBound              *float64               `protobuf:"fixed64,423,opt,name=cpu_limit_bound,json=cpuLimitBound" json:"cpu_limit_bound,omitempty"`
	CacheUsage                 *uint64                `protobuf:"varint,43,opt,name=cache_usage,json=cacheUsage" json:"cache_usage,omitempty"`       // out, bytes
	HugetlbUsage               *uint64                `protobuf:"varint,44,opt,name=hugetlb_usage,json=hugetlbUsage" json:"hugetlb_usage,omitempty"` // out, bytes
	HugetlbLimit               *uint64                `protobuf:"varint,45,opt,name=hugetlb_limit,json=hugetlbLimit" json:"hugetlb_limit,omitempty"`
	MinorFaults                *uint64                `protobuf:"varint,46,opt,name=minor_faults,json=minorFaults" json:"minor_faults,omitempty"`               // out
	MajorFaults                *uint64                `protobuf:"varint,47,opt,name=major_faults,json=majorFaults" json:"major_faults,omitempty"`               // out
	MemoryReclaimed            *uint64                `protobuf:"varint,48,opt,name=memory_reclaimed,json=memoryReclaimed" json:"memory_reclaimed,omitempty"`   // out
	VirtualMemory              *TVmStat               `protobuf:"bytes,49,opt,name=virtual_memory,json=virtualMemory" json:"virtual_memory,omitempty"`          // out
	ShmemUsage                 *uint64                `protobuf:"varint,71,opt,name=shmem_usage,json=shmemUsage" json:"shmem_usage,omitempty"`                  // out, bytes
	MlockUsage                 *uint64                `protobuf:"varint,72,opt,name=mlock_usage,json=mlockUsage" json:"mlock_usage,omitempty"`                  // out, bytes
	OomKills                   *uint64                `protobuf:"varint,50,opt,name=oom_kills,json=oomKills" json:"oom_kills,omitempty"`                        // out
	OomKillsTotal              *uint64                `protobuf:"varint,51,opt,name=oom_kills_total,json=oomKillsTotal" json:"oom_kills_total,omitempty"`       // out
	OomKilled                  *bool                  `protobuf:"varint,52,opt,name=oom_killed,json=oomKilled" json:"oom_killed,omitempty"`                     // out
	NetBytes                   *TUintMap              `protobuf:"bytes,54,opt,name=net_bytes,json=netBytes" json:"net_bytes,omitempty"`                         // out
	NetPackets                 *TUintMap              `protobuf:"bytes,55,opt,name=net_packets,json=netPackets" json:"net_packets,omitempty"`                   // out
	NetDrops                   *TUintMap              `protobuf:"bytes,56,opt,name=net_drops,json=netDrops" json:"net_drops,omitempty"`                         // out
	NetOverlimits              *TUintMap              `protobuf:"bytes,57,opt,name=net_overlimits,json=netOverlimits" json:"net_overlimits,omitempty"`          // out
	NetRxBytes                 *TUintMap              `protobuf:"bytes,58,opt,name=net_rx_bytes,json=netRxBytes" json:"net_rx_bytes,omitempty"`                 // out
	NetRxPackets               *TUintMap              `protobuf:"bytes,59,opt,name=net_rx_packets,json=netRxPackets" json:"net_rx_packets,omitempty"`           // out
	NetRxDrops                 *TUintMap              `protobuf:"bytes,60,opt,name=net_rx_drops,json=netRxDrops" json:"net_rx_drops,omitempty"`                 // out
	NetRxOverlimits            *TUintMap              `protobuf:"bytes,601,opt,name=net_rx_overlimits,json=netRxOverlimits" json:"net_rx_overlimits,omitempty"` // out
	NetTxBytes                 *TUintMap              `protobuf:"bytes,61,opt,name=net_tx_bytes,json=netTxBytes" json:"net_tx_bytes,omitempty"`                 // out
	NetTxPackets               *TUintMap              `protobuf:"bytes,62,opt,name=net_tx_packets,json=netTxPackets" json:"net_tx_packets,omitempty"`           // out
	NetTxDrops                 *TUintMap              `protobuf:"bytes,63,opt,name=net_tx_drops,json=netTxDrops" json:"net_tx_drops,omitempty"`                 // out
	NetNetstat                 *TUintMap              `protobuf:"bytes,163,opt,name=net_netstat,json=netNetstat" json:"net_netstat,omitempty"`                  // out
	NetSnmp                    *TUintMap              `protobuf:"bytes,263,opt,name=net_snmp,json=netSnmp" json:"net_snmp,omitempty"`                           // out
	NetSnmp6                   *TUintMap              `protobuf:"bytes,264,opt,name=net_snmp6,json=netSnmp6" json:"net_snmp6,omitempty"`                        // out
	VolumesLinked              *TContainerVolumeLinks `protobuf:"bytes,64,opt,name=volumes_linked,json=volumesLinked" json:"volumes_linked,omitempty"`          // out
	VolumesOwned               *TContainerVolumes     `protobuf:"bytes,65,opt,name=volumes_owned,json=volumesOwned" json:"volumes_owned,omitempty"`
	Error                      []*TError              `protobuf:"bytes,66,rep,name=error" json:"error,omitempty"`     // out
	Warning                    []*TError              `protobuf:"bytes,67,rep,name=warning" json:"warning,omitempty"` // out
	Taint                      []*TError              `protobuf:"bytes,68,rep,name=taint" json:"taint,omitempty"`     // out
}

func (x *TContainerStatus) Reset() {
	*x = TContainerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerStatus) ProtoMessage() {}

func (x *TContainerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerStatus.ProtoReflect.Descriptor instead.
func (*TContainerStatus) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{30}
}

func (x *TContainerStatus) GetAbsoluteName() string {
	if x != nil && x.AbsoluteName != nil {
		return *x.AbsoluteName
	}
	return ""
}

func (x *TContainerStatus) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *TContainerStatus) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *TContainerStatus) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *TContainerStatus) GetParent() string {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return ""
}

func (x *TContainerStatus) GetAbsoluteNamespace() string {
	if x != nil && x.AbsoluteNamespace != nil {
		return *x.AbsoluteNamespace
	}
	return ""
}

func (x *TContainerStatus) GetRootPid() int32 {
	if x != nil && x.RootPid != nil {
		return *x.RootPid
	}
	return 0
}

func (x *TContainerStatus) GetExitStatus() int32 {
	if x != nil && x.ExitStatus != nil {
		return *x.ExitStatus
	}
	return 0
}

func (x *TContainerStatus) GetExitCode() int32 {
	if x != nil && x.ExitCode != nil {
		return *x.ExitCode
	}
	return 0
}

func (x *TContainerStatus) GetCoreDumped() bool {
	if x != nil && x.CoreDumped != nil {
		return *x.CoreDumped
	}
	return false
}

func (x *TContainerStatus) GetStartError() *TError {
	if x != nil {
		return x.StartError
	}
	return nil
}

func (x *TContainerStatus) GetTime() uint64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *TContainerStatus) GetDeadTime() uint64 {
	if x != nil && x.DeadTime != nil {
		return *x.DeadTime
	}
	return 0
}

func (x *TContainerStatus) GetCapabilitiesAllowed() *TCapabilities {
	if x != nil {
		return x.CapabilitiesAllowed
	}
	return nil
}

func (x *TContainerStatus) GetCapabilitiesAmbientAllowed() *TCapabilities {
	if x != nil {
		return x.CapabilitiesAmbientAllowed
	}
	return nil
}

func (x *TContainerStatus) GetRootPath() string {
	if x != nil && x.RootPath != nil {
		return *x.RootPath
	}
	return ""
}

func (x *TContainerStatus) GetStdoutOffset() uint64 {
	if x != nil && x.StdoutOffset != nil {
		return *x.StdoutOffset
	}
	return 0
}

func (x *TContainerStatus) GetStderrOffset() uint64 {
	if x != nil && x.StderrOffset != nil {
		return *x.StderrOffset
	}
	return 0
}

func (x *TContainerStatus) GetStderr() string {
	if x != nil && x.Stderr != nil {
		return *x.Stderr
	}
	return ""
}

func (x *TContainerStatus) GetStdout() string {
	if x != nil && x.Stdout != nil {
		return *x.Stdout
	}
	return ""
}

func (x *TContainerStatus) GetCreationTime() uint64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *TContainerStatus) GetStartTime() uint64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *TContainerStatus) GetDeathTime() uint64 {
	if x != nil && x.DeathTime != nil {
		return *x.DeathTime
	}
	return 0
}

func (x *TContainerStatus) GetChangeTime() uint64 {
	if x != nil && x.ChangeTime != nil {
		return *x.ChangeTime
	}
	return 0
}

func (x *TContainerStatus) GetNoChanges() bool {
	if x != nil && x.NoChanges != nil {
		return *x.NoChanges
	}
	return false
}

func (x *TContainerStatus) GetExtraProperties() string {
	if x != nil && x.ExtraProperties != nil {
		return *x.ExtraProperties
	}
	return ""
}

func (x *TContainerStatus) GetCgroups() *TContainerCgroups {
	if x != nil {
		return x.Cgroups
	}
	return nil
}

func (x *TContainerStatus) GetCpuSetAffinity() *TContainerCpuSet {
	if x != nil {
		return x.CpuSetAffinity
	}
	return nil
}

func (x *TContainerStatus) GetCpuUsage() uint64 {
	if x != nil && x.CpuUsage != nil {
		return *x.CpuUsage
	}
	return 0
}

func (x *TContainerStatus) GetCpuUsageSystem() uint64 {
	if x != nil && x.CpuUsageSystem != nil {
		return *x.CpuUsageSystem
	}
	return 0
}

func (x *TContainerStatus) GetCpuWait() uint64 {
	if x != nil && x.CpuWait != nil {
		return *x.CpuWait
	}
	return 0
}

func (x *TContainerStatus) GetCpuThrottled() uint64 {
	if x != nil && x.CpuThrottled != nil {
		return *x.CpuThrottled
	}
	return 0
}

func (x *TContainerStatus) GetCpuBurstUsage() uint64 {
	if x != nil && x.CpuBurstUsage != nil {
		return *x.CpuBurstUsage
	}
	return 0
}

func (x *TContainerStatus) GetCpuUnconstrainedWait() uint64 {
	if x != nil && x.CpuUnconstrainedWait != nil {
		return *x.CpuUnconstrainedWait
	}
	return 0
}

func (x *TContainerStatus) GetProcessCount() uint64 {
	if x != nil && x.ProcessCount != nil {
		return *x.ProcessCount
	}
	return 0
}

func (x *TContainerStatus) GetThreadCount() uint64 {
	if x != nil && x.ThreadCount != nil {
		return *x.ThreadCount
	}
	return 0
}

func (x *TContainerStatus) GetIoRead() *TUintMap {
	if x != nil {
		return x.IoRead
	}
	return nil
}

func (x *TContainerStatus) GetIoWrite() *TUintMap {
	if x != nil {
		return x.IoWrite
	}
	return nil
}

func (x *TContainerStatus) GetIoOps() *TUintMap {
	if x != nil {
		return x.IoOps
	}
	return nil
}

func (x *TContainerStatus) GetIoReadOps() *TUintMap {
	if x != nil {
		return x.IoReadOps
	}
	return nil
}

func (x *TContainerStatus) GetIoWriteOps() *TUintMap {
	if x != nil {
		return x.IoWriteOps
	}
	return nil
}

func (x *TContainerStatus) GetIoTime() *TUintMap {
	if x != nil {
		return x.IoTime
	}
	return nil
}

func (x *TContainerStatus) GetPlaceUsage() *TUintMap {
	if x != nil {
		return x.PlaceUsage
	}
	return nil
}

func (x *TContainerStatus) GetMemoryUsage() uint64 {
	if x != nil && x.MemoryUsage != nil {
		return *x.MemoryUsage
	}
	return 0
}

func (x *TContainerStatus) GetMemoryGuaranteeTotal() uint64 {
	if x != nil && x.MemoryGuaranteeTotal != nil {
		return *x.MemoryGuaranteeTotal
	}
	return 0
}

func (x *TContainerStatus) GetMemoryLimitTotal() uint64 {
	if x != nil && x.MemoryLimitTotal != nil {
		return *x.MemoryLimitTotal
	}
	return 0
}

func (x *TContainerStatus) GetMemoryLockPolicy() string {
	if x != nil && x.MemoryLockPolicy != nil {
		return *x.MemoryLockPolicy
	}
	return ""
}

func (x *TContainerStatus) GetAnonLimitTotal() uint64 {
	if x != nil && x.AnonLimitTotal != nil {
		return *x.AnonLimitTotal
	}
	return 0
}

func (x *TContainerStatus) GetAnonUsage() uint64 {
	if x != nil && x.AnonUsage != nil {
		return *x.AnonUsage
	}
	return 0
}

func (x *TContainerStatus) GetCpuGuaranteeTotal() float64 {
	if x != nil && x.CpuGuaranteeTotal != nil {
		return *x.CpuGuaranteeTotal
	}
	return 0
}

func (x *TContainerStatus) GetCpuGuaranteeBound() float64 {
	if x != nil && x.CpuGuaranteeBound != nil {
		return *x.CpuGuaranteeBound
	}
	return 0
}

func (x *TContainerStatus) GetCpuLimitTotal() float64 {
	if x != nil && x.CpuLimitTotal != nil {
		return *x.CpuLimitTotal
	}
	return 0
}

func (x *TContainerStatus) GetCpuLimitBound() float64 {
	if x != nil && x.CpuLimitBound != nil {
		return *x.CpuLimitBound
	}
	return 0
}

func (x *TContainerStatus) GetCacheUsage() uint64 {
	if x != nil && x.CacheUsage != nil {
		return *x.CacheUsage
	}
	return 0
}

func (x *TContainerStatus) GetHugetlbUsage() uint64 {
	if x != nil && x.HugetlbUsage != nil {
		return *x.HugetlbUsage
	}
	return 0
}

func (x *TContainerStatus) GetHugetlbLimit() uint64 {
	if x != nil && x.HugetlbLimit != nil {
		return *x.HugetlbLimit
	}
	return 0
}

func (x *TContainerStatus) GetMinorFaults() uint64 {
	if x != nil && x.MinorFaults != nil {
		return *x.MinorFaults
	}
	return 0
}

func (x *TContainerStatus) GetMajorFaults() uint64 {
	if x != nil && x.MajorFaults != nil {
		return *x.MajorFaults
	}
	return 0
}

func (x *TContainerStatus) GetMemoryReclaimed() uint64 {
	if x != nil && x.MemoryReclaimed != nil {
		return *x.MemoryReclaimed
	}
	return 0
}

func (x *TContainerStatus) GetVirtualMemory() *TVmStat {
	if x != nil {
		return x.VirtualMemory
	}
	return nil
}

func (x *TContainerStatus) GetShmemUsage() uint64 {
	if x != nil && x.ShmemUsage != nil {
		return *x.ShmemUsage
	}
	return 0
}

func (x *TContainerStatus) GetMlockUsage() uint64 {
	if x != nil && x.MlockUsage != nil {
		return *x.MlockUsage
	}
	return 0
}

func (x *TContainerStatus) GetOomKills() uint64 {
	if x != nil && x.OomKills != nil {
		return *x.OomKills
	}
	return 0
}

func (x *TContainerStatus) GetOomKillsTotal() uint64 {
	if x != nil && x.OomKillsTotal != nil {
		return *x.OomKillsTotal
	}
	return 0
}

func (x *TContainerStatus) GetOomKilled() bool {
	if x != nil && x.OomKilled != nil {
		return *x.OomKilled
	}
	return false
}

func (x *TContainerStatus) GetNetBytes() *TUintMap {
	if x != nil {
		return x.NetBytes
	}
	return nil
}

func (x *TContainerStatus) GetNetPackets() *TUintMap {
	if x != nil {
		return x.NetPackets
	}
	return nil
}

func (x *TContainerStatus) GetNetDrops() *TUintMap {
	if x != nil {
		return x.NetDrops
	}
	return nil
}

func (x *TContainerStatus) GetNetOverlimits() *TUintMap {
	if x != nil {
		return x.NetOverlimits
	}
	return nil
}

func (x *TContainerStatus) GetNetRxBytes() *TUintMap {
	if x != nil {
		return x.NetRxBytes
	}
	return nil
}

func (x *TContainerStatus) GetNetRxPackets() *TUintMap {
	if x != nil {
		return x.NetRxPackets
	}
	return nil
}

func (x *TContainerStatus) GetNetRxDrops() *TUintMap {
	if x != nil {
		return x.NetRxDrops
	}
	return nil
}

func (x *TContainerStatus) GetNetRxOverlimits() *TUintMap {
	if x != nil {
		return x.NetRxOverlimits
	}
	return nil
}

func (x *TContainerStatus) GetNetTxBytes() *TUintMap {
	if x != nil {
		return x.NetTxBytes
	}
	return nil
}

func (x *TContainerStatus) GetNetTxPackets() *TUintMap {
	if x != nil {
		return x.NetTxPackets
	}
	return nil
}

func (x *TContainerStatus) GetNetTxDrops() *TUintMap {
	if x != nil {
		return x.NetTxDrops
	}
	return nil
}

func (x *TContainerStatus) GetNetNetstat() *TUintMap {
	if x != nil {
		return x.NetNetstat
	}
	return nil
}

func (x *TContainerStatus) GetNetSnmp() *TUintMap {
	if x != nil {
		return x.NetSnmp
	}
	return nil
}

func (x *TContainerStatus) GetNetSnmp6() *TUintMap {
	if x != nil {
		return x.NetSnmp6
	}
	return nil
}

func (x *TContainerStatus) GetVolumesLinked() *TContainerVolumeLinks {
	if x != nil {
		return x.VolumesLinked
	}
	return nil
}

func (x *TContainerStatus) GetVolumesOwned() *TContainerVolumes {
	if x != nil {
		return x.VolumesOwned
	}
	return nil
}

func (x *TContainerStatus) GetError() []*TError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TContainerStatus) GetWarning() []*TError {
	if x != nil {
		return x.Warning
	}
	return nil
}

func (x *TContainerStatus) GetTaint() []*TError {
	if x != nil {
		return x.Taint
	}
	return nil
}

type TContainerSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"` // in client namespace
	Weak                     *bool                  `protobuf:"varint,2,opt,name=weak" json:"weak,omitempty"`
	Private                  *string                `protobuf:"bytes,3,opt,name=private" json:"private,omitempty"`
	Labels                   *TStringMap            `protobuf:"bytes,4,opt,name=labels" json:"labels,omitempty"`
	Command                  *string                `protobuf:"bytes,5,opt,name=command" json:"command,omitempty"`
	CommandArgv              *TContainerCommandArgv `protobuf:"bytes,76,opt,name=command_argv,json=commandArgv" json:"command_argv,omitempty"`
	Env                      *TContainerEnv         `protobuf:"bytes,6,opt,name=env" json:"env,omitempty"`
	EnvSecret                *TContainerEnv         `protobuf:"bytes,90,opt,name=env_secret,json=envSecret" json:"env_secret,omitempty"` // in, out hides values
	Ulimit                   *TContainerUlimits     `protobuf:"bytes,7,opt,name=ulimit" json:"ulimit,omitempty"`
	CoreCommand              *string                `protobuf:"bytes,8,opt,name=core_command,json=coreCommand" json:"core_command,omitempty"`
	Isolate                  *bool                  `protobuf:"varint,9,opt,name=isolate" json:"isolate,omitempty"`
	VirtMode                 *string                `protobuf:"bytes,10,opt,name=virt_mode,json=virtMode" json:"virt_mode,omitempty"`
	EnablePorto              *string                `protobuf:"bytes,11,opt,name=enable_porto,json=enablePorto" json:"enable_porto,omitempty"`
	PortoNamespace           *string                `protobuf:"bytes,12,opt,name=porto_namespace,json=portoNamespace" json:"porto_namespace,omitempty"`
	Cgroupfs                 *string                `protobuf:"bytes,78,opt,name=cgroupfs" json:"cgroupfs,omitempty"`
	Userns                   *bool                  `protobuf:"varint,79,opt,name=userns" json:"userns,omitempty"`
	UnshareOnExec            *bool                  `protobuf:"varint,80,opt,name=unshare_on_exec,json=unshareOnExec" json:"unshare_on_exec,omitempty"`
	AgingTime                *uint64                `protobuf:"varint,13,opt,name=aging_time,json=agingTime" json:"aging_time,omitempty"`
	TaskCred                 *TCred                 `protobuf:"bytes,14,opt,name=task_cred,json=taskCred" json:"task_cred,omitempty"`
	User                     *string                `protobuf:"bytes,15,opt,name=user" json:"user,omitempty"`
	Group                    *string                `protobuf:"bytes,16,opt,name=group" json:"group,omitempty"`
	OwnerCred                *TCred                 `protobuf:"bytes,17,opt,name=owner_cred,json=ownerCred" json:"owner_cred,omitempty"`
	OwnerUser                *string                `protobuf:"bytes,18,opt,name=owner_user,json=ownerUser" json:"owner_user,omitempty"`
	OwnerGroup               *string                `protobuf:"bytes,19,opt,name=owner_group,json=ownerGroup" json:"owner_group,omitempty"`
	OwnerContainers          *string                `protobuf:"bytes,77,opt,name=owner_containers,json=ownerContainers" json:"owner_containers,omitempty"`
	Capabilities             *TCapabilities         `protobuf:"bytes,20,opt,name=capabilities" json:"capabilities,omitempty"`
	CapabilitiesAmbient      *TCapabilities         `protobuf:"bytes,21,opt,name=capabilities_ambient,json=capabilitiesAmbient" json:"capabilities_ambient,omitempty"`
	Root                     *string                `protobuf:"bytes,22,opt,name=root" json:"root,omitempty"` // in parent namespace
	RootReadonly             *bool                  `protobuf:"varint,23,opt,name=root_readonly,json=rootReadonly" json:"root_readonly,omitempty"`
	Bind                     *TContainerBindMounts  `protobuf:"bytes,24,opt,name=bind" json:"bind,omitempty"`
	Symlink                  *TStringMap            `protobuf:"bytes,25,opt,name=symlink" json:"symlink,omitempty"`
	Devices                  *TContainerDevices     `protobuf:"bytes,26,opt,name=devices" json:"devices,omitempty"`
	Place                    *TContainerPlaceConfig `protobuf:"bytes,27,opt,name=place" json:"place,omitempty"`
	PlaceLimit               *TUintMap              `protobuf:"bytes,28,opt,name=place_limit,json=placeLimit" json:"place_limit,omitempty"`
	Cwd                      *string                `protobuf:"bytes,29,opt,name=cwd" json:"cwd,omitempty"`
	StdinPath                *string                `protobuf:"bytes,30,opt,name=stdin_path,json=stdinPath" json:"stdin_path,omitempty"`
	StdoutPath               *string                `protobuf:"bytes,31,opt,name=stdout_path,json=stdoutPath" json:"stdout_path,omitempty"`
	StderrPath               *string                `protobuf:"bytes,32,opt,name=stderr_path,json=stderrPath" json:"stderr_path,omitempty"`
	StdoutLimit              *uint64                `protobuf:"varint,33,opt,name=stdout_limit,json=stdoutLimit" json:"stdout_limit,omitempty"`
	Umask                    *uint32                `protobuf:"varint,34,opt,name=umask" json:"umask,omitempty"`
	Respawn                  *bool                  `protobuf:"varint,35,opt,name=respawn" json:"respawn,omitempty"`
	RespawnCount             *uint64                `protobuf:"varint,36,opt,name=respawn_count,json=respawnCount" json:"respawn_count,omitempty"`
	MaxRespawns              *int64                 `protobuf:"varint,37,opt,name=max_respawns,json=maxRespawns" json:"max_respawns,omitempty"`
	RespawnDelay             *uint64                `protobuf:"varint,38,opt,name=respawn_delay,json=respawnDelay" json:"respawn_delay,omitempty"`
	Controllers              *TContainerControllers `protobuf:"bytes,39,opt,name=controllers" json:"controllers,omitempty"`
	LinkMemoryWritebackBlkio *bool                  `protobuf:"varint,81,opt,name=link_memory_writeback_blkio,json=linkMemoryWritebackBlkio" json:"link_memory_writeback_blkio,omitempty"`
	CpuPolicy                *string                `protobuf:"bytes,40,opt,name=cpu_policy,json=cpuPolicy" json:"cpu_policy,omitempty"`                 // normal|idle|batch|high|rt
	CpuWeight                *float64               `protobuf:"fixed64,41,opt,name=cpu_weight,json=cpuWeight" json:"cpu_weight,omitempty"`               // 0.01 .. 100
	CpuGuarantee             *float64               `protobuf:"fixed64,42,opt,name=cpu_guarantee,json=cpuGuarantee" json:"cpu_guarantee,omitempty"`      // in cores
	CpuLimit                 *float64               `protobuf:"fixed64,43,opt,name=cpu_limit,json=cpuLimit" json:"cpu_limit,omitempty"`                  // in cores
	CpuLimitTotal            *float64               `protobuf:"fixed64,44,opt,name=cpu_limit_total,json=cpuLimitTotal" json:"cpu_limit_total,omitempty"` // deprecated (value moved to TContainerStatus)
	CpuPeriod                *uint64                `protobuf:"varint,45,opt,name=cpu_period,json=cpuPeriod" json:"cpu_period,omitempty"`                // ns
	CpuSet                   *TContainerCpuSet      `protobuf:"bytes,46,opt,name=cpu_set,json=cpuSet" json:"cpu_set,omitempty"`
	ThreadLimit              *uint64                `protobuf:"varint,47,opt,name=thread_limit,json=threadLimit" json:"thread_limit,omitempty"`
	IoPolicy                 *string                `protobuf:"bytes,48,opt,name=io_policy,json=ioPolicy" json:"io_policy,omitempty"`                       // none|rt|high|normal|batch|idle
	IoWeight                 *float64               `protobuf:"fixed64,49,opt,name=io_weight,json=ioWeight" json:"io_weight,omitempty"`                     // 0.01 .. 100
	IoLimit                  *TUintMap              `protobuf:"bytes,50,opt,name=io_limit,json=ioLimit" json:"io_limit,omitempty"`                          // bps
	IoOpsLimit               *TUintMap              `protobuf:"bytes,51,opt,name=io_ops_limit,json=ioOpsLimit" json:"io_ops_limit,omitempty"`               // iops
	MemoryGuarantee          *uint64                `protobuf:"varint,52,opt,name=memory_guarantee,json=memoryGuarantee" json:"memory_guarantee,omitempty"` // bytes
	MemoryLimit              *uint64                `protobuf:"varint,53,opt,name=memory_limit,json=memoryLimit" json:"memory_limit,omitempty"`             // bytes
	MemoryLockPolicy         *string                `protobuf:"bytes,82,opt,name=memory_lock_policy,json=memoryLockPolicy" json:"memory_lock_policy,omitempty"`
	AnonLimit                *uint64                `protobuf:"varint,54,opt,name=anon_limit,json=anonLimit" json:"anon_limit,omitempty"`
	AnonMaxUsage             *uint64                `protobuf:"varint,55,opt,name=anon_max_usage,json=anonMaxUsage" json:"anon_max_usage,omitempty"`
	DirtyLimit               *uint64                `protobuf:"varint,56,opt,name=dirty_limit,json=dirtyLimit" json:"dirty_limit,omitempty"`
	HugetlbLimit             *uint64                `protobuf:"varint,57,opt,name=hugetlb_limit,json=hugetlbLimit" json:"hugetlb_limit,omitempty"`
	RechargeOnPgfault        *bool                  `protobuf:"varint,58,opt,name=recharge_on_pgfault,json=rechargeOnPgfault" json:"recharge_on_pgfault,omitempty"`
	PressurizeOnDeath        *bool                  `protobuf:"varint,59,opt,name=pressurize_on_death,json=pressurizeOnDeath" json:"pressurize_on_death,omitempty"`
	AnonOnly                 *bool                  `protobuf:"varint,60,opt,name=anon_only,json=anonOnly" json:"anon_only,omitempty"`
	OomScoreAdj              *int32                 `protobuf:"varint,61,opt,name=oom_score_adj,json=oomScoreAdj" json:"oom_score_adj,omitempty"` // -1000 .. +1000
	OomIsFatal               *bool                  `protobuf:"varint,62,opt,name=oom_is_fatal,json=oomIsFatal" json:"oom_is_fatal,omitempty"`
	Net                      *TContainerNetConfig   `protobuf:"bytes,63,opt,name=net" json:"net,omitempty"`
	IpLimit                  *TContainerIpLimit     `protobuf:"bytes,64,opt,name=ip_limit,json=ipLimit" json:"ip_limit,omitempty"`
	Ip                       *TContainerIpConfig    `protobuf:"bytes,65,opt,name=ip" json:"ip,omitempty"`
	DefaultGw                *TContainerIpConfig    `protobuf:"bytes,66,opt,name=default_gw,json=defaultGw" json:"default_gw,omitempty"`
	Hostname                 *string                `protobuf:"bytes,67,opt,name=hostname" json:"hostname,omitempty"`
	ResolvConf               *string                `protobuf:"bytes,68,opt,name=resolv_conf,json=resolvConf" json:"resolv_conf,omitempty"`
	EtcHosts                 *string                `protobuf:"bytes,69,opt,name=etc_hosts,json=etcHosts" json:"etc_hosts,omitempty"`
	Sysctl                   *TStringMap            `protobuf:"bytes,70,opt,name=sysctl" json:"sysctl,omitempty"`
	NetGuarantee             *TUintMap              `protobuf:"bytes,71,opt,name=net_guarantee,json=netGuarantee" json:"net_guarantee,omitempty"` // bytes per second
	NetLimit                 *TUintMap              `protobuf:"bytes,72,opt,name=net_limit,json=netLimit" json:"net_limit,omitempty"`             // bytes per second
	NetRxLimit               *TUintMap              `protobuf:"bytes,73,opt,name=net_rx_limit,json=netRxLimit" json:"net_rx_limit,omitempty"`     // bytes per second
	VolumesRequired          *TContainerVolumes     `protobuf:"bytes,75,opt,name=volumes_required,json=volumesRequired" json:"volumes_required,omitempty"`
}

func (x *TContainerSpec) Reset() {
	*x = TContainerSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerSpec) ProtoMessage() {}

func (x *TContainerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerSpec.ProtoReflect.Descriptor instead.
func (*TContainerSpec) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{31}
}

func (x *TContainerSpec) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerSpec) GetWeak() bool {
	if x != nil && x.Weak != nil {
		return *x.Weak
	}
	return false
}

func (x *TContainerSpec) GetPrivate() string {
	if x != nil && x.Private != nil {
		return *x.Private
	}
	return ""
}

func (x *TContainerSpec) GetLabels() *TStringMap {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *TContainerSpec) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *TContainerSpec) GetCommandArgv() *TContainerCommandArgv {
	if x != nil {
		return x.CommandArgv
	}
	return nil
}

func (x *TContainerSpec) GetEnv() *TContainerEnv {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *TContainerSpec) GetEnvSecret() *TContainerEnv {
	if x != nil {
		return x.EnvSecret
	}
	return nil
}

func (x *TContainerSpec) GetUlimit() *TContainerUlimits {
	if x != nil {
		return x.Ulimit
	}
	return nil
}

func (x *TContainerSpec) GetCoreCommand() string {
	if x != nil && x.CoreCommand != nil {
		return *x.CoreCommand
	}
	return ""
}

func (x *TContainerSpec) GetIsolate() bool {
	if x != nil && x.Isolate != nil {
		return *x.Isolate
	}
	return false
}

func (x *TContainerSpec) GetVirtMode() string {
	if x != nil && x.VirtMode != nil {
		return *x.VirtMode
	}
	return ""
}

func (x *TContainerSpec) GetEnablePorto() string {
	if x != nil && x.EnablePorto != nil {
		return *x.EnablePorto
	}
	return ""
}

func (x *TContainerSpec) GetPortoNamespace() string {
	if x != nil && x.PortoNamespace != nil {
		return *x.PortoNamespace
	}
	return ""
}

func (x *TContainerSpec) GetCgroupfs() string {
	if x != nil && x.Cgroupfs != nil {
		return *x.Cgroupfs
	}
	return ""
}

func (x *TContainerSpec) GetUserns() bool {
	if x != nil && x.Userns != nil {
		return *x.Userns
	}
	return false
}

func (x *TContainerSpec) GetUnshareOnExec() bool {
	if x != nil && x.UnshareOnExec != nil {
		return *x.UnshareOnExec
	}
	return false
}

func (x *TContainerSpec) GetAgingTime() uint64 {
	if x != nil && x.AgingTime != nil {
		return *x.AgingTime
	}
	return 0
}

func (x *TContainerSpec) GetTaskCred() *TCred {
	if x != nil {
		return x.TaskCred
	}
	return nil
}

func (x *TContainerSpec) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *TContainerSpec) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *TContainerSpec) GetOwnerCred() *TCred {
	if x != nil {
		return x.OwnerCred
	}
	return nil
}

func (x *TContainerSpec) GetOwnerUser() string {
	if x != nil && x.OwnerUser != nil {
		return *x.OwnerUser
	}
	return ""
}

func (x *TContainerSpec) GetOwnerGroup() string {
	if x != nil && x.OwnerGroup != nil {
		return *x.OwnerGroup
	}
	return ""
}

func (x *TContainerSpec) GetOwnerContainers() string {
	if x != nil && x.OwnerContainers != nil {
		return *x.OwnerContainers
	}
	return ""
}

func (x *TContainerSpec) GetCapabilities() *TCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *TContainerSpec) GetCapabilitiesAmbient() *TCapabilities {
	if x != nil {
		return x.CapabilitiesAmbient
	}
	return nil
}

func (x *TContainerSpec) GetRoot() string {
	if x != nil && x.Root != nil {
		return *x.Root
	}
	return ""
}

func (x *TContainerSpec) GetRootReadonly() bool {
	if x != nil && x.RootReadonly != nil {
		return *x.RootReadonly
	}
	return false
}

func (x *TContainerSpec) GetBind() *TContainerBindMounts {
	if x != nil {
		return x.Bind
	}
	return nil
}

func (x *TContainerSpec) GetSymlink() *TStringMap {
	if x != nil {
		return x.Symlink
	}
	return nil
}

func (x *TContainerSpec) GetDevices() *TContainerDevices {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *TContainerSpec) GetPlace() *TContainerPlaceConfig {
	if x != nil {
		return x.Place
	}
	return nil
}

func (x *TContainerSpec) GetPlaceLimit() *TUintMap {
	if x != nil {
		return x.PlaceLimit
	}
	return nil
}

func (x *TContainerSpec) GetCwd() string {
	if x != nil && x.Cwd != nil {
		return *x.Cwd
	}
	return ""
}

func (x *TContainerSpec) GetStdinPath() string {
	if x != nil && x.StdinPath != nil {
		return *x.StdinPath
	}
	return ""
}

func (x *TContainerSpec) GetStdoutPath() string {
	if x != nil && x.StdoutPath != nil {
		return *x.StdoutPath
	}
	return ""
}

func (x *TContainerSpec) GetStderrPath() string {
	if x != nil && x.StderrPath != nil {
		return *x.StderrPath
	}
	return ""
}

func (x *TContainerSpec) GetStdoutLimit() uint64 {
	if x != nil && x.StdoutLimit != nil {
		return *x.StdoutLimit
	}
	return 0
}

func (x *TContainerSpec) GetUmask() uint32 {
	if x != nil && x.Umask != nil {
		return *x.Umask
	}
	return 0
}

func (x *TContainerSpec) GetRespawn() bool {
	if x != nil && x.Respawn != nil {
		return *x.Respawn
	}
	return false
}

func (x *TContainerSpec) GetRespawnCount() uint64 {
	if x != nil && x.RespawnCount != nil {
		return *x.RespawnCount
	}
	return 0
}

func (x *TContainerSpec) GetMaxRespawns() int64 {
	if x != nil && x.MaxRespawns != nil {
		return *x.MaxRespawns
	}
	return 0
}

func (x *TContainerSpec) GetRespawnDelay() uint64 {
	if x != nil && x.RespawnDelay != nil {
		return *x.RespawnDelay
	}
	return 0
}

func (x *TContainerSpec) GetControllers() *TContainerControllers {
	if x != nil {
		return x.Controllers
	}
	return nil
}

func (x *TContainerSpec) GetLinkMemoryWritebackBlkio() bool {
	if x != nil && x.LinkMemoryWritebackBlkio != nil {
		return *x.LinkMemoryWritebackBlkio
	}
	return false
}

func (x *TContainerSpec) GetCpuPolicy() string {
	if x != nil && x.CpuPolicy != nil {
		return *x.CpuPolicy
	}
	return ""
}

func (x *TContainerSpec) GetCpuWeight() float64 {
	if x != nil && x.CpuWeight != nil {
		return *x.CpuWeight
	}
	return 0
}

func (x *TContainerSpec) GetCpuGuarantee() float64 {
	if x != nil && x.CpuGuarantee != nil {
		return *x.CpuGuarantee
	}
	return 0
}

func (x *TContainerSpec) GetCpuLimit() float64 {
	if x != nil && x.CpuLimit != nil {
		return *x.CpuLimit
	}
	return 0
}

func (x *TContainerSpec) GetCpuLimitTotal() float64 {
	if x != nil && x.CpuLimitTotal != nil {
		return *x.CpuLimitTotal
	}
	return 0
}

func (x *TContainerSpec) GetCpuPeriod() uint64 {
	if x != nil && x.CpuPeriod != nil {
		return *x.CpuPeriod
	}
	return 0
}

func (x *TContainerSpec) GetCpuSet() *TContainerCpuSet {
	if x != nil {
		return x.CpuSet
	}
	return nil
}

func (x *TContainerSpec) GetThreadLimit() uint64 {
	if x != nil && x.ThreadLimit != nil {
		return *x.ThreadLimit
	}
	return 0
}

func (x *TContainerSpec) GetIoPolicy() string {
	if x != nil && x.IoPolicy != nil {
		return *x.IoPolicy
	}
	return ""
}

func (x *TContainerSpec) GetIoWeight() float64 {
	if x != nil && x.IoWeight != nil {
		return *x.IoWeight
	}
	return 0
}

func (x *TContainerSpec) GetIoLimit() *TUintMap {
	if x != nil {
		return x.IoLimit
	}
	return nil
}

func (x *TContainerSpec) GetIoOpsLimit() *TUintMap {
	if x != nil {
		return x.IoOpsLimit
	}
	return nil
}

func (x *TContainerSpec) GetMemoryGuarantee() uint64 {
	if x != nil && x.MemoryGuarantee != nil {
		return *x.MemoryGuarantee
	}
	return 0
}

func (x *TContainerSpec) GetMemoryLimit() uint64 {
	if x != nil && x.MemoryLimit != nil {
		return *x.MemoryLimit
	}
	return 0
}

func (x *TContainerSpec) GetMemoryLockPolicy() string {
	if x != nil && x.MemoryLockPolicy != nil {
		return *x.MemoryLockPolicy
	}
	return ""
}

func (x *TContainerSpec) GetAnonLimit() uint64 {
	if x != nil && x.AnonLimit != nil {
		return *x.AnonLimit
	}
	return 0
}

func (x *TContainerSpec) GetAnonMaxUsage() uint64 {
	if x != nil && x.AnonMaxUsage != nil {
		return *x.AnonMaxUsage
	}
	return 0
}

func (x *TContainerSpec) GetDirtyLimit() uint64 {
	if x != nil && x.DirtyLimit != nil {
		return *x.DirtyLimit
	}
	return 0
}

func (x *TContainerSpec) GetHugetlbLimit() uint64 {
	if x != nil && x.HugetlbLimit != nil {
		return *x.HugetlbLimit
	}
	return 0
}

func (x *TContainerSpec) GetRechargeOnPgfault() bool {
	if x != nil && x.RechargeOnPgfault != nil {
		return *x.RechargeOnPgfault
	}
	return false
}

func (x *TContainerSpec) GetPressurizeOnDeath() bool {
	if x != nil && x.PressurizeOnDeath != nil {
		return *x.PressurizeOnDeath
	}
	return false
}

func (x *TContainerSpec) GetAnonOnly() bool {
	if x != nil && x.AnonOnly != nil {
		return *x.AnonOnly
	}
	return false
}

func (x *TContainerSpec) GetOomScoreAdj() int32 {
	if x != nil && x.OomScoreAdj != nil {
		return *x.OomScoreAdj
	}
	return 0
}

func (x *TContainerSpec) GetOomIsFatal() bool {
	if x != nil && x.OomIsFatal != nil {
		return *x.OomIsFatal
	}
	return false
}

func (x *TContainerSpec) GetNet() *TContainerNetConfig {
	if x != nil {
		return x.Net
	}
	return nil
}

func (x *TContainerSpec) GetIpLimit() *TContainerIpLimit {
	if x != nil {
		return x.IpLimit
	}
	return nil
}

func (x *TContainerSpec) GetIp() *TContainerIpConfig {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *TContainerSpec) GetDefaultGw() *TContainerIpConfig {
	if x != nil {
		return x.DefaultGw
	}
	return nil
}

func (x *TContainerSpec) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *TContainerSpec) GetResolvConf() string {
	if x != nil && x.ResolvConf != nil {
		return *x.ResolvConf
	}
	return ""
}

func (x *TContainerSpec) GetEtcHosts() string {
	if x != nil && x.EtcHosts != nil {
		return *x.EtcHosts
	}
	return ""
}

func (x *TContainerSpec) GetSysctl() *TStringMap {
	if x != nil {
		return x.Sysctl
	}
	return nil
}

func (x *TContainerSpec) GetNetGuarantee() *TUintMap {
	if x != nil {
		return x.NetGuarantee
	}
	return nil
}

func (x *TContainerSpec) GetNetLimit() *TUintMap {
	if x != nil {
		return x.NetLimit
	}
	return nil
}

func (x *TContainerSpec) GetNetRxLimit() *TUintMap {
	if x != nil {
		return x.NetRxLimit
	}
	return nil
}

func (x *TContainerSpec) GetVolumesRequired() *TContainerVolumes {
	if x != nil {
		return x.VolumesRequired
	}
	return nil
}

type TContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec   *TContainerSpec   `protobuf:"bytes,1,req,name=spec" json:"spec,omitempty"`
	Status *TContainerStatus `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Error  *TError           `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (x *TContainer) Reset() {
	*x = TContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainer) ProtoMessage() {}

func (x *TContainer) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainer.ProtoReflect.Descriptor instead.
func (*TContainer) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *TContainer) GetSpec() *TContainerSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TContainer) GetStatus() *TContainerStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *TContainer) GetError() *TError {
	if x != nil {
		return x.Error
	}
	return nil
}

type TVolumeProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *TVolumeProperty) Reset() {
	*x = TVolumeProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeProperty) ProtoMessage() {}

func (x *TVolumeProperty) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeProperty.ProtoReflect.Descriptor instead.
func (*TVolumeProperty) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{33}
}

func (x *TVolumeProperty) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TVolumeProperty) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type TVolumeDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       *string            `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Properties []*TVolumeProperty `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty"`
	Containers []string           `protobuf:"bytes,3,rep,name=containers" json:"containers,omitempty"`
	Links      []*TVolumeLink     `protobuf:"bytes,4,rep,name=links" json:"links,omitempty"`
	ChangeTime *uint64            `protobuf:"varint,5,opt,name=change_time,json=changeTime" json:"change_time,omitempty"`
	NoChanges  *bool              `protobuf:"varint,6,opt,name=no_changes,json=noChanges" json:"no_changes,omitempty"` // change_time < changed_since
}

func (x *TVolumeDescription) Reset() {
	*x = TVolumeDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeDescription) ProtoMessage() {}

func (x *TVolumeDescription) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeDescription.ProtoReflect.Descriptor instead.
func (*TVolumeDescription) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{34}
}

func (x *TVolumeDescription) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeDescription) GetProperties() []*TVolumeProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *TVolumeDescription) GetContainers() []string {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *TVolumeDescription) GetLinks() []*TVolumeLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *TVolumeDescription) GetChangeTime() uint64 {
	if x != nil && x.ChangeTime != nil {
		return *x.ChangeTime
	}
	return 0
}

func (x *TVolumeDescription) GetNoChanges() bool {
	if x != nil && x.NoChanges != nil {
		return *x.NoChanges
	}
	return false
}

type TVolumeLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container     *string `protobuf:"bytes,1,req,name=container" json:"container,omitempty"`
	Target        *string `protobuf:"bytes,2,opt,name=target" json:"target,omitempty"`      // absolute path in container, default: anon
	Required      *bool   `protobuf:"varint,3,opt,name=required" json:"required,omitempty"` // container cannot work without it
	ReadOnly      *bool   `protobuf:"varint,4,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	HostTarget    *string `protobuf:"bytes,5,opt,name=host_target,json=hostTarget" json:"host_target,omitempty"`           // out, absolute path in host
	ContainerRoot *bool   `protobuf:"varint,6,opt,name=container_root,json=containerRoot" json:"container_root,omitempty"` // in, set container root
	ContainerCwd  *bool   `protobuf:"varint,7,opt,name=container_cwd,json=containerCwd" json:"container_cwd,omitempty"`    // in, set container cwd
}

func (x *TVolumeLink) Reset() {
	*x = TVolumeLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeLink) ProtoMessage() {}

func (x *TVolumeLink) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeLink.ProtoReflect.Descriptor instead.
func (*TVolumeLink) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{35}
}

func (x *TVolumeLink) GetContainer() string {
	if x != nil && x.Container != nil {
		return *x.Container
	}
	return ""
}

func (x *TVolumeLink) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *TVolumeLink) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *TVolumeLink) GetReadOnly() bool {
	if x != nil && x.ReadOnly != nil {
		return *x.ReadOnly
	}
	return false
}

func (x *TVolumeLink) GetHostTarget() string {
	if x != nil && x.HostTarget != nil {
		return *x.HostTarget
	}
	return ""
}

func (x *TVolumeLink) GetContainerRoot() bool {
	if x != nil && x.ContainerRoot != nil {
		return *x.ContainerRoot
	}
	return false
}

func (x *TVolumeLink) GetContainerCwd() bool {
	if x != nil && x.ContainerCwd != nil {
		return *x.ContainerCwd
	}
	return false
}

type TVolumeResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     *uint64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Guarantee *uint64 `protobuf:"varint,2,opt,name=guarantee" json:"guarantee,omitempty"`
	Usage     *uint64 `protobuf:"varint,3,opt,name=usage" json:"usage,omitempty"`         // out
	Available *uint64 `protobuf:"varint,4,opt,name=available" json:"available,omitempty"` // out
}

func (x *TVolumeResource) Reset() {
	*x = TVolumeResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeResource) ProtoMessage() {}

func (x *TVolumeResource) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeResource.ProtoReflect.Descriptor instead.
func (*TVolumeResource) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *TVolumeResource) GetLimit() uint64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *TVolumeResource) GetGuarantee() uint64 {
	if x != nil && x.Guarantee != nil {
		return *x.Guarantee
	}
	return 0
}

func (x *TVolumeResource) GetUsage() uint64 {
	if x != nil && x.Usage != nil {
		return *x.Usage
	}
	return 0
}

func (x *TVolumeResource) GetAvailable() uint64 {
	if x != nil && x.Available != nil {
		return *x.Available
	}
	return 0
}

type TVolumeDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`                 // relative path in volume
	Cred        *TCred  `protobuf:"bytes,2,opt,name=cred" json:"cred,omitempty"`                 // default: volume cred
	Permissions *uint32 `protobuf:"fixed32,3,opt,name=permissions" json:"permissions,omitempty"` // default: volume permissions
}

func (x *TVolumeDirectory) Reset() {
	*x = TVolumeDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeDirectory) ProtoMessage() {}

func (x *TVolumeDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeDirectory.ProtoReflect.Descriptor instead.
func (*TVolumeDirectory) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{37}
}

func (x *TVolumeDirectory) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeDirectory) GetCred() *TCred {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *TVolumeDirectory) GetPermissions() uint32 {
	if x != nil && x.Permissions != nil {
		return *x.Permissions
	}
	return 0
}

type TVolumeSymlink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"` // relative path in volume
	TargetPath *string `protobuf:"bytes,2,req,name=target_path,json=targetPath" json:"target_path,omitempty"`
}

func (x *TVolumeSymlink) Reset() {
	*x = TVolumeSymlink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeSymlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeSymlink) ProtoMessage() {}

func (x *TVolumeSymlink) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeSymlink.ProtoReflect.Descriptor instead.
func (*TVolumeSymlink) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{38}
}

func (x *TVolumeSymlink) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeSymlink) GetTargetPath() string {
	if x != nil && x.TargetPath != nil {
		return *x.TargetPath
	}
	return ""
}

type TVolumeShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`                               // relative path in volume
	OriginPath *string `protobuf:"bytes,2,req,name=origin_path,json=originPath" json:"origin_path,omitempty"` // absolute path to origin
	Cow        *bool   `protobuf:"varint,3,opt,name=cow" json:"cow,omitempty"`                                // default: mutable
}

func (x *TVolumeShare) Reset() {
	*x = TVolumeShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeShare) ProtoMessage() {}

func (x *TVolumeShare) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeShare.ProtoReflect.Descriptor instead.
func (*TVolumeShare) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{39}
}

func (x *TVolumeShare) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeShare) GetOriginPath() string {
	if x != nil && x.OriginPath != nil {
		return *x.OriginPath
	}
	return ""
}

func (x *TVolumeShare) GetCow() bool {
	if x != nil && x.Cow != nil {
		return *x.Cow
	}
	return false
}

type TVolumeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path         *string        `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`                                     // path in container, default: auto
	Container    *string        `protobuf:"bytes,2,opt,name=container" json:"container,omitempty"`                           // default: self
	Links        []*TVolumeLink `protobuf:"bytes,3,rep,name=links" json:"links,omitempty"`                                   // default: anon link to self
	Id           *string        `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`                                         // out
	State        *string        `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`                                   // out
	PrivateValue *string        `protobuf:"bytes,6,opt,name=private_value,json=privateValue" json:"private_value,omitempty"` // at most 4096 bytes
	DeviceName   *string        `protobuf:"bytes,7,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`       // out
	Backend      *string        `protobuf:"bytes,10,opt,name=backend" json:"backend,omitempty"`                              // default: auto
	Place        *string        `protobuf:"bytes,11,opt,name=place" json:"place,omitempty"`                                  // path in host, default: default place for self
	Storage      *string        `protobuf:"bytes,12,opt,name=storage" json:"storage,omitempty"`                              // default: temp
	Image        *string        `protobuf:"bytes,52,opt,name=image" json:"image,omitempty"`
	Layers       []string       `protobuf:"bytes,13,rep,name=layers" json:"layers,omitempty"`
	ReadOnly     *bool          `protobuf:"varint,14,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	// defines root directory user, group and permissions
	Cred           *TCred           `protobuf:"bytes,20,opt,name=cred" json:"cred,omitempty"`                 // default: self task cred
	Permissions    *uint32          `protobuf:"fixed32,21,opt,name=permissions" json:"permissions,omitempty"` // default: 0775
	Space          *TVolumeResource `protobuf:"bytes,22,opt,name=space" json:"space,omitempty"`
	Inodes         *TVolumeResource `protobuf:"bytes,23,opt,name=inodes" json:"inodes,omitempty"`
	Owner          *TCred           `protobuf:"bytes,30,opt,name=owner" json:"owner,omitempty"`                                         // default: self owner
	OwnerContainer *string          `protobuf:"bytes,31,opt,name=owner_container,json=ownerContainer" json:"owner_container,omitempty"` // default: self
	PlaceKey       *string          `protobuf:"bytes,32,opt,name=place_key,json=placeKey" json:"place_key,omitempty"`                   // out
	Creator        *string          `protobuf:"bytes,33,opt,name=creator" json:"creator,omitempty"`                                     // out
	AutoPath       *bool            `protobuf:"varint,34,opt,name=auto_path,json=autoPath" json:"auto_path,omitempty"`                  // out
	DeviceIndex    *uint32          `protobuf:"varint,35,opt,name=device_index,json=deviceIndex" json:"device_index,omitempty"`         // out
	BuildTime      *uint64          `protobuf:"varint,37,opt,name=build_time,json=buildTime" json:"build_time,omitempty"`               // out
	// customization at creation
	Directories []*TVolumeDirectory `protobuf:"bytes,40,rep,name=directories" json:"directories,omitempty"`                  // in
	Symlinks    []*TVolumeSymlink   `protobuf:"bytes,41,rep,name=symlinks" json:"symlinks,omitempty"`                        // in
	Shares      []*TVolumeShare     `protobuf:"bytes,42,rep,name=shares" json:"shares,omitempty"`                            // in
	ChangeTime  *uint64             `protobuf:"varint,50,opt,name=change_time,json=changeTime" json:"change_time,omitempty"` // out
	NoChanges   *bool               `protobuf:"varint,51,opt,name=no_changes,json=noChanges" json:"no_changes,omitempty"`    // out, change_time < changed_since
}

func (x *TVolumeSpec) Reset() {
	*x = TVolumeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeSpec) ProtoMessage() {}

func (x *TVolumeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeSpec.ProtoReflect.Descriptor instead.
func (*TVolumeSpec) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{40}
}

func (x *TVolumeSpec) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeSpec) GetContainer() string {
	if x != nil && x.Container != nil {
		return *x.Container
	}
	return ""
}

func (x *TVolumeSpec) GetLinks() []*TVolumeLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *TVolumeSpec) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *TVolumeSpec) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *TVolumeSpec) GetPrivateValue() string {
	if x != nil && x.PrivateValue != nil {
		return *x.PrivateValue
	}
	return ""
}

func (x *TVolumeSpec) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *TVolumeSpec) GetBackend() string {
	if x != nil && x.Backend != nil {
		return *x.Backend
	}
	return ""
}

func (x *TVolumeSpec) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TVolumeSpec) GetStorage() string {
	if x != nil && x.Storage != nil {
		return *x.Storage
	}
	return ""
}

func (x *TVolumeSpec) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *TVolumeSpec) GetLayers() []string {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *TVolumeSpec) GetReadOnly() bool {
	if x != nil && x.ReadOnly != nil {
		return *x.ReadOnly
	}
	return false
}

func (x *TVolumeSpec) GetCred() *TCred {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *TVolumeSpec) GetPermissions() uint32 {
	if x != nil && x.Permissions != nil {
		return *x.Permissions
	}
	return 0
}

func (x *TVolumeSpec) GetSpace() *TVolumeResource {
	if x != nil {
		return x.Space
	}
	return nil
}

func (x *TVolumeSpec) GetInodes() *TVolumeResource {
	if x != nil {
		return x.Inodes
	}
	return nil
}

func (x *TVolumeSpec) GetOwner() *TCred {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *TVolumeSpec) GetOwnerContainer() string {
	if x != nil && x.OwnerContainer != nil {
		return *x.OwnerContainer
	}
	return ""
}

func (x *TVolumeSpec) GetPlaceKey() string {
	if x != nil && x.PlaceKey != nil {
		return *x.PlaceKey
	}
	return ""
}

func (x *TVolumeSpec) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *TVolumeSpec) GetAutoPath() bool {
	if x != nil && x.AutoPath != nil {
		return *x.AutoPath
	}
	return false
}

func (x *TVolumeSpec) GetDeviceIndex() uint32 {
	if x != nil && x.DeviceIndex != nil {
		return *x.DeviceIndex
	}
	return 0
}

func (x *TVolumeSpec) GetBuildTime() uint64 {
	if x != nil && x.BuildTime != nil {
		return *x.BuildTime
	}
	return 0
}

func (x *TVolumeSpec) GetDirectories() []*TVolumeDirectory {
	if x != nil {
		return x.Directories
	}
	return nil
}

func (x *TVolumeSpec) GetSymlinks() []*TVolumeSymlink {
	if x != nil {
		return x.Symlinks
	}
	return nil
}

func (x *TVolumeSpec) GetShares() []*TVolumeShare {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *TVolumeSpec) GetChangeTime() uint64 {
	if x != nil && x.ChangeTime != nil {
		return *x.ChangeTime
	}
	return 0
}

func (x *TVolumeSpec) GetNoChanges() bool {
	if x != nil && x.NoChanges != nil {
		return *x.NoChanges
	}
	return false
}

type TLayerDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	OwnerUser    *string `protobuf:"bytes,2,req,name=owner_user,json=ownerUser" json:"owner_user,omitempty"`
	OwnerGroup   *string `protobuf:"bytes,3,req,name=owner_group,json=ownerGroup" json:"owner_group,omitempty"`
	LastUsage    *uint64 `protobuf:"varint,4,req,name=last_usage,json=lastUsage" json:"last_usage,omitempty"`
	PrivateValue *string `protobuf:"bytes,5,req,name=private_value,json=privateValue" json:"private_value,omitempty"`
}

func (x *TLayerDescription) Reset() {
	*x = TLayerDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLayerDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLayerDescription) ProtoMessage() {}

func (x *TLayerDescription) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLayerDescription.ProtoReflect.Descriptor instead.
func (*TLayerDescription) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{41}
}

func (x *TLayerDescription) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TLayerDescription) GetOwnerUser() string {
	if x != nil && x.OwnerUser != nil {
		return *x.OwnerUser
	}
	return ""
}

func (x *TLayerDescription) GetOwnerGroup() string {
	if x != nil && x.OwnerGroup != nil {
		return *x.OwnerGroup
	}
	return ""
}

func (x *TLayerDescription) GetLastUsage() uint64 {
	if x != nil && x.LastUsage != nil {
		return *x.LastUsage
	}
	return 0
}

func (x *TLayerDescription) GetPrivateValue() string {
	if x != nil && x.PrivateValue != nil {
		return *x.PrivateValue
	}
	return ""
}

type TStorageDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	OwnerUser    *string `protobuf:"bytes,2,req,name=owner_user,json=ownerUser" json:"owner_user,omitempty"`
	OwnerGroup   *string `protobuf:"bytes,3,req,name=owner_group,json=ownerGroup" json:"owner_group,omitempty"`
	LastUsage    *uint64 `protobuf:"varint,4,req,name=last_usage,json=lastUsage" json:"last_usage,omitempty"`
	PrivateValue *string `protobuf:"bytes,5,req,name=private_value,json=privateValue" json:"private_value,omitempty"`
}

func (x *TStorageDescription) Reset() {
	*x = TStorageDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStorageDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStorageDescription) ProtoMessage() {}

func (x *TStorageDescription) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStorageDescription.ProtoReflect.Descriptor instead.
func (*TStorageDescription) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{42}
}

func (x *TStorageDescription) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TStorageDescription) GetOwnerUser() string {
	if x != nil && x.OwnerUser != nil {
		return *x.OwnerUser
	}
	return ""
}

func (x *TStorageDescription) GetOwnerGroup() string {
	if x != nil && x.OwnerGroup != nil {
		return *x.OwnerGroup
	}
	return ""
}

func (x *TStorageDescription) GetLastUsage() uint64 {
	if x != nil && x.LastUsage != nil {
		return *x.LastUsage
	}
	return 0
}

func (x *TStorageDescription) GetPrivateValue() string {
	if x != nil && x.PrivateValue != nil {
		return *x.PrivateValue
	}
	return ""
}

type TMetaStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Place          *string `protobuf:"bytes,2,opt,name=place" json:"place,omitempty"`
	PrivateValue   *string `protobuf:"bytes,3,opt,name=private_value,json=privateValue" json:"private_value,omitempty"`
	SpaceLimit     *uint64 `protobuf:"varint,4,opt,name=space_limit,json=spaceLimit" json:"space_limit,omitempty"`
	InodeLimit     *uint64 `protobuf:"varint,5,opt,name=inode_limit,json=inodeLimit" json:"inode_limit,omitempty"`
	SpaceUsed      *uint64 `protobuf:"varint,6,opt,name=space_used,json=spaceUsed" json:"space_used,omitempty"`                // out
	SpaceAvailable *uint64 `protobuf:"varint,7,opt,name=space_available,json=spaceAvailable" json:"space_available,omitempty"` // out
	InodeUsed      *uint64 `protobuf:"varint,8,opt,name=inode_used,json=inodeUsed" json:"inode_used,omitempty"`                // out
	InodeAvailable *uint64 `protobuf:"varint,9,opt,name=inode_available,json=inodeAvailable" json:"inode_available,omitempty"` // out
	OwnerUser      *string `protobuf:"bytes,10,opt,name=owner_user,json=ownerUser" json:"owner_user,omitempty"`                // out
	OwnerGroup     *string `protobuf:"bytes,11,opt,name=owner_group,json=ownerGroup" json:"owner_group,omitempty"`             // out
	LastUsage      *uint64 `protobuf:"varint,12,opt,name=last_usage,json=lastUsage" json:"last_usage,omitempty"`               // out
}

func (x *TMetaStorage) Reset() {
	*x = TMetaStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMetaStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMetaStorage) ProtoMessage() {}

func (x *TMetaStorage) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMetaStorage.ProtoReflect.Descriptor instead.
func (*TMetaStorage) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{43}
}

func (x *TMetaStorage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TMetaStorage) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TMetaStorage) GetPrivateValue() string {
	if x != nil && x.PrivateValue != nil {
		return *x.PrivateValue
	}
	return ""
}

func (x *TMetaStorage) GetSpaceLimit() uint64 {
	if x != nil && x.SpaceLimit != nil {
		return *x.SpaceLimit
	}
	return 0
}

func (x *TMetaStorage) GetInodeLimit() uint64 {
	if x != nil && x.InodeLimit != nil {
		return *x.InodeLimit
	}
	return 0
}

func (x *TMetaStorage) GetSpaceUsed() uint64 {
	if x != nil && x.SpaceUsed != nil {
		return *x.SpaceUsed
	}
	return 0
}

func (x *TMetaStorage) GetSpaceAvailable() uint64 {
	if x != nil && x.SpaceAvailable != nil {
		return *x.SpaceAvailable
	}
	return 0
}

func (x *TMetaStorage) GetInodeUsed() uint64 {
	if x != nil && x.InodeUsed != nil {
		return *x.InodeUsed
	}
	return 0
}

func (x *TMetaStorage) GetInodeAvailable() uint64 {
	if x != nil && x.InodeAvailable != nil {
		return *x.InodeAvailable
	}
	return 0
}

func (x *TMetaStorage) GetOwnerUser() string {
	if x != nil && x.OwnerUser != nil {
		return *x.OwnerUser
	}
	return ""
}

func (x *TMetaStorage) GetOwnerGroup() string {
	if x != nil && x.OwnerGroup != nil {
		return *x.OwnerGroup
	}
	return ""
}

func (x *TMetaStorage) GetLastUsage() uint64 {
	if x != nil && x.LastUsage != nil {
		return *x.LastUsage
	}
	return 0
}

// Get porto version
type TVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TVersionRequest) Reset() {
	*x = TVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVersionRequest) ProtoMessage() {}

func (x *TVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVersionRequest.ProtoReflect.Descriptor instead.
func (*TVersionRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{44}
}

type TVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag      *string `protobuf:"bytes,1,req,name=tag" json:"tag,omitempty"`
	Revision *string `protobuf:"bytes,2,req,name=revision" json:"revision,omitempty"`
}

func (x *TVersionResponse) Reset() {
	*x = TVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVersionResponse) ProtoMessage() {}

func (x *TVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVersionResponse.ProtoReflect.Descriptor instead.
func (*TVersionResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{45}
}

func (x *TVersionResponse) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *TVersionResponse) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

// Get porto statistics
type TGetSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TGetSystemRequest) Reset() {
	*x = TGetSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetSystemRequest) ProtoMessage() {}

func (x *TGetSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetSystemRequest.ProtoReflect.Descriptor instead.
func (*TGetSystemRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{46}
}

// Clear porto statistics
type TClearStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *string `protobuf:"bytes,1,opt,name=stat" json:"stat,omitempty"`
}

func (x *TClearStatisticsRequest) Reset() {
	*x = TClearStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TClearStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TClearStatisticsRequest) ProtoMessage() {}

func (x *TClearStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TClearStatisticsRequest.ProtoReflect.Descriptor instead.
func (*TClearStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{47}
}

func (x *TClearStatisticsRequest) GetStat() string {
	if x != nil && x.Stat != nil {
		return *x.Stat
	}
	return ""
}

type TGetSystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortoVersion          *string `protobuf:"bytes,1,req,name=porto_version,json=portoVersion" json:"porto_version,omitempty"`
	PortoRevision         *string `protobuf:"bytes,2,req,name=porto_revision,json=portoRevision" json:"porto_revision,omitempty"`
	KernelVersion         *string `protobuf:"bytes,3,req,name=kernel_version,json=kernelVersion" json:"kernel_version,omitempty"`
	Errors                *uint64 `protobuf:"fixed64,4,req,name=errors" json:"errors,omitempty"`
	Warnings              *uint64 `protobuf:"fixed64,5,req,name=warnings" json:"warnings,omitempty"`
	Fatals                *uint64 `protobuf:"fixed64,11,req,name=fatals" json:"fatals,omitempty"`
	PortoStarts           *uint64 `protobuf:"fixed64,6,req,name=porto_starts,json=portoStarts" json:"porto_starts,omitempty"`
	PortoUptime           *uint64 `protobuf:"fixed64,7,req,name=porto_uptime,json=portoUptime" json:"porto_uptime,omitempty"`
	MasterUptime          *uint64 `protobuf:"fixed64,8,req,name=master_uptime,json=masterUptime" json:"master_uptime,omitempty"`
	Taints                *uint64 `protobuf:"fixed64,9,opt,name=taints" json:"taints,omitempty"`
	Frozen                *bool   `protobuf:"varint,10,opt,name=frozen" json:"frozen,omitempty"`
	Verbose               *bool   `protobuf:"varint,100,req,name=verbose" json:"verbose,omitempty"`
	Debug                 *bool   `protobuf:"varint,101,req,name=debug" json:"debug,omitempty"`
	LogLines              *uint64 `protobuf:"fixed64,102,req,name=log_lines,json=logLines" json:"log_lines,omitempty"`
	LogBytes              *uint64 `protobuf:"fixed64,103,req,name=log_bytes,json=logBytes" json:"log_bytes,omitempty"`
	StreamRotateBytes     *uint64 `protobuf:"fixed64,104,req,name=stream_rotate_bytes,json=streamRotateBytes" json:"stream_rotate_bytes,omitempty"`
	StreamRotateErrors    *uint64 `protobuf:"fixed64,105,req,name=stream_rotate_errors,json=streamRotateErrors" json:"stream_rotate_errors,omitempty"`
	LogLinesLost          *uint64 `protobuf:"fixed64,106,req,name=log_lines_lost,json=logLinesLost" json:"log_lines_lost,omitempty"`
	LogBytesLost          *uint64 `protobuf:"fixed64,107,req,name=log_bytes_lost,json=logBytesLost" json:"log_bytes_lost,omitempty"`
	LogOpen               *uint64 `protobuf:"fixed64,108,req,name=log_open,json=logOpen" json:"log_open,omitempty"`
	ContainerCount        *uint64 `protobuf:"fixed64,200,req,name=container_count,json=containerCount" json:"container_count,omitempty"`
	ContainerLimit        *uint64 `protobuf:"fixed64,201,req,name=container_limit,json=containerLimit" json:"container_limit,omitempty"`
	ContainerRunning      *uint64 `protobuf:"fixed64,202,req,name=container_running,json=containerRunning" json:"container_running,omitempty"`
	ContainerCreated      *uint64 `protobuf:"fixed64,203,req,name=container_created,json=containerCreated" json:"container_created,omitempty"`
	ContainerStarted      *uint64 `protobuf:"fixed64,204,req,name=container_started,json=containerStarted" json:"container_started,omitempty"`
	ContainerStartFailed  *uint64 `protobuf:"fixed64,205,req,name=container_start_failed,json=containerStartFailed" json:"container_start_failed,omitempty"`
	ContainerOom          *uint64 `protobuf:"fixed64,206,req,name=container_oom,json=containerOom" json:"container_oom,omitempty"`
	ContainerBuried       *uint64 `protobuf:"fixed64,207,req,name=container_buried,json=containerBuried" json:"container_buried,omitempty"`
	ContainerLost         *uint64 `protobuf:"fixed64,208,req,name=container_lost,json=containerLost" json:"container_lost,omitempty"`
	ContainerTainted      *uint64 `protobuf:"fixed64,209,opt,name=container_tainted,json=containerTainted" json:"container_tainted,omitempty"`
	PostforkIssues        *uint64 `protobuf:"fixed64,210,opt,name=postfork_issues,json=postforkIssues" json:"postfork_issues,omitempty"`
	VolumeCount           *uint64 `protobuf:"fixed64,300,req,name=volume_count,json=volumeCount" json:"volume_count,omitempty"`
	VolumeLimit           *uint64 `protobuf:"fixed64,301,req,name=volume_limit,json=volumeLimit" json:"volume_limit,omitempty"`
	VolumeCreated         *uint64 `protobuf:"fixed64,303,req,name=volume_created,json=volumeCreated" json:"volume_created,omitempty"`
	VolumeFailed          *uint64 `protobuf:"fixed64,304,req,name=volume_failed,json=volumeFailed" json:"volume_failed,omitempty"`
	VolumeLinks           *uint64 `protobuf:"fixed64,305,req,name=volume_links,json=volumeLinks" json:"volume_links,omitempty"`
	VolumeLinksMounted    *uint64 `protobuf:"fixed64,306,req,name=volume_links_mounted,json=volumeLinksMounted" json:"volume_links_mounted,omitempty"`
	VolumeLost            *uint64 `protobuf:"fixed64,307,req,name=volume_lost,json=volumeLost" json:"volume_lost,omitempty"`
	LayerImport           *uint64 `protobuf:"fixed64,390,req,name=layer_import,json=layerImport" json:"layer_import,omitempty"`
	LayerExport           *uint64 `protobuf:"fixed64,391,req,name=layer_export,json=layerExport" json:"layer_export,omitempty"`
	LayerRemove           *uint64 `protobuf:"fixed64,392,req,name=layer_remove,json=layerRemove" json:"layer_remove,omitempty"`
	ClientCount           *uint64 `protobuf:"fixed64,400,req,name=client_count,json=clientCount" json:"client_count,omitempty"`
	ClientMax             *uint64 `protobuf:"fixed64,401,req,name=client_max,json=clientMax" json:"client_max,omitempty"`
	ClientConnected       *uint64 `protobuf:"fixed64,402,req,name=client_connected,json=clientConnected" json:"client_connected,omitempty"`
	RequestQueued         *uint64 `protobuf:"fixed64,500,req,name=request_queued,json=requestQueued" json:"request_queued,omitempty"`
	RequestCompleted      *uint64 `protobuf:"fixed64,501,req,name=request_completed,json=requestCompleted" json:"request_completed,omitempty"`
	RequestFailed         *uint64 `protobuf:"fixed64,502,req,name=request_failed,json=requestFailed" json:"request_failed,omitempty"`
	RequestThreads        *uint64 `protobuf:"fixed64,503,req,name=request_threads,json=requestThreads" json:"request_threads,omitempty"`
	RequestLonger_1S      *uint64 `protobuf:"fixed64,504,req,name=request_longer_1s,json=requestLonger1s" json:"request_longer_1s,omitempty"`
	RequestLonger_3S      *uint64 `protobuf:"fixed64,505,req,name=request_longer_3s,json=requestLonger3s" json:"request_longer_3s,omitempty"`
	RequestLonger_30S     *uint64 `protobuf:"fixed64,506,req,name=request_longer_30s,json=requestLonger30s" json:"request_longer_30s,omitempty"`
	RequestLonger_5M      *uint64 `protobuf:"fixed64,507,req,name=request_longer_5m,json=requestLonger5m" json:"request_longer_5m,omitempty"`
	RequestTopRunningTime *uint64 `protobuf:"fixed64,508,opt,name=request_top_running_time,json=requestTopRunningTime" json:"request_top_running_time,omitempty"` // seconds
	FailSystem            *uint64 `protobuf:"fixed64,600,req,name=fail_system,json=failSystem" json:"fail_system,omitempty"`
	FailInvalidValue      *uint64 `protobuf:"fixed64,601,req,name=fail_invalid_value,json=failInvalidValue" json:"fail_invalid_value,omitempty"`
	FailInvalidCommand    *uint64 `protobuf:"fixed64,602,req,name=fail_invalid_command,json=failInvalidCommand" json:"fail_invalid_command,omitempty"`
	FailMemoryGuarantee   *uint64 `protobuf:"fixed64,603,opt,name=fail_memory_guarantee,json=failMemoryGuarantee" json:"fail_memory_guarantee,omitempty"`
	FailInvalidNetaddr    *uint64 `protobuf:"fixed64,604,opt,name=fail_invalid_netaddr,json=failInvalidNetaddr" json:"fail_invalid_netaddr,omitempty"`
	NetworkCount          *uint64 `protobuf:"fixed64,700,opt,name=network_count,json=networkCount" json:"network_count,omitempty"`
	NetworkCreated        *uint64 `protobuf:"fixed64,701,opt,name=network_created,json=networkCreated" json:"network_created,omitempty"`
	NetworkProblems       *uint64 `protobuf:"fixed64,702,opt,name=network_problems,json=networkProblems" json:"network_problems,omitempty"`
	NetworkRepairs        *uint64 `protobuf:"fixed64,703,opt,name=network_repairs,json=networkRepairs" json:"network_repairs,omitempty"`
}

func (x *TGetSystemResponse) Reset() {
	*x = TGetSystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetSystemResponse) ProtoMessage() {}

func (x *TGetSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetSystemResponse.ProtoReflect.Descriptor instead.
func (*TGetSystemResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{48}
}

func (x *TGetSystemResponse) GetPortoVersion() string {
	if x != nil && x.PortoVersion != nil {
		return *x.PortoVersion
	}
	return ""
}

func (x *TGetSystemResponse) GetPortoRevision() string {
	if x != nil && x.PortoRevision != nil {
		return *x.PortoRevision
	}
	return ""
}

func (x *TGetSystemResponse) GetKernelVersion() string {
	if x != nil && x.KernelVersion != nil {
		return *x.KernelVersion
	}
	return ""
}

func (x *TGetSystemResponse) GetErrors() uint64 {
	if x != nil && x.Errors != nil {
		return *x.Errors
	}
	return 0
}

func (x *TGetSystemResponse) GetWarnings() uint64 {
	if x != nil && x.Warnings != nil {
		return *x.Warnings
	}
	return 0
}

func (x *TGetSystemResponse) GetFatals() uint64 {
	if x != nil && x.Fatals != nil {
		return *x.Fatals
	}
	return 0
}

func (x *TGetSystemResponse) GetPortoStarts() uint64 {
	if x != nil && x.PortoStarts != nil {
		return *x.PortoStarts
	}
	return 0
}

func (x *TGetSystemResponse) GetPortoUptime() uint64 {
	if x != nil && x.PortoUptime != nil {
		return *x.PortoUptime
	}
	return 0
}

func (x *TGetSystemResponse) GetMasterUptime() uint64 {
	if x != nil && x.MasterUptime != nil {
		return *x.MasterUptime
	}
	return 0
}

func (x *TGetSystemResponse) GetTaints() uint64 {
	if x != nil && x.Taints != nil {
		return *x.Taints
	}
	return 0
}

func (x *TGetSystemResponse) GetFrozen() bool {
	if x != nil && x.Frozen != nil {
		return *x.Frozen
	}
	return false
}

func (x *TGetSystemResponse) GetVerbose() bool {
	if x != nil && x.Verbose != nil {
		return *x.Verbose
	}
	return false
}

func (x *TGetSystemResponse) GetDebug() bool {
	if x != nil && x.Debug != nil {
		return *x.Debug
	}
	return false
}

func (x *TGetSystemResponse) GetLogLines() uint64 {
	if x != nil && x.LogLines != nil {
		return *x.LogLines
	}
	return 0
}

func (x *TGetSystemResponse) GetLogBytes() uint64 {
	if x != nil && x.LogBytes != nil {
		return *x.LogBytes
	}
	return 0
}

func (x *TGetSystemResponse) GetStreamRotateBytes() uint64 {
	if x != nil && x.StreamRotateBytes != nil {
		return *x.StreamRotateBytes
	}
	return 0
}

func (x *TGetSystemResponse) GetStreamRotateErrors() uint64 {
	if x != nil && x.StreamRotateErrors != nil {
		return *x.StreamRotateErrors
	}
	return 0
}

func (x *TGetSystemResponse) GetLogLinesLost() uint64 {
	if x != nil && x.LogLinesLost != nil {
		return *x.LogLinesLost
	}
	return 0
}

func (x *TGetSystemResponse) GetLogBytesLost() uint64 {
	if x != nil && x.LogBytesLost != nil {
		return *x.LogBytesLost
	}
	return 0
}

func (x *TGetSystemResponse) GetLogOpen() uint64 {
	if x != nil && x.LogOpen != nil {
		return *x.LogOpen
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerCount() uint64 {
	if x != nil && x.ContainerCount != nil {
		return *x.ContainerCount
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerLimit() uint64 {
	if x != nil && x.ContainerLimit != nil {
		return *x.ContainerLimit
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerRunning() uint64 {
	if x != nil && x.ContainerRunning != nil {
		return *x.ContainerRunning
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerCreated() uint64 {
	if x != nil && x.ContainerCreated != nil {
		return *x.ContainerCreated
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerStarted() uint64 {
	if x != nil && x.ContainerStarted != nil {
		return *x.ContainerStarted
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerStartFailed() uint64 {
	if x != nil && x.ContainerStartFailed != nil {
		return *x.ContainerStartFailed
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerOom() uint64 {
	if x != nil && x.ContainerOom != nil {
		return *x.ContainerOom
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerBuried() uint64 {
	if x != nil && x.ContainerBuried != nil {
		return *x.ContainerBuried
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerLost() uint64 {
	if x != nil && x.ContainerLost != nil {
		return *x.ContainerLost
	}
	return 0
}

func (x *TGetSystemResponse) GetContainerTainted() uint64 {
	if x != nil && x.ContainerTainted != nil {
		return *x.ContainerTainted
	}
	return 0
}

func (x *TGetSystemResponse) GetPostforkIssues() uint64 {
	if x != nil && x.PostforkIssues != nil {
		return *x.PostforkIssues
	}
	return 0
}

func (x *TGetSystemResponse) GetVolumeCount() uint64 {
	if x != nil && x.VolumeCount != nil {
		return *x.VolumeCount
	}
	return 0
}

func (x *TGetSystemResponse) GetVolumeLimit() uint64 {
	if x != nil && x.VolumeLimit != nil {
		return *x.VolumeLimit
	}
	return 0
}

func (x *TGetSystemResponse) GetVolumeCreated() uint64 {
	if x != nil && x.VolumeCreated != nil {
		return *x.VolumeCreated
	}
	return 0
}

func (x *TGetSystemResponse) GetVolumeFailed() uint64 {
	if x != nil && x.VolumeFailed != nil {
		return *x.VolumeFailed
	}
	return 0
}

func (x *TGetSystemResponse) GetVolumeLinks() uint64 {
	if x != nil && x.VolumeLinks != nil {
		return *x.VolumeLinks
	}
	return 0
}

func (x *TGetSystemResponse) GetVolumeLinksMounted() uint64 {
	if x != nil && x.VolumeLinksMounted != nil {
		return *x.VolumeLinksMounted
	}
	return 0
}

func (x *TGetSystemResponse) GetVolumeLost() uint64 {
	if x != nil && x.VolumeLost != nil {
		return *x.VolumeLost
	}
	return 0
}

func (x *TGetSystemResponse) GetLayerImport() uint64 {
	if x != nil && x.LayerImport != nil {
		return *x.LayerImport
	}
	return 0
}

func (x *TGetSystemResponse) GetLayerExport() uint64 {
	if x != nil && x.LayerExport != nil {
		return *x.LayerExport
	}
	return 0
}

func (x *TGetSystemResponse) GetLayerRemove() uint64 {
	if x != nil && x.LayerRemove != nil {
		return *x.LayerRemove
	}
	return 0
}

func (x *TGetSystemResponse) GetClientCount() uint64 {
	if x != nil && x.ClientCount != nil {
		return *x.ClientCount
	}
	return 0
}

func (x *TGetSystemResponse) GetClientMax() uint64 {
	if x != nil && x.ClientMax != nil {
		return *x.ClientMax
	}
	return 0
}

func (x *TGetSystemResponse) GetClientConnected() uint64 {
	if x != nil && x.ClientConnected != nil {
		return *x.ClientConnected
	}
	return 0
}

func (x *TGetSystemResponse) GetRequestQueued() uint64 {
	if x != nil && x.RequestQueued != nil {
		return *x.RequestQueued
	}
	return 0
}

func (x *TGetSystemResponse) GetRequestCompleted() uint64 {
	if x != nil && x.RequestCompleted != nil {
		return *x.RequestCompleted
	}
	return 0
}

func (x *TGetSystemResponse) GetRequestFailed() uint64 {
	if x != nil && x.RequestFailed != nil {
		return *x.RequestFailed
	}
	return 0
}

func (x *TGetSystemResponse) GetRequestThreads() uint64 {
	if x != nil && x.RequestThreads != nil {
		return *x.RequestThreads
	}
	return 0
}

func (x *TGetSystemResponse) GetRequestLonger_1S() uint64 {
	if x != nil && x.RequestLonger_1S != nil {
		return *x.RequestLonger_1S
	}
	return 0
}

func (x *TGetSystemResponse) GetRequestLonger_3S() uint64 {
	if x != nil && x.RequestLonger_3S != nil {
		return *x.RequestLonger_3S
	}
	return 0
}

func (x *TGetSystemResponse) GetRequestLonger_30S() uint64 {
	if x != nil && x.RequestLonger_30S != nil {
		return *x.RequestLonger_30S
	}
	return 0
}

func (x *TGetSystemResponse) GetRequestLonger_5M() uint64 {
	if x != nil && x.RequestLonger_5M != nil {
		return *x.RequestLonger_5M
	}
	return 0
}

func (x *TGetSystemResponse) GetRequestTopRunningTime() uint64 {
	if x != nil && x.RequestTopRunningTime != nil {
		return *x.RequestTopRunningTime
	}
	return 0
}

func (x *TGetSystemResponse) GetFailSystem() uint64 {
	if x != nil && x.FailSystem != nil {
		return *x.FailSystem
	}
	return 0
}

func (x *TGetSystemResponse) GetFailInvalidValue() uint64 {
	if x != nil && x.FailInvalidValue != nil {
		return *x.FailInvalidValue
	}
	return 0
}

func (x *TGetSystemResponse) GetFailInvalidCommand() uint64 {
	if x != nil && x.FailInvalidCommand != nil {
		return *x.FailInvalidCommand
	}
	return 0
}

func (x *TGetSystemResponse) GetFailMemoryGuarantee() uint64 {
	if x != nil && x.FailMemoryGuarantee != nil {
		return *x.FailMemoryGuarantee
	}
	return 0
}

func (x *TGetSystemResponse) GetFailInvalidNetaddr() uint64 {
	if x != nil && x.FailInvalidNetaddr != nil {
		return *x.FailInvalidNetaddr
	}
	return 0
}

func (x *TGetSystemResponse) GetNetworkCount() uint64 {
	if x != nil && x.NetworkCount != nil {
		return *x.NetworkCount
	}
	return 0
}

func (x *TGetSystemResponse) GetNetworkCreated() uint64 {
	if x != nil && x.NetworkCreated != nil {
		return *x.NetworkCreated
	}
	return 0
}

func (x *TGetSystemResponse) GetNetworkProblems() uint64 {
	if x != nil && x.NetworkProblems != nil {
		return *x.NetworkProblems
	}
	return 0
}

func (x *TGetSystemResponse) GetNetworkRepairs() uint64 {
	if x != nil && x.NetworkRepairs != nil {
		return *x.NetworkRepairs
	}
	return 0
}

// Change porto state
type TSetSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frozen  *bool `protobuf:"varint,10,opt,name=frozen" json:"frozen,omitempty"`
	Verbose *bool `protobuf:"varint,100,opt,name=verbose" json:"verbose,omitempty"`
	Debug   *bool `protobuf:"varint,101,opt,name=debug" json:"debug,omitempty"`
}

func (x *TSetSystemRequest) Reset() {
	*x = TSetSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSetSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSetSystemRequest) ProtoMessage() {}

func (x *TSetSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSetSystemRequest.ProtoReflect.Descriptor instead.
func (*TSetSystemRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{49}
}

func (x *TSetSystemRequest) GetFrozen() bool {
	if x != nil && x.Frozen != nil {
		return *x.Frozen
	}
	return false
}

func (x *TSetSystemRequest) GetVerbose() bool {
	if x != nil && x.Verbose != nil {
		return *x.Verbose
	}
	return false
}

func (x *TSetSystemRequest) GetDebug() bool {
	if x != nil && x.Debug != nil {
		return *x.Debug
	}
	return false
}

type TSetSystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TSetSystemResponse) Reset() {
	*x = TSetSystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSetSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSetSystemResponse) ProtoMessage() {}

func (x *TSetSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSetSystemResponse.ProtoReflect.Descriptor instead.
func (*TSetSystemResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{50}
}

type TCreateFromSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container *TContainerSpec `protobuf:"bytes,1,req,name=container" json:"container,omitempty"`
	Volumes   []*TVolumeSpec  `protobuf:"bytes,2,rep,name=volumes" json:"volumes,omitempty"`
	Start     *bool           `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
}

func (x *TCreateFromSpecRequest) Reset() {
	*x = TCreateFromSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCreateFromSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCreateFromSpecRequest) ProtoMessage() {}

func (x *TCreateFromSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCreateFromSpecRequest.ProtoReflect.Descriptor instead.
func (*TCreateFromSpecRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{51}
}

func (x *TCreateFromSpecRequest) GetContainer() *TContainerSpec {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *TCreateFromSpecRequest) GetVolumes() []*TVolumeSpec {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *TCreateFromSpecRequest) GetStart() bool {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return false
}

type TUpdateFromSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container *TContainerSpec `protobuf:"bytes,1,req,name=container" json:"container,omitempty"`
}

func (x *TUpdateFromSpecRequest) Reset() {
	*x = TUpdateFromSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TUpdateFromSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TUpdateFromSpecRequest) ProtoMessage() {}

func (x *TUpdateFromSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TUpdateFromSpecRequest.ProtoReflect.Descriptor instead.
func (*TUpdateFromSpecRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{52}
}

func (x *TUpdateFromSpecRequest) GetContainer() *TContainerSpec {
	if x != nil {
		return x.Container
	}
	return nil
}

type TListContainersFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string     `protobuf:"bytes,1,req,name=name" json:"name,omitempty"` // name or wildcards, default: all
	Labels       *TStringMap `protobuf:"bytes,2,opt,name=labels" json:"labels,omitempty"`
	ChangedSince *uint64     `protobuf:"varint,3,opt,name=changed_since,json=changedSince" json:"changed_since,omitempty"` // change_time >= changed_since
}

func (x *TListContainersFilter) Reset() {
	*x = TListContainersFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListContainersFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListContainersFilter) ProtoMessage() {}

func (x *TListContainersFilter) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListContainersFilter.ProtoReflect.Descriptor instead.
func (*TListContainersFilter) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{53}
}

func (x *TListContainersFilter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TListContainersFilter) GetLabels() *TStringMap {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *TListContainersFilter) GetChangedSince() uint64 {
	if x != nil && x.ChangedSince != nil {
		return *x.ChangedSince
	}
	return 0
}

type TStreamDumpOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StdstreamOffset *uint64 `protobuf:"varint,2,req,name=stdstream_offset,json=stdstreamOffset" json:"stdstream_offset,omitempty"` // default: 0
	StdstreamLimit  *uint64 `protobuf:"varint,3,req,name=stdstream_limit,json=stdstreamLimit" json:"stdstream_limit,omitempty"`    // default: 8Mb
}

func (x *TStreamDumpOptions) Reset() {
	*x = TStreamDumpOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStreamDumpOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStreamDumpOptions) ProtoMessage() {}

func (x *TStreamDumpOptions) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStreamDumpOptions.ProtoReflect.Descriptor instead.
func (*TStreamDumpOptions) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{54}
}

func (x *TStreamDumpOptions) GetStdstreamOffset() uint64 {
	if x != nil && x.StdstreamOffset != nil {
		return *x.StdstreamOffset
	}
	return 0
}

func (x *TStreamDumpOptions) GetStdstreamLimit() uint64 {
	if x != nil && x.StdstreamLimit != nil {
		return *x.StdstreamLimit
	}
	return 0
}

type TListContainersFieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties    []string            `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty"`                            // property names, default: all
	StdoutOptions *TStreamDumpOptions `protobuf:"bytes,2,opt,name=stdout_options,json=stdoutOptions" json:"stdout_options,omitempty"` // for GetIndexed stdout
	StderrOptions *TStreamDumpOptions `protobuf:"bytes,3,opt,name=stderr_options,json=stderrOptions" json:"stderr_options,omitempty"` // for GetIndexed stderr
}

func (x *TListContainersFieldOptions) Reset() {
	*x = TListContainersFieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListContainersFieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListContainersFieldOptions) ProtoMessage() {}

func (x *TListContainersFieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListContainersFieldOptions.ProtoReflect.Descriptor instead.
func (*TListContainersFieldOptions) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{55}
}

func (x *TListContainersFieldOptions) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *TListContainersFieldOptions) GetStdoutOptions() *TStreamDumpOptions {
	if x != nil {
		return x.StdoutOptions
	}
	return nil
}

func (x *TListContainersFieldOptions) GetStderrOptions() *TStreamDumpOptions {
	if x != nil {
		return x.StderrOptions
	}
	return nil
}

type TListContainersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters      []*TListContainersFilter     `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty"`
	FieldOptions *TListContainersFieldOptions `protobuf:"bytes,2,opt,name=field_options,json=fieldOptions" json:"field_options,omitempty"`
}

func (x *TListContainersRequest) Reset() {
	*x = TListContainersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListContainersRequest) ProtoMessage() {}

func (x *TListContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListContainersRequest.ProtoReflect.Descriptor instead.
func (*TListContainersRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{56}
}

func (x *TListContainersRequest) GetFilters() []*TListContainersFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *TListContainersRequest) GetFieldOptions() *TListContainersFieldOptions {
	if x != nil {
		return x.FieldOptions
	}
	return nil
}

type TListContainersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Containers []*TContainer `protobuf:"bytes,1,rep,name=containers" json:"containers,omitempty"`
}

func (x *TListContainersResponse) Reset() {
	*x = TListContainersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TListContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TListContainersResponse) ProtoMessage() {}

func (x *TListContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TListContainersResponse.ProtoReflect.Descriptor instead.
func (*TListContainersResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{57}
}

func (x *TListContainersResponse) GetContainers() []*TContainer {
	if x != nil {
		return x.Containers
	}
	return nil
}

// List available properties
type TContainerPropertyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TContainerPropertyListRequest) Reset() {
	*x = TContainerPropertyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerPropertyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerPropertyListRequest) ProtoMessage() {}

func (x *TContainerPropertyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerPropertyListRequest.ProtoReflect.Descriptor instead.
func (*TContainerPropertyListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{58}
}

type TContainerPropertyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TContainerPropertyListResponse_TContainerPropertyListEntry `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (x *TContainerPropertyListResponse) Reset() {
	*x = TContainerPropertyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerPropertyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerPropertyListResponse) ProtoMessage() {}

func (x *TContainerPropertyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerPropertyListResponse.ProtoReflect.Descriptor instead.
func (*TContainerPropertyListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{59}
}

func (x *TContainerPropertyListResponse) GetList() []*TContainerPropertyListResponse_TContainerPropertyListEntry {
	if x != nil {
		return x.List
	}
	return nil
}

// deprecated, use PropertyList
type TContainerDataListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TContainerDataListRequest) Reset() {
	*x = TContainerDataListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerDataListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerDataListRequest) ProtoMessage() {}

func (x *TContainerDataListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerDataListRequest.ProtoReflect.Descriptor instead.
func (*TContainerDataListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{60}
}

type TContainerDataListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TContainerDataListResponse_TContainerDataListEntry `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (x *TContainerDataListResponse) Reset() {
	*x = TContainerDataListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerDataListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerDataListResponse) ProtoMessage() {}

func (x *TContainerDataListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerDataListResponse.ProtoReflect.Descriptor instead.
func (*TContainerDataListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{61}
}

func (x *TContainerDataListResponse) GetList() []*TContainerDataListResponse_TContainerDataListEntry {
	if x != nil {
		return x.List
	}
	return nil
}

// Create stopped container
type TContainerCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
}

func (x *TContainerCreateRequest) Reset() {
	*x = TContainerCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerCreateRequest) ProtoMessage() {}

func (x *TContainerCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerCreateRequest.ProtoReflect.Descriptor instead.
func (*TContainerCreateRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{62}
}

func (x *TContainerCreateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// Stop and destroy container
type TContainerDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
}

func (x *TContainerDestroyRequest) Reset() {
	*x = TContainerDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerDestroyRequest) ProtoMessage() {}

func (x *TContainerDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerDestroyRequest.ProtoReflect.Descriptor instead.
func (*TContainerDestroyRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{63}
}

func (x *TContainerDestroyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// List container names
type TContainerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mask         *string `protobuf:"bytes,1,opt,name=mask" json:"mask,omitempty"`
	ChangedSince *uint64 `protobuf:"varint,2,opt,name=changed_since,json=changedSince" json:"changed_since,omitempty"` // change_time >= changed_since
}

func (x *TContainerListRequest) Reset() {
	*x = TContainerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerListRequest) ProtoMessage() {}

func (x *TContainerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerListRequest.ProtoReflect.Descriptor instead.
func (*TContainerListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{64}
}

func (x *TContainerListRequest) GetMask() string {
	if x != nil && x.Mask != nil {
		return *x.Mask
	}
	return ""
}

func (x *TContainerListRequest) GetChangedSince() uint64 {
	if x != nil && x.ChangedSince != nil {
		return *x.ChangedSince
	}
	return 0
}

type TContainerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []string `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
}

func (x *TContainerListResponse) Reset() {
	*x = TContainerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerListResponse) ProtoMessage() {}

func (x *TContainerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerListResponse.ProtoReflect.Descriptor instead.
func (*TContainerListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{65}
}

func (x *TContainerListResponse) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

// Read one property
type TContainerGetPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Property *string `protobuf:"bytes,2,req,name=property" json:"property,omitempty"`
	// update cached counters
	Sync *bool `protobuf:"varint,3,opt,name=sync" json:"sync,omitempty"`
	Real *bool `protobuf:"varint,4,opt,name=real" json:"real,omitempty"`
}

func (x *TContainerGetPropertyRequest) Reset() {
	*x = TContainerGetPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerGetPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerGetPropertyRequest) ProtoMessage() {}

func (x *TContainerGetPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerGetPropertyRequest.ProtoReflect.Descriptor instead.
func (*TContainerGetPropertyRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{66}
}

func (x *TContainerGetPropertyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerGetPropertyRequest) GetProperty() string {
	if x != nil && x.Property != nil {
		return *x.Property
	}
	return ""
}

func (x *TContainerGetPropertyRequest) GetSync() bool {
	if x != nil && x.Sync != nil {
		return *x.Sync
	}
	return false
}

func (x *TContainerGetPropertyRequest) GetReal() bool {
	if x != nil && x.Real != nil {
		return *x.Real
	}
	return false
}

type TContainerGetPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *string `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
}

func (x *TContainerGetPropertyResponse) Reset() {
	*x = TContainerGetPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerGetPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerGetPropertyResponse) ProtoMessage() {}

func (x *TContainerGetPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerGetPropertyResponse.ProtoReflect.Descriptor instead.
func (*TContainerGetPropertyResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{67}
}

func (x *TContainerGetPropertyResponse) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// Alias for GetProperty, deprecated
type TContainerGetDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Data *string `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	// update cached counters
	Sync *bool `protobuf:"varint,3,opt,name=sync" json:"sync,omitempty"`
	Real *bool `protobuf:"varint,4,opt,name=real" json:"real,omitempty"`
}

func (x *TContainerGetDataRequest) Reset() {
	*x = TContainerGetDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerGetDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerGetDataRequest) ProtoMessage() {}

func (x *TContainerGetDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerGetDataRequest.ProtoReflect.Descriptor instead.
func (*TContainerGetDataRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{68}
}

func (x *TContainerGetDataRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerGetDataRequest) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

func (x *TContainerGetDataRequest) GetSync() bool {
	if x != nil && x.Sync != nil {
		return *x.Sync
	}
	return false
}

func (x *TContainerGetDataRequest) GetReal() bool {
	if x != nil && x.Real != nil {
		return *x.Real
	}
	return false
}

type TContainerGetDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *string `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
}

func (x *TContainerGetDataResponse) Reset() {
	*x = TContainerGetDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerGetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerGetDataResponse) ProtoMessage() {}

func (x *TContainerGetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerGetDataResponse.ProtoReflect.Descriptor instead.
func (*TContainerGetDataResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{69}
}

func (x *TContainerGetDataResponse) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// Change one property
type TContainerSetPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Property *string `protobuf:"bytes,2,req,name=property" json:"property,omitempty"`
	Value    *string `protobuf:"bytes,3,req,name=value" json:"value,omitempty"`
}

func (x *TContainerSetPropertyRequest) Reset() {
	*x = TContainerSetPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerSetPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerSetPropertyRequest) ProtoMessage() {}

func (x *TContainerSetPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerSetPropertyRequest.ProtoReflect.Descriptor instead.
func (*TContainerSetPropertyRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{70}
}

func (x *TContainerSetPropertyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerSetPropertyRequest) GetProperty() string {
	if x != nil && x.Property != nil {
		return *x.Property
	}
	return ""
}

func (x *TContainerSetPropertyRequest) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// Get multiple properties/data of many containers with one request
type TContainerGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of containers or wildcards, "***" - all
	Name []string `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
	// list of properties/data
	Variable []string `protobuf:"bytes,2,rep,name=variable" json:"variable,omitempty"`
	// do not wait busy containers
	Nonblock *bool `protobuf:"varint,3,opt,name=nonblock" json:"nonblock,omitempty"`
	// update cached counters
	Sync *bool `protobuf:"varint,4,opt,name=sync" json:"sync,omitempty"`
	Real *bool `protobuf:"varint,5,opt,name=real" json:"real,omitempty"`
	// change_time >= changed_since
	ChangedSince *uint64 `protobuf:"varint,6,opt,name=changed_since,json=changedSince" json:"changed_since,omitempty"`
}

func (x *TContainerGetRequest) Reset() {
	*x = TContainerGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerGetRequest) ProtoMessage() {}

func (x *TContainerGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerGetRequest.ProtoReflect.Descriptor instead.
func (*TContainerGetRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{71}
}

func (x *TContainerGetRequest) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *TContainerGetRequest) GetVariable() []string {
	if x != nil {
		return x.Variable
	}
	return nil
}

func (x *TContainerGetRequest) GetNonblock() bool {
	if x != nil && x.Nonblock != nil {
		return *x.Nonblock
	}
	return false
}

func (x *TContainerGetRequest) GetSync() bool {
	if x != nil && x.Sync != nil {
		return *x.Sync
	}
	return false
}

func (x *TContainerGetRequest) GetReal() bool {
	if x != nil && x.Real != nil {
		return *x.Real
	}
	return false
}

func (x *TContainerGetRequest) GetChangedSince() uint64 {
	if x != nil && x.ChangedSince != nil {
		return *x.ChangedSince
	}
	return 0
}

type TContainerGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TContainerGetResponse_TContainerGetListResponse `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (x *TContainerGetResponse) Reset() {
	*x = TContainerGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerGetResponse) ProtoMessage() {}

func (x *TContainerGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerGetResponse.ProtoReflect.Descriptor instead.
func (*TContainerGetResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{72}
}

func (x *TContainerGetResponse) GetList() []*TContainerGetResponse_TContainerGetListResponse {
	if x != nil {
		return x.List
	}
	return nil
}

// Start stopped container
type TContainerStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
}

func (x *TContainerStartRequest) Reset() {
	*x = TContainerStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerStartRequest) ProtoMessage() {}

func (x *TContainerStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerStartRequest.ProtoReflect.Descriptor instead.
func (*TContainerStartRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{73}
}

func (x *TContainerStartRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// Restart dead container
type TContainerRespawnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
}

func (x *TContainerRespawnRequest) Reset() {
	*x = TContainerRespawnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerRespawnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerRespawnRequest) ProtoMessage() {}

func (x *TContainerRespawnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerRespawnRequest.ProtoReflect.Descriptor instead.
func (*TContainerRespawnRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{74}
}

func (x *TContainerRespawnRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// Stop dead or running container
type TContainerStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// Timeout in 1/1000 seconds between SIGTERM and SIGKILL, default 30s
	TimeoutMs *uint32 `protobuf:"varint,2,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
}

func (x *TContainerStopRequest) Reset() {
	*x = TContainerStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerStopRequest) ProtoMessage() {}

func (x *TContainerStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerStopRequest.ProtoReflect.Descriptor instead.
func (*TContainerStopRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{75}
}

func (x *TContainerStopRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerStopRequest) GetTimeoutMs() uint32 {
	if x != nil && x.TimeoutMs != nil {
		return *x.TimeoutMs
	}
	return 0
}

// Freeze running container
type TContainerPauseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
}

func (x *TContainerPauseRequest) Reset() {
	*x = TContainerPauseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerPauseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerPauseRequest) ProtoMessage() {}

func (x *TContainerPauseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerPauseRequest.ProtoReflect.Descriptor instead.
func (*TContainerPauseRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{76}
}

func (x *TContainerPauseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// Unfreeze paused container
type TContainerResumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
}

func (x *TContainerResumeRequest) Reset() {
	*x = TContainerResumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerResumeRequest) ProtoMessage() {}

func (x *TContainerResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerResumeRequest.ProtoReflect.Descriptor instead.
func (*TContainerResumeRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{77}
}

func (x *TContainerResumeRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// Translate filesystem path between containers
type TConvertPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Source      *string `protobuf:"bytes,2,req,name=source" json:"source,omitempty"`
	Destination *string `protobuf:"bytes,3,req,name=destination" json:"destination,omitempty"`
}

func (x *TConvertPathRequest) Reset() {
	*x = TConvertPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TConvertPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TConvertPathRequest) ProtoMessage() {}

func (x *TConvertPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TConvertPathRequest.ProtoReflect.Descriptor instead.
func (*TConvertPathRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{78}
}

func (x *TConvertPathRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TConvertPathRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *TConvertPathRequest) GetDestination() string {
	if x != nil && x.Destination != nil {
		return *x.Destination
	}
	return ""
}

type TConvertPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
}

func (x *TConvertPathResponse) Reset() {
	*x = TConvertPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TConvertPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TConvertPathResponse) ProtoMessage() {}

func (x *TConvertPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TConvertPathResponse.ProtoReflect.Descriptor instead.
func (*TConvertPathResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{79}
}

func (x *TConvertPathResponse) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

// Wait while container(s) is/are in running state
type TContainerWaitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of containers or wildcards, "***" - all
	Name []string `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
	// timeout in 1/1000 seconds, 0 - nonblock
	TimeoutMs *uint32 `protobuf:"varint,2,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
	// list of label names or wildcards
	Label []string `protobuf:"bytes,3,rep,name=label" json:"label,omitempty"`
	// async wait with target_state works only once
	TargetState *string `protobuf:"bytes,4,opt,name=target_state,json=targetState" json:"target_state,omitempty"`
}

func (x *TContainerWaitRequest) Reset() {
	*x = TContainerWaitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerWaitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerWaitRequest) ProtoMessage() {}

func (x *TContainerWaitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerWaitRequest.ProtoReflect.Descriptor instead.
func (*TContainerWaitRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{80}
}

func (x *TContainerWaitRequest) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *TContainerWaitRequest) GetTimeoutMs() uint32 {
	if x != nil && x.TimeoutMs != nil {
		return *x.TimeoutMs
	}
	return 0
}

func (x *TContainerWaitRequest) GetLabel() []string {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *TContainerWaitRequest) GetTargetState() string {
	if x != nil && x.TargetState != nil {
		return *x.TargetState
	}
	return ""
}

type TContainerWaitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`   // container name
	State *string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"` // container state or timeout
	When  *uint64 `protobuf:"varint,3,opt,name=when" json:"when,omitempty"`  // unix time stamp in seconds
	Label *string `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	Value *string `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
}

func (x *TContainerWaitResponse) Reset() {
	*x = TContainerWaitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerWaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerWaitResponse) ProtoMessage() {}

func (x *TContainerWaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerWaitResponse.ProtoReflect.Descriptor instead.
func (*TContainerWaitResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{81}
}

func (x *TContainerWaitResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerWaitResponse) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *TContainerWaitResponse) GetWhen() uint64 {
	if x != nil && x.When != nil {
		return *x.When
	}
	return 0
}

func (x *TContainerWaitResponse) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *TContainerWaitResponse) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// Send signal main process in container
type TContainerKillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Sig  *int32  `protobuf:"varint,2,req,name=sig" json:"sig,omitempty"`
}

func (x *TContainerKillRequest) Reset() {
	*x = TContainerKillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerKillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerKillRequest) ProtoMessage() {}

func (x *TContainerKillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerKillRequest.ProtoReflect.Descriptor instead.
func (*TContainerKillRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{82}
}

func (x *TContainerKillRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerKillRequest) GetSig() int32 {
	if x != nil && x.Sig != nil {
		return *x.Sig
	}
	return 0
}

// Move process into container
type TAttachProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Pid  *uint32 `protobuf:"varint,2,req,name=pid" json:"pid,omitempty"`
	Comm *string `protobuf:"bytes,3,req,name=comm" json:"comm,omitempty"` // ignored if empty
}

func (x *TAttachProcessRequest) Reset() {
	*x = TAttachProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAttachProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAttachProcessRequest) ProtoMessage() {}

func (x *TAttachProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAttachProcessRequest.ProtoReflect.Descriptor instead.
func (*TAttachProcessRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{83}
}

func (x *TAttachProcessRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TAttachProcessRequest) GetPid() uint32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *TAttachProcessRequest) GetComm() string {
	if x != nil && x.Comm != nil {
		return *x.Comm
	}
	return ""
}

// Determine container by pid
type TLocateProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid  *uint32 `protobuf:"varint,1,req,name=pid" json:"pid,omitempty"`
	Comm *string `protobuf:"bytes,2,req,name=comm" json:"comm,omitempty"` // ignored if empty
}

func (x *TLocateProcessRequest) Reset() {
	*x = TLocateProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLocateProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLocateProcessRequest) ProtoMessage() {}

func (x *TLocateProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLocateProcessRequest.ProtoReflect.Descriptor instead.
func (*TLocateProcessRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{84}
}

func (x *TLocateProcessRequest) GetPid() uint32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *TLocateProcessRequest) GetComm() string {
	if x != nil && x.Comm != nil {
		return *x.Comm
	}
	return ""
}

type TLocateProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
}

func (x *TLocateProcessResponse) Reset() {
	*x = TLocateProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLocateProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLocateProcessResponse) ProtoMessage() {}

func (x *TLocateProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLocateProcessResponse.ProtoReflect.Descriptor instead.
func (*TLocateProcessResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{85}
}

func (x *TLocateProcessResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type TFindLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mask  *string `protobuf:"bytes,1,opt,name=mask" json:"mask,omitempty"`   // containers name or wildcard
	State *string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"` // filter by container state
	Label *string `protobuf:"bytes,3,req,name=label" json:"label,omitempty"` // label name or wildcard
	Value *string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"` // filter by label value
}

func (x *TFindLabelRequest) Reset() {
	*x = TFindLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFindLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFindLabelRequest) ProtoMessage() {}

func (x *TFindLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFindLabelRequest.ProtoReflect.Descriptor instead.
func (*TFindLabelRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{86}
}

func (x *TFindLabelRequest) GetMask() string {
	if x != nil && x.Mask != nil {
		return *x.Mask
	}
	return ""
}

func (x *TFindLabelRequest) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *TFindLabelRequest) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *TFindLabelRequest) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type TFindLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TFindLabelResponse_TFindLabelEntry `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (x *TFindLabelResponse) Reset() {
	*x = TFindLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFindLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFindLabelResponse) ProtoMessage() {}

func (x *TFindLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFindLabelResponse.ProtoReflect.Descriptor instead.
func (*TFindLabelResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{87}
}

func (x *TFindLabelResponse) GetList() []*TFindLabelResponse_TFindLabelEntry {
	if x != nil {
		return x.List
	}
	return nil
}

type TSetLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Label     *string `protobuf:"bytes,2,req,name=label" json:"label,omitempty"`
	Value     *string `protobuf:"bytes,3,req,name=value" json:"value,omitempty"`
	PrevValue *string `protobuf:"bytes,4,opt,name=prev_value,json=prevValue" json:"prev_value,omitempty"` // fail with Busy if does not match
	State     *string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`                          // fail with InvalidState if not match
}

func (x *TSetLabelRequest) Reset() {
	*x = TSetLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSetLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSetLabelRequest) ProtoMessage() {}

func (x *TSetLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSetLabelRequest.ProtoReflect.Descriptor instead.
func (*TSetLabelRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{88}
}

func (x *TSetLabelRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TSetLabelRequest) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *TSetLabelRequest) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *TSetLabelRequest) GetPrevValue() string {
	if x != nil && x.PrevValue != nil {
		return *x.PrevValue
	}
	return ""
}

func (x *TSetLabelRequest) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type TSetLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevValue *string `protobuf:"bytes,1,opt,name=prev_value,json=prevValue" json:"prev_value,omitempty"`
	State     *string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
}

func (x *TSetLabelResponse) Reset() {
	*x = TSetLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSetLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSetLabelResponse) ProtoMessage() {}

func (x *TSetLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSetLabelResponse.ProtoReflect.Descriptor instead.
func (*TSetLabelResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{89}
}

func (x *TSetLabelResponse) GetPrevValue() string {
	if x != nil && x.PrevValue != nil {
		return *x.PrevValue
	}
	return ""
}

func (x *TSetLabelResponse) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

type TIncLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Label *string `protobuf:"bytes,2,req,name=label" json:"label,omitempty"` // missing label starts from 0
	Add   *int64  `protobuf:"varint,3,opt,name=add,def=1" json:"add,omitempty"`
}

// Default values for TIncLabelRequest fields.
const (
	Default_TIncLabelRequest_Add = int64(1)
)

func (x *TIncLabelRequest) Reset() {
	*x = TIncLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TIncLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TIncLabelRequest) ProtoMessage() {}

func (x *TIncLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TIncLabelRequest.ProtoReflect.Descriptor instead.
func (*TIncLabelRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{90}
}

func (x *TIncLabelRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TIncLabelRequest) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *TIncLabelRequest) GetAdd() int64 {
	if x != nil && x.Add != nil {
		return *x.Add
	}
	return Default_TIncLabelRequest_Add
}

type TIncLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *int64 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
}

func (x *TIncLabelResponse) Reset() {
	*x = TIncLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TIncLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TIncLabelResponse) ProtoMessage() {}

func (x *TIncLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TIncLabelResponse.ProtoReflect.Descriptor instead.
func (*TIncLabelResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{91}
}

func (x *TIncLabelResponse) GetResult() int64 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type TSetSymlinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container *string `protobuf:"bytes,1,req,name=container" json:"container,omitempty"`
	Symlink   *string `protobuf:"bytes,2,req,name=symlink" json:"symlink,omitempty"`
	Target    *string `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
}

func (x *TSetSymlinkRequest) Reset() {
	*x = TSetSymlinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TSetSymlinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSetSymlinkRequest) ProtoMessage() {}

func (x *TSetSymlinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSetSymlinkRequest.ProtoReflect.Descriptor instead.
func (*TSetSymlinkRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{92}
}

func (x *TSetSymlinkRequest) GetContainer() string {
	if x != nil && x.Container != nil {
		return *x.Container
	}
	return ""
}

func (x *TSetSymlinkRequest) GetSymlink() string {
	if x != nil && x.Symlink != nil {
		return *x.Symlink
	}
	return ""
}

func (x *TSetSymlinkRequest) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

type TNewVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume *TVolumeSpec `protobuf:"bytes,1,req,name=volume" json:"volume,omitempty"`
}

func (x *TNewVolumeRequest) Reset() {
	*x = TNewVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TNewVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TNewVolumeRequest) ProtoMessage() {}

func (x *TNewVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TNewVolumeRequest.ProtoReflect.Descriptor instead.
func (*TNewVolumeRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{93}
}

func (x *TNewVolumeRequest) GetVolume() *TVolumeSpec {
	if x != nil {
		return x.Volume
	}
	return nil
}

type TNewVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume *TVolumeSpec `protobuf:"bytes,1,req,name=volume" json:"volume,omitempty"`
}

func (x *TNewVolumeResponse) Reset() {
	*x = TNewVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TNewVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TNewVolumeResponse) ProtoMessage() {}

func (x *TNewVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TNewVolumeResponse.ProtoReflect.Descriptor instead.
func (*TNewVolumeResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{94}
}

func (x *TNewVolumeResponse) GetVolume() *TVolumeSpec {
	if x != nil {
		return x.Volume
	}
	return nil
}

type TGetVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container    *string  `protobuf:"bytes,1,opt,name=container" json:"container,omitempty"`                            // get paths in container, default: self
	Path         []string `protobuf:"bytes,2,rep,name=path" json:"path,omitempty"`                                      // volume path in container, default: all
	ChangedSince *uint64  `protobuf:"varint,3,opt,name=changed_since,json=changedSince" json:"changed_since,omitempty"` // change_time >= changed_since
}

func (x *TGetVolumeRequest) Reset() {
	*x = TGetVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetVolumeRequest) ProtoMessage() {}

func (x *TGetVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetVolumeRequest.ProtoReflect.Descriptor instead.
func (*TGetVolumeRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{95}
}

func (x *TGetVolumeRequest) GetContainer() string {
	if x != nil && x.Container != nil {
		return *x.Container
	}
	return ""
}

func (x *TGetVolumeRequest) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *TGetVolumeRequest) GetChangedSince() uint64 {
	if x != nil && x.ChangedSince != nil {
		return *x.ChangedSince
	}
	return 0
}

type TGetVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume []*TVolumeSpec `protobuf:"bytes,1,rep,name=volume" json:"volume,omitempty"`
}

func (x *TGetVolumeResponse) Reset() {
	*x = TGetVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TGetVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TGetVolumeResponse) ProtoMessage() {}

func (x *TGetVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TGetVolumeResponse.ProtoReflect.Descriptor instead.
func (*TGetVolumeResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{96}
}

func (x *TGetVolumeResponse) GetVolume() []*TVolumeSpec {
	if x != nil {
		return x.Volume
	}
	return nil
}

// List available volume properties
type TVolumePropertyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TVolumePropertyListRequest) Reset() {
	*x = TVolumePropertyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumePropertyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumePropertyListRequest) ProtoMessage() {}

func (x *TVolumePropertyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumePropertyListRequest.ProtoReflect.Descriptor instead.
func (*TVolumePropertyListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{97}
}

type TVolumePropertyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*TVolumePropertyListResponse_TVolumePropertyDescription `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty"`
}

func (x *TVolumePropertyListResponse) Reset() {
	*x = TVolumePropertyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumePropertyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumePropertyListResponse) ProtoMessage() {}

func (x *TVolumePropertyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumePropertyListResponse.ProtoReflect.Descriptor instead.
func (*TVolumePropertyListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{98}
}

func (x *TVolumePropertyListResponse) GetProperties() []*TVolumePropertyListResponse_TVolumePropertyDescription {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Create new volume
// "createVolume" returns TVolumeDescription in "volume"
type TVolumeCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       *string            `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Properties []*TVolumeProperty `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty"`
}

func (x *TVolumeCreateRequest) Reset() {
	*x = TVolumeCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeCreateRequest) ProtoMessage() {}

func (x *TVolumeCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeCreateRequest.ProtoReflect.Descriptor instead.
func (*TVolumeCreateRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{99}
}

func (x *TVolumeCreateRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeCreateRequest) GetProperties() []*TVolumeProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

type TVolumeLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Container *string `protobuf:"bytes,2,opt,name=container" json:"container,omitempty"` // default - self
	Target    *string `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`       // path in container, "" - anon
	Required  *bool   `protobuf:"varint,4,opt,name=required" json:"required,omitempty"`  // stop container at fail
	ReadOnly  *bool   `protobuf:"varint,5,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
}

func (x *TVolumeLinkRequest) Reset() {
	*x = TVolumeLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeLinkRequest) ProtoMessage() {}

func (x *TVolumeLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeLinkRequest.ProtoReflect.Descriptor instead.
func (*TVolumeLinkRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{100}
}

func (x *TVolumeLinkRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeLinkRequest) GetContainer() string {
	if x != nil && x.Container != nil {
		return *x.Container
	}
	return ""
}

func (x *TVolumeLinkRequest) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *TVolumeLinkRequest) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *TVolumeLinkRequest) GetReadOnly() bool {
	if x != nil && x.ReadOnly != nil {
		return *x.ReadOnly
	}
	return false
}

type TVolumeUnlinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Container *string `protobuf:"bytes,2,opt,name=container" json:"container,omitempty"` // default - self, "***" - all
	Strict    *bool   `protobuf:"varint,3,opt,name=strict" json:"strict,omitempty"`      // non-lazy umount
	Target    *string `protobuf:"bytes,4,opt,name=target" json:"target,omitempty"`       // path in container, "" - anon, default - "***" - all
}

func (x *TVolumeUnlinkRequest) Reset() {
	*x = TVolumeUnlinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeUnlinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeUnlinkRequest) ProtoMessage() {}

func (x *TVolumeUnlinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeUnlinkRequest.ProtoReflect.Descriptor instead.
func (*TVolumeUnlinkRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{101}
}

func (x *TVolumeUnlinkRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeUnlinkRequest) GetContainer() string {
	if x != nil && x.Container != nil {
		return *x.Container
	}
	return ""
}

func (x *TVolumeUnlinkRequest) GetStrict() bool {
	if x != nil && x.Strict != nil {
		return *x.Strict
	}
	return false
}

func (x *TVolumeUnlinkRequest) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

type TVolumeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path         *string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Container    *string `protobuf:"bytes,2,opt,name=container" json:"container,omitempty"`
	ChangedSince *uint64 `protobuf:"varint,3,opt,name=changed_since,json=changedSince" json:"changed_since,omitempty"` // change_time >= changed_since
}

func (x *TVolumeListRequest) Reset() {
	*x = TVolumeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeListRequest) ProtoMessage() {}

func (x *TVolumeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeListRequest.ProtoReflect.Descriptor instead.
func (*TVolumeListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{102}
}

func (x *TVolumeListRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeListRequest) GetContainer() string {
	if x != nil && x.Container != nil {
		return *x.Container
	}
	return ""
}

func (x *TVolumeListRequest) GetChangedSince() uint64 {
	if x != nil && x.ChangedSince != nil {
		return *x.ChangedSince
	}
	return 0
}

type TVolumeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volumes []*TVolumeDescription `protobuf:"bytes,1,rep,name=volumes" json:"volumes,omitempty"`
}

func (x *TVolumeListResponse) Reset() {
	*x = TVolumeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeListResponse) ProtoMessage() {}

func (x *TVolumeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeListResponse.ProtoReflect.Descriptor instead.
func (*TVolumeListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{103}
}

func (x *TVolumeListResponse) GetVolumes() []*TVolumeDescription {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type TVolumeTuneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       *string            `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Properties []*TVolumeProperty `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty"`
}

func (x *TVolumeTuneRequest) Reset() {
	*x = TVolumeTuneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeTuneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeTuneRequest) ProtoMessage() {}

func (x *TVolumeTuneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeTuneRequest.ProtoReflect.Descriptor instead.
func (*TVolumeTuneRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{104}
}

func (x *TVolumeTuneRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *TVolumeTuneRequest) GetProperties() []*TVolumeProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

type TVolumeCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
}

func (x *TVolumeCheckRequest) Reset() {
	*x = TVolumeCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeCheckRequest) ProtoMessage() {}

func (x *TVolumeCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeCheckRequest.ProtoReflect.Descriptor instead.
func (*TVolumeCheckRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{105}
}

func (x *TVolumeCheckRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

type TVolumeCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (x *TVolumeCheckResponse) Reset() {
	*x = TVolumeCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumeCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumeCheckResponse) ProtoMessage() {}

func (x *TVolumeCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumeCheckResponse.ProtoReflect.Descriptor instead.
func (*TVolumeCheckResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{106}
}

func (x *TVolumeCheckResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type TLayerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Place *string `protobuf:"bytes,1,opt,name=place" json:"place,omitempty"`
	Mask  *string `protobuf:"bytes,2,opt,name=mask" json:"mask,omitempty"`
}

func (x *TLayerListRequest) Reset() {
	*x = TLayerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLayerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLayerListRequest) ProtoMessage() {}

func (x *TLayerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLayerListRequest.ProtoReflect.Descriptor instead.
func (*TLayerListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{107}
}

func (x *TLayerListRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TLayerListRequest) GetMask() string {
	if x != nil && x.Mask != nil {
		return *x.Mask
	}
	return ""
}

type TLayerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer  []string             `protobuf:"bytes,1,rep,name=layer" json:"layer,omitempty"`
	Layers []*TLayerDescription `protobuf:"bytes,2,rep,name=layers" json:"layers,omitempty"`
}

func (x *TLayerListResponse) Reset() {
	*x = TLayerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLayerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLayerListResponse) ProtoMessage() {}

func (x *TLayerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLayerListResponse.ProtoReflect.Descriptor instead.
func (*TLayerListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{108}
}

func (x *TLayerListResponse) GetLayer() []string {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *TLayerListResponse) GetLayers() []*TLayerDescription {
	if x != nil {
		return x.Layers
	}
	return nil
}

type TLayerImportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer        *string `protobuf:"bytes,1,req,name=layer" json:"layer,omitempty"`
	Tarball      *string `protobuf:"bytes,2,req,name=tarball" json:"tarball,omitempty"`
	Merge        *bool   `protobuf:"varint,3,req,name=merge" json:"merge,omitempty"`
	Place        *string `protobuf:"bytes,4,opt,name=place" json:"place,omitempty"`
	PrivateValue *string `protobuf:"bytes,5,opt,name=private_value,json=privateValue" json:"private_value,omitempty"`
	Compress     *string `protobuf:"bytes,6,opt,name=compress" json:"compress,omitempty"`
	VerboseError *bool   `protobuf:"varint,7,opt,name=verbose_error,json=verboseError" json:"verbose_error,omitempty"`
	Container    *string `protobuf:"bytes,8,opt,name=container" json:"container,omitempty"`
}

func (x *TLayerImportRequest) Reset() {
	*x = TLayerImportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLayerImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLayerImportRequest) ProtoMessage() {}

func (x *TLayerImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLayerImportRequest.ProtoReflect.Descriptor instead.
func (*TLayerImportRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{109}
}

func (x *TLayerImportRequest) GetLayer() string {
	if x != nil && x.Layer != nil {
		return *x.Layer
	}
	return ""
}

func (x *TLayerImportRequest) GetTarball() string {
	if x != nil && x.Tarball != nil {
		return *x.Tarball
	}
	return ""
}

func (x *TLayerImportRequest) GetMerge() bool {
	if x != nil && x.Merge != nil {
		return *x.Merge
	}
	return false
}

func (x *TLayerImportRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TLayerImportRequest) GetPrivateValue() string {
	if x != nil && x.PrivateValue != nil {
		return *x.PrivateValue
	}
	return ""
}

func (x *TLayerImportRequest) GetCompress() string {
	if x != nil && x.Compress != nil {
		return *x.Compress
	}
	return ""
}

func (x *TLayerImportRequest) GetVerboseError() bool {
	if x != nil && x.VerboseError != nil {
		return *x.VerboseError
	}
	return false
}

func (x *TLayerImportRequest) GetContainer() string {
	if x != nil && x.Container != nil {
		return *x.Container
	}
	return ""
}

type TLayerExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume   *string `protobuf:"bytes,1,req,name=volume" json:"volume,omitempty"`
	Tarball  *string `protobuf:"bytes,2,req,name=tarball" json:"tarball,omitempty"`
	Layer    *string `protobuf:"bytes,3,opt,name=layer" json:"layer,omitempty"`
	Place    *string `protobuf:"bytes,4,opt,name=place" json:"place,omitempty"`
	Compress *string `protobuf:"bytes,5,opt,name=compress" json:"compress,omitempty"`
}

func (x *TLayerExportRequest) Reset() {
	*x = TLayerExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLayerExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLayerExportRequest) ProtoMessage() {}

func (x *TLayerExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLayerExportRequest.ProtoReflect.Descriptor instead.
func (*TLayerExportRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{110}
}

func (x *TLayerExportRequest) GetVolume() string {
	if x != nil && x.Volume != nil {
		return *x.Volume
	}
	return ""
}

func (x *TLayerExportRequest) GetTarball() string {
	if x != nil && x.Tarball != nil {
		return *x.Tarball
	}
	return ""
}

func (x *TLayerExportRequest) GetLayer() string {
	if x != nil && x.Layer != nil {
		return *x.Layer
	}
	return ""
}

func (x *TLayerExportRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TLayerExportRequest) GetCompress() string {
	if x != nil && x.Compress != nil {
		return *x.Compress
	}
	return ""
}

type TLayerRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *string `protobuf:"bytes,1,req,name=layer" json:"layer,omitempty"`
	Place *string `protobuf:"bytes,2,opt,name=place" json:"place,omitempty"`
	Async *bool   `protobuf:"varint,3,opt,name=async" json:"async,omitempty"`
}

func (x *TLayerRemoveRequest) Reset() {
	*x = TLayerRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLayerRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLayerRemoveRequest) ProtoMessage() {}

func (x *TLayerRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLayerRemoveRequest.ProtoReflect.Descriptor instead.
func (*TLayerRemoveRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{111}
}

func (x *TLayerRemoveRequest) GetLayer() string {
	if x != nil && x.Layer != nil {
		return *x.Layer
	}
	return ""
}

func (x *TLayerRemoveRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TLayerRemoveRequest) GetAsync() bool {
	if x != nil && x.Async != nil {
		return *x.Async
	}
	return false
}

type TLayerGetPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *string `protobuf:"bytes,1,req,name=layer" json:"layer,omitempty"`
	Place *string `protobuf:"bytes,2,opt,name=place" json:"place,omitempty"`
}

func (x *TLayerGetPrivateRequest) Reset() {
	*x = TLayerGetPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLayerGetPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLayerGetPrivateRequest) ProtoMessage() {}

func (x *TLayerGetPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLayerGetPrivateRequest.ProtoReflect.Descriptor instead.
func (*TLayerGetPrivateRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{112}
}

func (x *TLayerGetPrivateRequest) GetLayer() string {
	if x != nil && x.Layer != nil {
		return *x.Layer
	}
	return ""
}

func (x *TLayerGetPrivateRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

type TLayerGetPrivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivateValue *string `protobuf:"bytes,1,opt,name=private_value,json=privateValue" json:"private_value,omitempty"`
}

func (x *TLayerGetPrivateResponse) Reset() {
	*x = TLayerGetPrivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLayerGetPrivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLayerGetPrivateResponse) ProtoMessage() {}

func (x *TLayerGetPrivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLayerGetPrivateResponse.ProtoReflect.Descriptor instead.
func (*TLayerGetPrivateResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{113}
}

func (x *TLayerGetPrivateResponse) GetPrivateValue() string {
	if x != nil && x.PrivateValue != nil {
		return *x.PrivateValue
	}
	return ""
}

type TLayerSetPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer        *string `protobuf:"bytes,1,req,name=layer" json:"layer,omitempty"`
	Place        *string `protobuf:"bytes,2,opt,name=place" json:"place,omitempty"`
	PrivateValue *string `protobuf:"bytes,3,req,name=private_value,json=privateValue" json:"private_value,omitempty"`
}

func (x *TLayerSetPrivateRequest) Reset() {
	*x = TLayerSetPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLayerSetPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLayerSetPrivateRequest) ProtoMessage() {}

func (x *TLayerSetPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLayerSetPrivateRequest.ProtoReflect.Descriptor instead.
func (*TLayerSetPrivateRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{114}
}

func (x *TLayerSetPrivateRequest) GetLayer() string {
	if x != nil && x.Layer != nil {
		return *x.Layer
	}
	return ""
}

func (x *TLayerSetPrivateRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TLayerSetPrivateRequest) GetPrivateValue() string {
	if x != nil && x.PrivateValue != nil {
		return *x.PrivateValue
	}
	return ""
}

type TStorageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Place *string `protobuf:"bytes,1,opt,name=place" json:"place,omitempty"`
	Mask  *string `protobuf:"bytes,2,opt,name=mask" json:"mask,omitempty"`
}

func (x *TStorageListRequest) Reset() {
	*x = TStorageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStorageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStorageListRequest) ProtoMessage() {}

func (x *TStorageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStorageListRequest.ProtoReflect.Descriptor instead.
func (*TStorageListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{115}
}

func (x *TStorageListRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TStorageListRequest) GetMask() string {
	if x != nil && x.Mask != nil {
		return *x.Mask
	}
	return ""
}

type TStorageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storages     []*TStorageDescription `protobuf:"bytes,1,rep,name=storages" json:"storages,omitempty"`
	MetaStorages []*TMetaStorage        `protobuf:"bytes,2,rep,name=meta_storages,json=metaStorages" json:"meta_storages,omitempty"`
}

func (x *TStorageListResponse) Reset() {
	*x = TStorageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStorageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStorageListResponse) ProtoMessage() {}

func (x *TStorageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStorageListResponse.ProtoReflect.Descriptor instead.
func (*TStorageListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{116}
}

func (x *TStorageListResponse) GetStorages() []*TStorageDescription {
	if x != nil {
		return x.Storages
	}
	return nil
}

func (x *TStorageListResponse) GetMetaStorages() []*TMetaStorage {
	if x != nil {
		return x.MetaStorages
	}
	return nil
}

type TStorageRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Place *string `protobuf:"bytes,2,opt,name=place" json:"place,omitempty"`
}

func (x *TStorageRemoveRequest) Reset() {
	*x = TStorageRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStorageRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStorageRemoveRequest) ProtoMessage() {}

func (x *TStorageRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStorageRemoveRequest.ProtoReflect.Descriptor instead.
func (*TStorageRemoveRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{117}
}

func (x *TStorageRemoveRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TStorageRemoveRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

type TStorageImportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Tarball      *string `protobuf:"bytes,2,req,name=tarball" json:"tarball,omitempty"`
	Place        *string `protobuf:"bytes,3,opt,name=place" json:"place,omitempty"`
	PrivateValue *string `protobuf:"bytes,5,opt,name=private_value,json=privateValue" json:"private_value,omitempty"`
	Compress     *string `protobuf:"bytes,6,opt,name=compress" json:"compress,omitempty"`
}

func (x *TStorageImportRequest) Reset() {
	*x = TStorageImportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStorageImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStorageImportRequest) ProtoMessage() {}

func (x *TStorageImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStorageImportRequest.ProtoReflect.Descriptor instead.
func (*TStorageImportRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{118}
}

func (x *TStorageImportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TStorageImportRequest) GetTarball() string {
	if x != nil && x.Tarball != nil {
		return *x.Tarball
	}
	return ""
}

func (x *TStorageImportRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TStorageImportRequest) GetPrivateValue() string {
	if x != nil && x.PrivateValue != nil {
		return *x.PrivateValue
	}
	return ""
}

func (x *TStorageImportRequest) GetCompress() string {
	if x != nil && x.Compress != nil {
		return *x.Compress
	}
	return ""
}

type TStorageExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Tarball  *string `protobuf:"bytes,2,req,name=tarball" json:"tarball,omitempty"`
	Place    *string `protobuf:"bytes,3,opt,name=place" json:"place,omitempty"`
	Compress *string `protobuf:"bytes,4,opt,name=compress" json:"compress,omitempty"`
}

func (x *TStorageExportRequest) Reset() {
	*x = TStorageExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStorageExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStorageExportRequest) ProtoMessage() {}

func (x *TStorageExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStorageExportRequest.ProtoReflect.Descriptor instead.
func (*TStorageExportRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{119}
}

func (x *TStorageExportRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TStorageExportRequest) GetTarball() string {
	if x != nil && x.Tarball != nil {
		return *x.Tarball
	}
	return ""
}

func (x *TStorageExportRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TStorageExportRequest) GetCompress() string {
	if x != nil && x.Compress != nil {
		return *x.Compress
	}
	return ""
}

type TDockerImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName *string  `protobuf:"bytes,1,req,name=full_name,json=fullName" json:"full_name,omitempty"`
	Layers   []string `protobuf:"bytes,2,rep,name=layers" json:"layers,omitempty"`
	Command  *string  `protobuf:"bytes,3,opt,name=command" json:"command,omitempty"`
	Env      *string  `protobuf:"bytes,4,opt,name=env" json:"env,omitempty"`
}

func (x *TDockerImage) Reset() {
	*x = TDockerImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDockerImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDockerImage) ProtoMessage() {}

func (x *TDockerImage) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDockerImage.ProtoReflect.Descriptor instead.
func (*TDockerImage) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{120}
}

func (x *TDockerImage) GetFullName() string {
	if x != nil && x.FullName != nil {
		return *x.FullName
	}
	return ""
}

func (x *TDockerImage) GetLayers() []string {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *TDockerImage) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *TDockerImage) GetEnv() string {
	if x != nil && x.Env != nil {
		return *x.Env
	}
	return ""
}

type TDockerImageStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Place *string `protobuf:"bytes,2,opt,name=place" json:"place,omitempty"`
}

func (x *TDockerImageStatusRequest) Reset() {
	*x = TDockerImageStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDockerImageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDockerImageStatusRequest) ProtoMessage() {}

func (x *TDockerImageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDockerImageStatusRequest.ProtoReflect.Descriptor instead.
func (*TDockerImageStatusRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{121}
}

func (x *TDockerImageStatusRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TDockerImageStatusRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

type TDockerImageStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *TDockerImage `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
}

func (x *TDockerImageStatusResponse) Reset() {
	*x = TDockerImageStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDockerImageStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDockerImageStatusResponse) ProtoMessage() {}

func (x *TDockerImageStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDockerImageStatusResponse.ProtoReflect.Descriptor instead.
func (*TDockerImageStatusResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{122}
}

func (x *TDockerImageStatusResponse) GetImage() *TDockerImage {
	if x != nil {
		return x.Image
	}
	return nil
}

type TDockerImageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Place *string `protobuf:"bytes,1,opt,name=place" json:"place,omitempty"`
	Mask  *string `protobuf:"bytes,2,opt,name=mask" json:"mask,omitempty"`
}

func (x *TDockerImageListRequest) Reset() {
	*x = TDockerImageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDockerImageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDockerImageListRequest) ProtoMessage() {}

func (x *TDockerImageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDockerImageListRequest.ProtoReflect.Descriptor instead.
func (*TDockerImageListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{123}
}

func (x *TDockerImageListRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TDockerImageListRequest) GetMask() string {
	if x != nil && x.Mask != nil {
		return *x.Mask
	}
	return ""
}

type TDockerImageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*TDockerImage `protobuf:"bytes,1,rep,name=images" json:"images,omitempty"`
}

func (x *TDockerImageListResponse) Reset() {
	*x = TDockerImageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDockerImageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDockerImageListResponse) ProtoMessage() {}

func (x *TDockerImageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDockerImageListResponse.ProtoReflect.Descriptor instead.
func (*TDockerImageListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{124}
}

func (x *TDockerImageListResponse) GetImages() []*TDockerImage {
	if x != nil {
		return x.Images
	}
	return nil
}

type TDockerImagePullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Place       *string `protobuf:"bytes,2,opt,name=place" json:"place,omitempty"`
	AuthToken   *string `protobuf:"bytes,3,opt,name=auth_token,json=authToken" json:"auth_token,omitempty"`
	AuthPath    *string `protobuf:"bytes,4,opt,name=auth_path,json=authPath" json:"auth_path,omitempty"`
	AuthService *string `protobuf:"bytes,5,opt,name=auth_service,json=authService" json:"auth_service,omitempty"`
}

func (x *TDockerImagePullRequest) Reset() {
	*x = TDockerImagePullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDockerImagePullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDockerImagePullRequest) ProtoMessage() {}

func (x *TDockerImagePullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDockerImagePullRequest.ProtoReflect.Descriptor instead.
func (*TDockerImagePullRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{125}
}

func (x *TDockerImagePullRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TDockerImagePullRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

func (x *TDockerImagePullRequest) GetAuthToken() string {
	if x != nil && x.AuthToken != nil {
		return *x.AuthToken
	}
	return ""
}

func (x *TDockerImagePullRequest) GetAuthPath() string {
	if x != nil && x.AuthPath != nil {
		return *x.AuthPath
	}
	return ""
}

func (x *TDockerImagePullRequest) GetAuthService() string {
	if x != nil && x.AuthService != nil {
		return *x.AuthService
	}
	return ""
}

type TDockerImagePullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *TDockerImage `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
}

func (x *TDockerImagePullResponse) Reset() {
	*x = TDockerImagePullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDockerImagePullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDockerImagePullResponse) ProtoMessage() {}

func (x *TDockerImagePullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDockerImagePullResponse.ProtoReflect.Descriptor instead.
func (*TDockerImagePullResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{126}
}

func (x *TDockerImagePullResponse) GetImage() *TDockerImage {
	if x != nil {
		return x.Image
	}
	return nil
}

type TDockerImageRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Place *string `protobuf:"bytes,2,opt,name=place" json:"place,omitempty"`
}

func (x *TDockerImageRemoveRequest) Reset() {
	*x = TDockerImageRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDockerImageRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDockerImageRemoveRequest) ProtoMessage() {}

func (x *TDockerImageRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDockerImageRemoveRequest.ProtoReflect.Descriptor instead.
func (*TDockerImageRemoveRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{127}
}

func (x *TDockerImageRemoveRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TDockerImageRemoveRequest) GetPlace() string {
	if x != nil && x.Place != nil {
		return *x.Place
	}
	return ""
}

type TStringMap_TStringMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val *string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
}

func (x *TStringMap_TStringMapEntry) Reset() {
	*x = TStringMap_TStringMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStringMap_TStringMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStringMap_TStringMapEntry) ProtoMessage() {}

func (x *TStringMap_TStringMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStringMap_TStringMapEntry.ProtoReflect.Descriptor instead.
func (*TStringMap_TStringMapEntry) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TStringMap_TStringMapEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *TStringMap_TStringMapEntry) GetVal() string {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return ""
}

type TUintMap_TUintMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val *uint64 `protobuf:"varint,2,opt,name=val" json:"val,omitempty"`
}

func (x *TUintMap_TUintMapEntry) Reset() {
	*x = TUintMap_TUintMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TUintMap_TUintMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TUintMap_TUintMapEntry) ProtoMessage() {}

func (x *TUintMap_TUintMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TUintMap_TUintMapEntry.ProtoReflect.Descriptor instead.
func (*TUintMap_TUintMapEntry) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TUintMap_TUintMapEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *TUintMap_TUintMapEntry) GetVal() uint64 {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return 0
}

type TContainerIpConfig_TContainerIp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dev *string `protobuf:"bytes,1,req,name=dev" json:"dev,omitempty"`
	Ip  *string `protobuf:"bytes,2,req,name=ip" json:"ip,omitempty"`
}

func (x *TContainerIpConfig_TContainerIp) Reset() {
	*x = TContainerIpConfig_TContainerIp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerIpConfig_TContainerIp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerIpConfig_TContainerIp) ProtoMessage() {}

func (x *TContainerIpConfig_TContainerIp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerIpConfig_TContainerIp.ProtoReflect.Descriptor instead.
func (*TContainerIpConfig_TContainerIp) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{28, 0}
}

func (x *TContainerIpConfig_TContainerIp) GetDev() string {
	if x != nil && x.Dev != nil {
		return *x.Dev
	}
	return ""
}

func (x *TContainerIpConfig_TContainerIp) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

type TContainerPropertyListResponse_TContainerPropertyListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Desc     *string `protobuf:"bytes,2,req,name=desc" json:"desc,omitempty"`
	ReadOnly *bool   `protobuf:"varint,3,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	Dynamic  *bool   `protobuf:"varint,4,opt,name=dynamic" json:"dynamic,omitempty"`
}

func (x *TContainerPropertyListResponse_TContainerPropertyListEntry) Reset() {
	*x = TContainerPropertyListResponse_TContainerPropertyListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerPropertyListResponse_TContainerPropertyListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerPropertyListResponse_TContainerPropertyListEntry) ProtoMessage() {}

func (x *TContainerPropertyListResponse_TContainerPropertyListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerPropertyListResponse_TContainerPropertyListEntry.ProtoReflect.Descriptor instead.
func (*TContainerPropertyListResponse_TContainerPropertyListEntry) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{59, 0}
}

func (x *TContainerPropertyListResponse_TContainerPropertyListEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerPropertyListResponse_TContainerPropertyListEntry) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *TContainerPropertyListResponse_TContainerPropertyListEntry) GetReadOnly() bool {
	if x != nil && x.ReadOnly != nil {
		return *x.ReadOnly
	}
	return false
}

func (x *TContainerPropertyListResponse_TContainerPropertyListEntry) GetDynamic() bool {
	if x != nil && x.Dynamic != nil {
		return *x.Dynamic
	}
	return false
}

type TContainerDataListResponse_TContainerDataListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Desc *string `protobuf:"bytes,2,req,name=desc" json:"desc,omitempty"`
}

func (x *TContainerDataListResponse_TContainerDataListEntry) Reset() {
	*x = TContainerDataListResponse_TContainerDataListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerDataListResponse_TContainerDataListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerDataListResponse_TContainerDataListEntry) ProtoMessage() {}

func (x *TContainerDataListResponse_TContainerDataListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerDataListResponse_TContainerDataListEntry.ProtoReflect.Descriptor instead.
func (*TContainerDataListResponse_TContainerDataListEntry) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{61, 0}
}

func (x *TContainerDataListResponse_TContainerDataListEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerDataListResponse_TContainerDataListEntry) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

type TContainerGetResponse_TContainerGetValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variable *string `protobuf:"bytes,1,req,name=variable" json:"variable,omitempty"`
	Error    *EError `protobuf:"varint,2,opt,name=error,enum=rpc.EError" json:"error,omitempty"`
	ErrorMsg *string `protobuf:"bytes,3,opt,name=errorMsg" json:"errorMsg,omitempty"`
	Value    *string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (x *TContainerGetResponse_TContainerGetValueResponse) Reset() {
	*x = TContainerGetResponse_TContainerGetValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerGetResponse_TContainerGetValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerGetResponse_TContainerGetValueResponse) ProtoMessage() {}

func (x *TContainerGetResponse_TContainerGetValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerGetResponse_TContainerGetValueResponse.ProtoReflect.Descriptor instead.
func (*TContainerGetResponse_TContainerGetValueResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{72, 0}
}

func (x *TContainerGetResponse_TContainerGetValueResponse) GetVariable() string {
	if x != nil && x.Variable != nil {
		return *x.Variable
	}
	return ""
}

func (x *TContainerGetResponse_TContainerGetValueResponse) GetError() EError {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return EError_Success
}

func (x *TContainerGetResponse_TContainerGetValueResponse) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

func (x *TContainerGetResponse_TContainerGetValueResponse) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type TContainerGetResponse_TContainerGetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string                                             `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Keyval     []*TContainerGetResponse_TContainerGetValueResponse `protobuf:"bytes,2,rep,name=keyval" json:"keyval,omitempty"`
	ChangeTime *uint64                                             `protobuf:"varint,3,opt,name=change_time,json=changeTime" json:"change_time,omitempty"`
	NoChanges  *bool                                               `protobuf:"varint,4,opt,name=no_changes,json=noChanges" json:"no_changes,omitempty"` // change_time < changed_since
}

func (x *TContainerGetResponse_TContainerGetListResponse) Reset() {
	*x = TContainerGetResponse_TContainerGetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TContainerGetResponse_TContainerGetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TContainerGetResponse_TContainerGetListResponse) ProtoMessage() {}

func (x *TContainerGetResponse_TContainerGetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TContainerGetResponse_TContainerGetListResponse.ProtoReflect.Descriptor instead.
func (*TContainerGetResponse_TContainerGetListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{72, 1}
}

func (x *TContainerGetResponse_TContainerGetListResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TContainerGetResponse_TContainerGetListResponse) GetKeyval() []*TContainerGetResponse_TContainerGetValueResponse {
	if x != nil {
		return x.Keyval
	}
	return nil
}

func (x *TContainerGetResponse_TContainerGetListResponse) GetChangeTime() uint64 {
	if x != nil && x.ChangeTime != nil {
		return *x.ChangeTime
	}
	return 0
}

func (x *TContainerGetResponse_TContainerGetListResponse) GetNoChanges() bool {
	if x != nil && x.NoChanges != nil {
		return *x.NoChanges
	}
	return false
}

type TFindLabelResponse_TFindLabelEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	State *string `protobuf:"bytes,2,req,name=state" json:"state,omitempty"`
	Label *string `protobuf:"bytes,3,req,name=label" json:"label,omitempty"`
	Value *string `protobuf:"bytes,4,req,name=value" json:"value,omitempty"`
}

func (x *TFindLabelResponse_TFindLabelEntry) Reset() {
	*x = TFindLabelResponse_TFindLabelEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFindLabelResponse_TFindLabelEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFindLabelResponse_TFindLabelEntry) ProtoMessage() {}

func (x *TFindLabelResponse_TFindLabelEntry) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFindLabelResponse_TFindLabelEntry.ProtoReflect.Descriptor instead.
func (*TFindLabelResponse_TFindLabelEntry) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{87, 0}
}

func (x *TFindLabelResponse_TFindLabelEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TFindLabelResponse_TFindLabelEntry) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *TFindLabelResponse_TFindLabelEntry) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *TFindLabelResponse_TFindLabelEntry) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type TVolumePropertyListResponse_TVolumePropertyDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Desc *string `protobuf:"bytes,2,req,name=desc" json:"desc,omitempty"`
}

func (x *TVolumePropertyListResponse_TVolumePropertyDescription) Reset() {
	*x = TVolumePropertyListResponse_TVolumePropertyDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVolumePropertyListResponse_TVolumePropertyDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVolumePropertyListResponse_TVolumePropertyDescription) ProtoMessage() {}

func (x *TVolumePropertyListResponse_TVolumePropertyDescription) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVolumePropertyListResponse_TVolumePropertyDescription.ProtoReflect.Descriptor instead.
func (*TVolumePropertyListResponse_TVolumePropertyDescription) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{98, 0}
}

func (x *TVolumePropertyListResponse_TVolumePropertyDescription) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TVolumePropertyListResponse_TVolumePropertyDescription) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

var File_rpc_proto protoreflect.FileDescriptor

var file_rpc_proto_rawDesc = []byte{
	0x0a, 0x09, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63,
	0x22, 0xe2, 0x17, 0x0a, 0x11, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0b, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x07, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x74,
	0x6f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6b, 0x69,
	0x6c, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x67,
	0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x61, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x09, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x69, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x69, 0x74, 0x18,
	0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x46, 0x69, 0x6e,
	0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x49, 0x6e, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x65,
	0x63, 0x18, 0xe6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x18, 0xe7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x79, 0x18,
	0xe8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x10, 0x4c, 0x69, 0x6e, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0c, 0x75, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x12, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x74, 0x75, 0x6e,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x75, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x0f, 0x67, 0x65, 0x74, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x74, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x75, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x0d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x0a, 0x53, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x7d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x65, 0x74, 0x53, 0x79, 0x6d,
	0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x4e,
	0x65, 0x77, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4e, 0x65, 0x77, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0c, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x53, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x11,
	0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0xaf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74,
	0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0xb0, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x0f, 0x70, 0x75, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0xb1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x11, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0xb2,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x44, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xee, 0x0b, 0x0a, 0x12, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x45, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x3a, 0x09, 0x4c, 0x6f, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x04, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x07, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x77,
	0x61, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x12, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x11, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x69, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x57,
	0x61, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x46,
	0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x08, 0x49, 0x6e, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x49, 0x6e, 0x63, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x79, 0x18,
	0xe8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4e,
	0x65, 0x77, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x7f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x53, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xae, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0xaf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x0f, 0x70, 0x75, 0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0xb0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x0a, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x70, 0x12, 0x2c, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x70, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x0d, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x1a, 0x2b, 0x0a, 0x0f, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x12, 0x0b, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x22, 0x6e,
	0x0a, 0x08, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x28, 0x0a, 0x03, 0x6d, 0x61,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55,
	0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x0d, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x1a, 0x29, 0x0a, 0x0d, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x12, 0x0b, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x22, 0x3c,
	0x0a, 0x06, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x3a, 0x09, 0x4c, 0x6f, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x0b, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x22, 0x4b, 0x0a, 0x05,
	0x54, 0x43, 0x72, 0x65, 0x64, 0x12, 0x0c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07,
	0x12, 0x0d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0b, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x12, 0x0b, 0x0a, 0x03,
	0x67, 0x72, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x07, 0x22, 0x29, 0x0a, 0x0d, 0x54, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x0b, 0x0a, 0x03, 0x63, 0x61,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x68, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x22, 0x25, 0x0a, 0x15, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x76, 0x12, 0x0c, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x22, 0x5a, 0x0a, 0x10, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12,
	0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05,
	0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0c, 0x0a, 0x04, 0x73,
	0x61, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x22, 0x42, 0x0a, 0x0d, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x12, 0x22, 0x0a, 0x03, 0x76, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12, 0x0d, 0x0a, 0x05,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x22, 0x62, 0x0a, 0x10, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x11, 0x0a,
	0x09, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x12, 0x0c, 0x0a, 0x04, 0x73, 0x6f, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c,
	0x0a, 0x04, 0x68, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x12, 0x11, 0x0a, 0x09,
	0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x22,
	0x49, 0x0a, 0x11, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x75, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x22, 0x2b, 0x0a, 0x15, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x22, 0x47, 0x0a, 0x10, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12,
	0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x11, 0x0a,
	0x09, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x22, 0x3a, 0x0a, 0x11, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x75, 0x0a, 0x10,
	0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x70, 0x75, 0x53, 0x65, 0x74,
	0x12, 0x0e, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x0b, 0x0a, 0x03, 0x61, 0x72, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0c, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x63,
	0x70, 0x75, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6a, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x22, 0x43, 0x0a, 0x13, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x22, 0x3e, 0x0a, 0x14, 0x54, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x42,
	0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x14, 0x54, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x0e, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x10, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x22, 0x40, 0x0a, 0x15, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x27,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x22, 0x2f, 0x0a, 0x0f,
	0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12,
	0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x22, 0x3a, 0x0a,
	0x15, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x10, 0x54, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0c, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x22, 0x49, 0x0a, 0x11, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x22, 0x2f, 0x0a, 0x13, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e,
	0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x61, 0x72, 0x67, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x22, 0x4f, 0x0a, 0x13, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x4e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x03, 0x63, 0x66, 0x67,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x11, 0x0a, 0x09, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x22, 0x2f, 0x0a, 0x11, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x22, 0x70, 0x0a, 0x12, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x31, 0x0a, 0x03, 0x63, 0x66,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x1a, 0x27, 0x0a,
	0x0c, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x0b, 0x0a,
	0x03, 0x64, 0x65, 0x76, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x22, 0xe9, 0x01, 0x0a, 0x07, 0x54, 0x56, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x0c, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x12,
	0x10, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x0c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x12,
	0x10, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x6e, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x12,
	0x0c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0d, 0x0a,
	0x05, 0x73, 0x68, 0x6d, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04,
	0x68, 0x75, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04, 0x73, 0x77,
	0x61, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x04, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x04, 0x12, 0x0d, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x04, 0x22, 0xc8, 0x12, 0x0a, 0x10, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x0d, 0x61, 0x62, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0a, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x1a, 0x0a, 0x12, 0x61, 0x62, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x65,
	0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13,
	0x0a, 0x0b, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x75, 0x6d, 0x70, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x12, 0x11, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x1c, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x12, 0x15, 0x0a, 0x0d,
	0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x04, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x45, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x12, 0x12,
	0x0a, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x04, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x12, 0x18, 0x0a, 0x10, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x49, 0x20, 0x01, 0x28, 0x09, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x2f,
	0x0a, 0x10, 0x63, 0x70, 0x75, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x70, 0x75, 0x53, 0x65, 0x74, 0x12,
	0x11, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x04, 0x12, 0x18, 0x0a, 0x10, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x04, 0x12, 0x10, 0x0a, 0x08,
	0x63, 0x70, 0x75, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x04, 0x12, 0x15,
	0x0a, 0x0d, 0x63, 0x70, 0x75, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x04, 0x12, 0x17, 0x0a, 0x0f, 0x63, 0x70, 0x75, 0x5f, 0x62, 0x75, 0x72,
	0x73, 0x74, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x04, 0x12, 0x1e,
	0x0a, 0x16, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x04, 0x12, 0x15,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x04, 0x12, 0x14, 0x0a, 0x0c, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x04, 0x12, 0x1e, 0x0a, 0x07, 0x69,
	0x6f, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x08, 0x69,
	0x6f, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x1d, 0x0a, 0x06,
	0x69, 0x6f, 0x5f, 0x6f, 0x70, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x0b, 0x69,
	0x6f, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x73, 0x18, 0xd5, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70,
	0x12, 0x24, 0x0a, 0x0c, 0x69, 0x6f, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x73,
	0x18, 0xd6, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55,
	0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x1e, 0x0a, 0x07, 0x69, 0x6f, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55,
	0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x22, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x0c, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x04,
	0x12, 0x1e, 0x0a, 0x16, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x75, 0x61, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28, 0x04,
	0x12, 0x1a, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x27, 0x20, 0x01, 0x28, 0x04, 0x12, 0x1a, 0x0a, 0x12,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x52, 0x20, 0x01, 0x28, 0x09, 0x12, 0x18, 0x0a, 0x10, 0x61, 0x6e, 0x6f, 0x6e,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x6e, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x12, 0x1b, 0x0a, 0x13, 0x63, 0x70, 0x75, 0x5f, 0x67, 0x75,
	0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x01, 0x12, 0x1c, 0x0a, 0x13, 0x63, 0x70, 0x75, 0x5f, 0x67, 0x75, 0x61, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x65, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0xa5, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x12, 0x18, 0x0a, 0x0f, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0xa6, 0x03, 0x20, 0x01, 0x28, 0x01, 0x12, 0x18, 0x0a, 0x0f, 0x63,
	0x70, 0x75, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0xa7,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x04, 0x12, 0x15, 0x0a, 0x0d, 0x68, 0x75,
	0x67, 0x65, 0x74, 0x6c, 0x62, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x15, 0x0a, 0x0d, 0x68, 0x75, 0x67, 0x65, 0x74, 0x6c, 0x62, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x04, 0x12, 0x14, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x6f,
	0x72, 0x5f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x04, 0x12, 0x14,
	0x0a, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x04, 0x12, 0x18, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x72,
	0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x04, 0x12, 0x24,
	0x0a, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x13, 0x0a, 0x0b, 0x73, 0x68, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x47, 0x20, 0x01, 0x28, 0x04, 0x12, 0x13, 0x0a, 0x0b, 0x6d, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x48, 0x20, 0x01, 0x28, 0x04, 0x12, 0x11,
	0x0a, 0x09, 0x6f, 0x6f, 0x6d, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x17, 0x0a, 0x0f, 0x6f, 0x6f, 0x6d, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a, 0x6f, 0x6f,
	0x6d, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x08, 0x12, 0x20,
	0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70,
	0x12, 0x22, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e,
	0x74, 0x4d, 0x61, 0x70, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x64, 0x72, 0x6f, 0x70,
	0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55,
	0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x23, 0x0a,
	0x0c, 0x6e, 0x65, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d,
	0x61, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x0c, 0x6e, 0x65, 0x74,
	0x5f, 0x72, 0x78, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x29,
	0x0a, 0x11, 0x6e, 0x65, 0x74, 0x5f, 0x72, 0x78, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x18, 0xd9, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x0c, 0x6e, 0x65, 0x74,
	0x5f, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x25,
	0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69,
	0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x78, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x0b, 0x6e, 0x65,
	0x74, 0x5f, 0x6e, 0x65, 0x74, 0x73, 0x74, 0x61, 0x74, 0x18, 0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12,
	0x20, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x5f, 0x73, 0x6e, 0x6d, 0x70, 0x18, 0x87, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61,
	0x70, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x73, 0x6e, 0x6d, 0x70, 0x36, 0x18, 0x88,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e,
	0x74, 0x4d, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2d, 0x0a, 0x0d, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x42, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x43,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x1a, 0x0a, 0x05, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x44, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xac, 0x11,
	0x0a, 0x0e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0c,
	0x0a, 0x04, 0x77, 0x65, 0x61, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x1f, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x0f,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x30, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x76, 0x18,
	0x4c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67,
	0x76, 0x12, 0x1f, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45,
	0x6e, 0x76, 0x12, 0x26, 0x0a, 0x0a, 0x65, 0x6e, 0x76, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x12, 0x26, 0x0a, 0x06, 0x75, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x69, 0x73, 0x6f, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x09, 0x76, 0x69, 0x72,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x12, 0x14, 0x0a, 0x0c,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x17, 0x0a, 0x0f, 0x70, 0x6f, 0x72, 0x74, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x63,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x66, 0x73, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0e, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x73, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x08, 0x12, 0x17, 0x0a,
	0x0f, 0x75, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x65, 0x63,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x12, 0x1d, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x72, 0x65, 0x64, 0x12, 0x0c, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x43, 0x72, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x18, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x09, 0x12, 0x28, 0x0a, 0x0c, 0x63, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x5f, 0x61, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x12, 0x27, 0x0a, 0x04, 0x62, 0x69,
	0x6e, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x29,
	0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x0b, 0x0a,
	0x03, 0x63, 0x77, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x74,
	0x64, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13,
	0x0a, 0x0b, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x12, 0x14, 0x0a, 0x0c, 0x73, 0x74, 0x64, 0x6f,
	0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0d,
	0x0a, 0x05, 0x75, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0f, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x12, 0x15,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x04, 0x12, 0x14, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x12, 0x15, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x26, 0x20, 0x01,
	0x28, 0x04, 0x12, 0x2f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x1b, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x62, 0x6c, 0x6b,
	0x69, 0x6f, 0x18, 0x51, 0x20, 0x01, 0x28, 0x08, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a,
	0x63, 0x70, 0x75, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x01,
	0x12, 0x15, 0x0a, 0x0d, 0x63, 0x70, 0x75, 0x5f, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x01, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x01, 0x12, 0x17, 0x0a, 0x0f, 0x63, 0x70,
	0x75, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x2c, 0x20,
	0x01, 0x28, 0x01, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x04, 0x12, 0x26, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x5f, 0x73,
	0x65, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x70, 0x75, 0x53, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x0c, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x2f, 0x20, 0x01, 0x28, 0x04, 0x12, 0x11, 0x0a, 0x09, 0x69, 0x6f, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x69, 0x6f, 0x5f, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x31, 0x20, 0x01, 0x28, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69,
	0x6f, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x0c,
	0x69, 0x6f, 0x5f, 0x6f, 0x70, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61,
	0x70, 0x12, 0x18, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x67, 0x75, 0x61, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x12, 0x14, 0x0a, 0x0c, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x35, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x1a, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x52, 0x20, 0x01, 0x28, 0x09, 0x12, 0x12, 0x0a,
	0x0a, 0x61, 0x6e, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x16, 0x0a, 0x0e, 0x61, 0x6e, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x69, 0x72,
	0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x12, 0x15,
	0x0a, 0x0d, 0x68, 0x75, 0x67, 0x65, 0x74, 0x6c, 0x62, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x39, 0x20, 0x01, 0x28, 0x04, 0x12, 0x1b, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x67, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x08, 0x12, 0x1b, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x69, 0x7a, 0x65,
	0x5f, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x61, 0x74, 0x68, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x08, 0x12,
	0x11, 0x0a, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x08, 0x12, 0x15, 0x0a, 0x0d, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x64, 0x6a, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x74, 0x61, 0x6c, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x08, 0x12,
	0x25, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x08, 0x69, 0x70, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x23, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x67, 0x77, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x10, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x43,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x65, 0x74, 0x63,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x09, 0x12, 0x1f, 0x0a, 0x06,
	0x73, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x24, 0x0a,
	0x0d, 0x6e, 0x65, 0x74, 0x5f, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x47,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74,
	0x4d, 0x61, 0x70, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x55, 0x69,
	0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x5f, 0x72, 0x78, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x55, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x10, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x4b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x0a,
	0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x25, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x2e, 0x0a, 0x0f, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x22, 0xaa, 0x01, 0x0a, 0x12, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x28, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x22, 0x99, 0x01,
	0x0a, 0x0b, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x11, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x10, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x12, 0x13, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x16, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x12, 0x15, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x63, 0x77, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x22, 0x55, 0x0a, 0x0f, 0x54, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0d, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x12, 0x11, 0x0a, 0x09, 0x67,
	0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0d,
	0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x12, 0x11, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x22, 0x4f, 0x0a, 0x10, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x12, 0x18, 0x0a, 0x04, 0x63, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x72, 0x65, 0x64, 0x12, 0x13, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x07, 0x22, 0x33, 0x0a, 0x0e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x79, 0x6d, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x12, 0x13, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x22, 0x3e, 0x0a, 0x0c, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x63, 0x6f, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x22, 0xa7, 0x05, 0x0a, 0x0b, 0x54, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0f, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0f, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x0d, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0e, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x12,
	0x11, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x12, 0x18, 0x0a, 0x04, 0x63, 0x72, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x72, 0x65, 0x64, 0x12, 0x13, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x07, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x43, 0x72, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x11, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x12, 0x14, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x12, 0x0a,
	0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a,
	0x08, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x29, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x79, 0x6d,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x2a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a,
	0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x08,
	0x22, 0x75, 0x0a, 0x11, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x04,
	0x12, 0x15, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x22, 0x77, 0x0a, 0x13, 0x54, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x13, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x04, 0x12, 0x15, 0x0a, 0x0d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09,
	0x22, 0x83, 0x02, 0x0a, 0x0c, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12,
	0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x15,
	0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x12, 0x13, 0x0a, 0x0b, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x12,
	0x12, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x12, 0x17, 0x0a, 0x0f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x12, 0x17, 0x0a, 0x0f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a,
	0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x10, 0x54, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0b, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x22, 0x13, 0x0a, 0x11,
	0x54, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x27, 0x0a, 0x17, 0x54, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04,
	0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x22, 0x89, 0x0c, 0x0a, 0x12, 0x54,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x15, 0x0a, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x16, 0x0a, 0x0e, 0x70, 0x6f, 0x72, 0x74,
	0x6f, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x16, 0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x06, 0x12, 0x10, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x06, 0x12, 0x0e, 0x0a, 0x06, 0x66, 0x61,
	0x74, 0x61, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x06, 0x12, 0x14, 0x0a, 0x0c, 0x70, 0x6f,
	0x72, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x06,
	0x12, 0x14, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x6f, 0x5f, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x02, 0x28, 0x06, 0x12, 0x15, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x06, 0x12, 0x0e, 0x0a,
	0x06, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x06, 0x12, 0x0e, 0x0a,
	0x06, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x64, 0x20, 0x02, 0x28, 0x08, 0x12, 0x0d,
	0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x65, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x66, 0x20, 0x02, 0x28, 0x06,
	0x12, 0x11, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x67, 0x20,
	0x02, 0x28, 0x06, 0x12, 0x1b, 0x0a, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x68, 0x20, 0x02, 0x28, 0x06,
	0x12, 0x1c, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x69, 0x20, 0x02, 0x28, 0x06, 0x12, 0x16,
	0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x73, 0x74,
	0x18, 0x6a, 0x20, 0x02, 0x28, 0x06, 0x12, 0x16, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x6b, 0x20, 0x02, 0x28, 0x06, 0x12, 0x10,
	0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x6c, 0x20, 0x02, 0x28, 0x06,
	0x12, 0x18, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0xc8, 0x01, 0x20, 0x02, 0x28, 0x06, 0x12, 0x18, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0xc9, 0x01,
	0x20, 0x02, 0x28, 0x06, 0x12, 0x1a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0xca, 0x01, 0x20, 0x02, 0x28, 0x06,
	0x12, 0x1a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xcb, 0x01, 0x20, 0x02, 0x28, 0x06, 0x12, 0x1a, 0x0a, 0x11,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x18, 0xcc, 0x01, 0x20, 0x02, 0x28, 0x06, 0x12, 0x1f, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x18, 0xcd, 0x01, 0x20, 0x02, 0x28, 0x06, 0x12, 0x16, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6f, 0x6f, 0x6d, 0x18, 0xce, 0x01, 0x20, 0x02, 0x28,
	0x06, 0x12, 0x19, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x62,
	0x75, 0x72, 0x69, 0x65, 0x64, 0x18, 0xcf, 0x01, 0x20, 0x02, 0x28, 0x06, 0x12, 0x17, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0xd0,
	0x01, 0x20, 0x02, 0x28, 0x06, 0x12, 0x1a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x18, 0xd1, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x12, 0x18, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x06, 0x12, 0x15, 0x0a, 0x0c, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xac, 0x02, 0x20, 0x02,
	0x28, 0x06, 0x12, 0x15, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0xad, 0x02, 0x20, 0x02, 0x28, 0x06, 0x12, 0x17, 0x0a, 0x0e, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xaf, 0x02, 0x20, 0x02,
	0x28, 0x06, 0x12, 0x16, 0x0a, 0x0d, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x18, 0xb0, 0x02, 0x20, 0x02, 0x28, 0x06, 0x12, 0x15, 0x0a, 0x0c, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0xb1, 0x02, 0x20, 0x02, 0x28,
	0x06, 0x12, 0x1d, 0x0a, 0x14, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x5f, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x18, 0xb2, 0x02, 0x20, 0x02, 0x28, 0x06,
	0x12, 0x14, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18,
	0xb3, 0x02, 0x20, 0x02, 0x28, 0x06, 0x12, 0x15, 0x0a, 0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x86, 0x03, 0x20, 0x02, 0x28, 0x06, 0x12, 0x15, 0x0a,
	0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x87, 0x03,
	0x20, 0x02, 0x28, 0x06, 0x12, 0x15, 0x0a, 0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x18, 0x88, 0x03, 0x20, 0x02, 0x28, 0x06, 0x12, 0x15, 0x0a, 0x0c, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x90, 0x03, 0x20, 0x02,
	0x28, 0x06, 0x12, 0x13, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x91, 0x03, 0x20, 0x02, 0x28, 0x06, 0x12, 0x19, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x92, 0x03, 0x20, 0x02,
	0x28, 0x06, 0x12, 0x17, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x64, 0x18, 0xf4, 0x03, 0x20, 0x02, 0x28, 0x06, 0x12, 0x1a, 0x0a, 0x11, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0xf5, 0x03, 0x20, 0x02, 0x28, 0x06, 0x12, 0x17, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0xf6, 0x03, 0x20, 0x02, 0x28, 0x06,
	0x12, 0x18, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x18, 0xf7, 0x03, 0x20, 0x02, 0x28, 0x06, 0x12, 0x1a, 0x0a, 0x11, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x31, 0x73, 0x18,
	0xf8, 0x03, 0x20, 0x02, 0x28, 0x06, 0x12, 0x1a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x33, 0x73, 0x18, 0xf9, 0x03, 0x20, 0x02,
	0x28, 0x06, 0x12, 0x1b, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x6f,
	0x6e, 0x67, 0x65, 0x72, 0x5f, 0x33, 0x30, 0x73, 0x18, 0xfa, 0x03, 0x20, 0x02, 0x28, 0x06, 0x12,
	0x1a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x65,
	0x72, 0x5f, 0x35, 0x6d, 0x18, 0xfb, 0x03, 0x20, 0x02, 0x28, 0x06, 0x12, 0x21, 0x0a, 0x18, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xfc, 0x03, 0x20, 0x01, 0x28, 0x06, 0x12, 0x14,
	0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0xd8, 0x04,
	0x20, 0x02, 0x28, 0x06, 0x12, 0x1b, 0x0a, 0x12, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0xd9, 0x04, 0x20, 0x02, 0x28,
	0x06, 0x12, 0x1d, 0x0a, 0x14, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0xda, 0x04, 0x20, 0x02, 0x28, 0x06,
	0x12, 0x1e, 0x0a, 0x15, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f,
	0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0xdb, 0x04, 0x20, 0x01, 0x28, 0x06,
	0x12, 0x1d, 0x0a, 0x14, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x6e, 0x65, 0x74, 0x61, 0x64, 0x64, 0x72, 0x18, 0xdc, 0x04, 0x20, 0x01, 0x28, 0x06, 0x12,
	0x16, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0xbc, 0x05, 0x20, 0x01, 0x28, 0x06, 0x12, 0x18, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xbd, 0x05, 0x20, 0x01, 0x28,
	0x06, 0x12, 0x19, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0xbe, 0x05, 0x20, 0x01, 0x28, 0x06, 0x12, 0x18, 0x0a, 0x0f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18,
	0xbf, 0x05, 0x20, 0x01, 0x28, 0x06, 0x22, 0x43, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x66,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0d, 0x0a, 0x05,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x65, 0x20, 0x01, 0x28, 0x08, 0x22, 0x14, 0x0a, 0x12, 0x54,
	0x53, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x72, 0x0a, 0x16, 0x54, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x22, 0x40, 0x0a, 0x16, 0x54, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x22, 0x5d, 0x0a, 0x15, 0x54, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x1f,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x12,
	0x15, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x22, 0x47, 0x0a, 0x12, 0x54, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x44, 0x75, 0x6d, 0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x10,
	0x73, 0x74, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x12, 0x17, 0x0a, 0x0f, 0x73, 0x74, 0x64, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x22,
	0x93, 0x01, 0x0a, 0x1b, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x12, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x75, 0x6d, 0x70, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x75, 0x6d, 0x70, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7e, 0x0a, 0x16, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0d,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3e, 0x0a, 0x17, 0x54, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x1f, 0x0a, 0x1d, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x1e, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x5d, 0x0a, 0x1b, 0x54, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x22, 0x1b, 0x0a, 0x19, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x1a, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x35, 0x0a, 0x17, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x22, 0x27, 0x0a, 0x17, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x22, 0x28, 0x0a, 0x18, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x22, 0x3c, 0x0a, 0x15, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a,
	0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x22, 0x26, 0x0a, 0x16, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x22, 0x5a, 0x0a, 0x1c, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x22, 0x2e, 0x0a, 0x1d, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x22, 0x52, 0x0a, 0x18, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x0c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0c,
	0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0c, 0x0a, 0x04,
	0x72, 0x65, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x22, 0x2a, 0x0a, 0x19, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x22, 0x4d, 0x0a, 0x1c, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x09, 0x22, 0x7b, 0x0a, 0x14, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x12, 0x10, 0x0a,
	0x08, 0x6e, 0x6f, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12,
	0x0c, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0c, 0x0a,
	0x04, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x12, 0x15, 0x0a, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x22, 0xe4, 0x02, 0x0a, 0x15, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0x6b, 0x0a, 0x1a, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x1a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x08,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x1a, 0x99, 0x01,
	0x0a, 0x19, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x45, 0x0a, 0x06, 0x6b, 0x65, 0x79,
	0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x13, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x22, 0x26, 0x0a, 0x16, 0x54, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x22, 0x28, 0x0a, 0x18, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x22, 0x39, 0x0a, 0x15, 0x54,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x22, 0x26, 0x0a, 0x16, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x22, 0x27,
	0x0a, 0x17, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x22, 0x48, 0x0a, 0x13, 0x54, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x09, 0x22, 0x24, 0x0a, 0x14, 0x54, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x22, 0x5e, 0x0a, 0x15, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x12, 0x12,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x12, 0x14, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x22, 0x61, 0x0a, 0x16, 0x54, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12,
	0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c,
	0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0d, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x22, 0x32, 0x0a, 0x15, 0x54, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x12, 0x0b, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x22, 0x40,
	0x0a, 0x15, 0x54, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0d, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x6f, 0x6d, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09,
	0x22, 0x32, 0x0a, 0x15, 0x54, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x6f, 0x6d, 0x6d, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x22, 0x26, 0x0a, 0x16, 0x54, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x22, 0x4e, 0x0a, 0x11,
	0x54, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x22, 0x99, 0x01, 0x0a,
	0x12, 0x54, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x46, 0x69, 0x6e, 0x64,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x4c, 0x0a, 0x0f, 0x54, 0x46,
	0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0c, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x22, 0x61, 0x0a, 0x10, 0x54, 0x53, 0x65, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x22, 0x36, 0x0a, 0x11, 0x54,
	0x53, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x22, 0x3f, 0x0a, 0x10, 0x54, 0x49, 0x6e, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x3a, 0x01, 0x31, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x49, 0x6e, 0x63, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x22, 0x48, 0x0a, 0x12, 0x54, 0x53, 0x65,
	0x74, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x11, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x22, 0x35, 0x0a, 0x11, 0x54, 0x4e, 0x65, 0x77, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0x36, 0x0a, 0x12, 0x54, 0x4e,
	0x65, 0x77, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x22, 0x4b, 0x0a, 0x11, 0x54, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x22,
	0x36, 0x0a, 0x12, 0x54, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0x1c, 0x0a, 0x1a, 0x54, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x1b, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x38, 0x0a, 0x1a, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x22, 0x4e, 0x0a, 0x14, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x28, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x22, 0x6a, 0x0a, 0x12, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x22, 0x57, 0x0a, 0x14,
	0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x22, 0x4c, 0x0a, 0x12, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x22, 0x3f, 0x0a, 0x13, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x12, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54,
	0x75, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x28, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x22, 0x23, 0x0a, 0x13, 0x54, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x22, 0x27, 0x0a, 0x14, 0x54, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0f, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x22, 0x30, 0x0a, 0x11, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x22, 0x4b, 0x0a, 0x12, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x12, 0x26, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xa6, 0x01, 0x0a, 0x13, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x62, 0x61, 0x6c,
	0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x12, 0x15,
	0x0a, 0x0d, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x22, 0x66, 0x0a, 0x13, 0x54, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12,
	0x0f, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x22, 0x42, 0x0a, 0x13, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x22, 0x37, 0x0a, 0x17, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0d, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d,
	0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x22, 0x31, 0x0a,
	0x18, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x0d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x22, 0x4e, 0x0a, 0x17, 0x54, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09,
	0x22, 0x32, 0x0a, 0x13, 0x54, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x22, 0x6c, 0x0a, 0x14, 0x54, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x22, 0x34, 0x0a, 0x15, 0x54, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x22, 0x6e, 0x0a, 0x15, 0x54, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12,
	0x0f, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x15, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x22, 0x57, 0x0a, 0x15, 0x54, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12,
	0x0f, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x10, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x22, 0x4f, 0x0a, 0x0c, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x11, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x22, 0x38, 0x0a, 0x19, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a,
	0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x22, 0x3e, 0x0a, 0x1a,
	0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x36, 0x0a, 0x17,
	0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x22, 0x3d, 0x0a, 0x18, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x22, 0x73, 0x0a, 0x17, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x11, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x14, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x22, 0x3c, 0x0a, 0x18, 0x54, 0x44, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x19, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x2a, 0x92, 0x06, 0x0a, 0x06, 0x45, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x44, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x6f, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41,
	0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x0c, 0x12, 0x12,
	0x0a, 0x0e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x10, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x6f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x0e, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x75, 0x73, 0x79, 0x10, 0x0f, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x10, 0x11, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x12, 0x12,
	0x11, 0x0a, 0x0d, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x10, 0x13, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x14, 0x12,
	0x12, 0x0a, 0x0e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x10, 0x15, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x16, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x6f, 0x73, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x17, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x18, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x74, 0x68, 0x10, 0x19, 0x12, 0x19, 0x0a, 0x15, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x10, 0x1a, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x6f, 0x72, 0x74, 0x6f, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x10, 0x1b, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x1c, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x10, 0x1d, 0x12, 0x0f, 0x0a, 0x0b,
	0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x1e, 0x12, 0x14, 0x0a,
	0x10, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x46, 0x61, 0x74, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x1f, 0x12, 0x0d, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10,
	0x94, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0xf6, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x6e,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0xf7, 0x03, 0x12, 0x12, 0x0a, 0x0d,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0xf8, 0x03,
	0x12, 0x13, 0x0a, 0x0e, 0x50, 0x6f, 0x72, 0x74, 0x6f, 0x64, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x10, 0xf9, 0x03, 0x12, 0x0a, 0x0a, 0x05, 0x54, 0x61, 0x69, 0x6e, 0x74, 0x10, 0x9a,
	0x05, 0x12, 0x0b, 0x0a, 0x06, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x10, 0xbc, 0x05, 0x12, 0x18,
	0x0a, 0x13, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xbd, 0x05, 0x12, 0x0b, 0x0a, 0x06, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x64, 0x10, 0xe8, 0x07, 0x42, 0x06, 0x5a, 0x04, 0x72, 0x70, 0x63, 0x2f,
}

var (
	file_rpc_proto_rawDescOnce sync.Once
	file_rpc_proto_rawDescData = file_rpc_proto_rawDesc
)

func file_rpc_proto_rawDescGZIP() []byte {
	file_rpc_proto_rawDescOnce.Do(func() {
		file_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_proto_rawDescData)
	})
	return file_rpc_proto_rawDescData
}

var file_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 137)
var file_rpc_proto_goTypes = []interface{}{
	(EError)(0),                                                        // 0: rpc.EError
	(*TContainerRequest)(nil),                                          // 1: rpc.TContainerRequest
	(*TContainerResponse)(nil),                                         // 2: rpc.TContainerResponse
	(*TStringMap)(nil),                                                 // 3: rpc.TStringMap
	(*TUintMap)(nil),                                                   // 4: rpc.TUintMap
	(*TError)(nil),                                                     // 5: rpc.TError
	(*TCred)(nil),                                                      // 6: rpc.TCred
	(*TCapabilities)(nil),                                              // 7: rpc.TCapabilities
	(*TContainerCommandArgv)(nil),                                      // 8: rpc.TContainerCommandArgv
	(*TContainerEnvVar)(nil),                                           // 9: rpc.TContainerEnvVar
	(*TContainerEnv)(nil),                                              // 10: rpc.TContainerEnv
	(*TContainerUlimit)(nil),                                           // 11: rpc.TContainerUlimit
	(*TContainerUlimits)(nil),                                          // 12: rpc.TContainerUlimits
	(*TContainerControllers)(nil),                                      // 13: rpc.TContainerControllers
	(*TContainerCgroup)(nil),                                           // 14: rpc.TContainerCgroup
	(*TContainerCgroups)(nil),                                          // 15: rpc.TContainerCgroups
	(*TContainerCpuSet)(nil),                                           // 16: rpc.TContainerCpuSet
	(*TContainerBindMount)(nil),                                        // 17: rpc.TContainerBindMount
	(*TContainerBindMounts)(nil),                                       // 18: rpc.TContainerBindMounts
	(*TContainerVolumeLink)(nil),                                       // 19: rpc.TContainerVolumeLink
	(*TContainerVolumeLinks)(nil),                                      // 20: rpc.TContainerVolumeLinks
	(*TContainerVolumes)(nil),                                          // 21: rpc.TContainerVolumes
	(*TContainerPlace)(nil),                                            // 22: rpc.TContainerPlace
	(*TContainerPlaceConfig)(nil),                                      // 23: rpc.TContainerPlaceConfig
	(*TContainerDevice)(nil),                                           // 24: rpc.TContainerDevice
	(*TContainerDevices)(nil),                                          // 25: rpc.TContainerDevices
	(*TContainerNetOption)(nil),                                        // 26: rpc.TContainerNetOption
	(*TContainerNetConfig)(nil),                                        // 27: rpc.TContainerNetConfig
	(*TContainerIpLimit)(nil),                                          // 28: rpc.TContainerIpLimit
	(*TContainerIpConfig)(nil),                                         // 29: rpc.TContainerIpConfig
	(*TVmStat)(nil),                                                    // 30: rpc.TVmStat
	(*TContainerStatus)(nil),                                           // 31: rpc.TContainerStatus
	(*TContainerSpec)(nil),                                             // 32: rpc.TContainerSpec
	(*TContainer)(nil),                                                 // 33: rpc.TContainer
	(*TVolumeProperty)(nil),                                            // 34: rpc.TVolumeProperty
	(*TVolumeDescription)(nil),                                         // 35: rpc.TVolumeDescription
	(*TVolumeLink)(nil),                                                // 36: rpc.TVolumeLink
	(*TVolumeResource)(nil),                                            // 37: rpc.TVolumeResource
	(*TVolumeDirectory)(nil),                                           // 38: rpc.TVolumeDirectory
	(*TVolumeSymlink)(nil),                                             // 39: rpc.TVolumeSymlink
	(*TVolumeShare)(nil),                                               // 40: rpc.TVolumeShare
	(*TVolumeSpec)(nil),                                                // 41: rpc.TVolumeSpec
	(*TLayerDescription)(nil),                                          // 42: rpc.TLayerDescription
	(*TStorageDescription)(nil),                                        // 43: rpc.TStorageDescription
	(*TMetaStorage)(nil),                                               // 44: rpc.TMetaStorage
	(*TVersionRequest)(nil),                                            // 45: rpc.TVersionRequest
	(*TVersionResponse)(nil),                                           // 46: rpc.TVersionResponse
	(*TGetSystemRequest)(nil),                                          // 47: rpc.TGetSystemRequest
	(*TClearStatisticsRequest)(nil),                                    // 48: rpc.TClearStatisticsRequest
	(*TGetSystemResponse)(nil),                                         // 49: rpc.TGetSystemResponse
	(*TSetSystemRequest)(nil),                                          // 50: rpc.TSetSystemRequest
	(*TSetSystemResponse)(nil),                                         // 51: rpc.TSetSystemResponse
	(*TCreateFromSpecRequest)(nil),                                     // 52: rpc.TCreateFromSpecRequest
	(*TUpdateFromSpecRequest)(nil),                                     // 53: rpc.TUpdateFromSpecRequest
	(*TListContainersFilter)(nil),                                      // 54: rpc.TListContainersFilter
	(*TStreamDumpOptions)(nil),                                         // 55: rpc.TStreamDumpOptions
	(*TListContainersFieldOptions)(nil),                                // 56: rpc.TListContainersFieldOptions
	(*TListContainersRequest)(nil),                                     // 57: rpc.TListContainersRequest
	(*TListContainersResponse)(nil),                                    // 58: rpc.TListContainersResponse
	(*TContainerPropertyListRequest)(nil),                              // 59: rpc.TContainerPropertyListRequest
	(*TContainerPropertyListResponse)(nil),                             // 60: rpc.TContainerPropertyListResponse
	(*TContainerDataListRequest)(nil),                                  // 61: rpc.TContainerDataListRequest
	(*TContainerDataListResponse)(nil),                                 // 62: rpc.TContainerDataListResponse
	(*TContainerCreateRequest)(nil),                                    // 63: rpc.TContainerCreateRequest
	(*TContainerDestroyRequest)(nil),                                   // 64: rpc.TContainerDestroyRequest
	(*TContainerListRequest)(nil),                                      // 65: rpc.TContainerListRequest
	(*TContainerListResponse)(nil),                                     // 66: rpc.TContainerListResponse
	(*TContainerGetPropertyRequest)(nil),                               // 67: rpc.TContainerGetPropertyRequest
	(*TContainerGetPropertyResponse)(nil),                              // 68: rpc.TContainerGetPropertyResponse
	(*TContainerGetDataRequest)(nil),                                   // 69: rpc.TContainerGetDataRequest
	(*TContainerGetDataResponse)(nil),                                  // 70: rpc.TContainerGetDataResponse
	(*TContainerSetPropertyRequest)(nil),                               // 71: rpc.TContainerSetPropertyRequest
	(*TContainerGetRequest)(nil),                                       // 72: rpc.TContainerGetRequest
	(*TContainerGetResponse)(nil),                                      // 73: rpc.TContainerGetResponse
	(*TContainerStartRequest)(nil),                                     // 74: rpc.TContainerStartRequest
	(*TContainerRespawnRequest)(nil),                                   // 75: rpc.TContainerRespawnRequest
	(*TContainerStopRequest)(nil),                                      // 76: rpc.TContainerStopRequest
	(*TContainerPauseRequest)(nil),                                     // 77: rpc.TContainerPauseRequest
	(*TContainerResumeRequest)(nil),                                    // 78: rpc.TContainerResumeRequest
	(*TConvertPathRequest)(nil),                                        // 79: rpc.TConvertPathRequest
	(*TConvertPathResponse)(nil),                                       // 80: rpc.TConvertPathResponse
	(*TContainerWaitRequest)(nil),                                      // 81: rpc.TContainerWaitRequest
	(*TContainerWaitResponse)(nil),                                     // 82: rpc.TContainerWaitResponse
	(*TContainerKillRequest)(nil),                                      // 83: rpc.TContainerKillRequest
	(*TAttachProcessRequest)(nil),                                      // 84: rpc.TAttachProcessRequest
	(*TLocateProcessRequest)(nil),                                      // 85: rpc.TLocateProcessRequest
	(*TLocateProcessResponse)(nil),                                     // 86: rpc.TLocateProcessResponse
	(*TFindLabelRequest)(nil),                                          // 87: rpc.TFindLabelRequest
	(*TFindLabelResponse)(nil),                                         // 88: rpc.TFindLabelResponse
	(*TSetLabelRequest)(nil),                                           // 89: rpc.TSetLabelRequest
	(*TSetLabelResponse)(nil),                                          // 90: rpc.TSetLabelResponse
	(*TIncLabelRequest)(nil),                                           // 91: rpc.TIncLabelRequest
	(*TIncLabelResponse)(nil),                                          // 92: rpc.TIncLabelResponse
	(*TSetSymlinkRequest)(nil),                                         // 93: rpc.TSetSymlinkRequest
	(*TNewVolumeRequest)(nil),                                          // 94: rpc.TNewVolumeRequest
	(*TNewVolumeResponse)(nil),                                         // 95: rpc.TNewVolumeResponse
	(*TGetVolumeRequest)(nil),                                          // 96: rpc.TGetVolumeRequest
	(*TGetVolumeResponse)(nil),                                         // 97: rpc.TGetVolumeResponse
	(*TVolumePropertyListRequest)(nil),                                 // 98: rpc.TVolumePropertyListRequest
	(*TVolumePropertyListResponse)(nil),                                // 99: rpc.TVolumePropertyListResponse
	(*TVolumeCreateRequest)(nil),                                       // 100: rpc.TVolumeCreateRequest
	(*TVolumeLinkRequest)(nil),                                         // 101: rpc.TVolumeLinkRequest
	(*TVolumeUnlinkRequest)(nil),                                       // 102: rpc.TVolumeUnlinkRequest
	(*TVolumeListRequest)(nil),                                         // 103: rpc.TVolumeListRequest
	(*TVolumeListResponse)(nil),                                        // 104: rpc.TVolumeListResponse
	(*TVolumeTuneRequest)(nil),                                         // 105: rpc.TVolumeTuneRequest
	(*TVolumeCheckRequest)(nil),                                        // 106: rpc.TVolumeCheckRequest
	(*TVolumeCheckResponse)(nil),                                       // 107: rpc.TVolumeCheckResponse
	(*TLayerListRequest)(nil),                                          // 108: rpc.TLayerListRequest
	(*TLayerListResponse)(nil),                                         // 109: rpc.TLayerListResponse
	(*TLayerImportRequest)(nil),                                        // 110: rpc.TLayerImportRequest
	(*TLayerExportRequest)(nil),                                        // 111: rpc.TLayerExportRequest
	(*TLayerRemoveRequest)(nil),                                        // 112: rpc.TLayerRemoveRequest
	(*TLayerGetPrivateRequest)(nil),                                    // 113: rpc.TLayerGetPrivateRequest
	(*TLayerGetPrivateResponse)(nil),                                   // 114: rpc.TLayerGetPrivateResponse
	(*TLayerSetPrivateRequest)(nil),                                    // 115: rpc.TLayerSetPrivateRequest
	(*TStorageListRequest)(nil),                                        // 116: rpc.TStorageListRequest
	(*TStorageListResponse)(nil),                                       // 117: rpc.TStorageListResponse
	(*TStorageRemoveRequest)(nil),                                      // 118: rpc.TStorageRemoveRequest
	(*TStorageImportRequest)(nil),                                      // 119: rpc.TStorageImportRequest
	(*TStorageExportRequest)(nil),                                      // 120: rpc.TStorageExportRequest
	(*TDockerImage)(nil),                                               // 121: rpc.TDockerImage
	(*TDockerImageStatusRequest)(nil),                                  // 122: rpc.TDockerImageStatusRequest
	(*TDockerImageStatusResponse)(nil),                                 // 123: rpc.TDockerImageStatusResponse
	(*TDockerImageListRequest)(nil),                                    // 124: rpc.TDockerImageListRequest
	(*TDockerImageListResponse)(nil),                                   // 125: rpc.TDockerImageListResponse
	(*TDockerImagePullRequest)(nil),                                    // 126: rpc.TDockerImagePullRequest
	(*TDockerImagePullResponse)(nil),                                   // 127: rpc.TDockerImagePullResponse
	(*TDockerImageRemoveRequest)(nil),                                  // 128: rpc.TDockerImageRemoveRequest
	(*TStringMap_TStringMapEntry)(nil),                                 // 129: rpc.TStringMap.TStringMapEntry
	(*TUintMap_TUintMapEntry)(nil),                                     // 130: rpc.TUintMap.TUintMapEntry
	(*TContainerIpConfig_TContainerIp)(nil),                            // 131: rpc.TContainerIpConfig.TContainerIp
	(*TContainerPropertyListResponse_TContainerPropertyListEntry)(nil), // 132: rpc.TContainerPropertyListResponse.TContainerPropertyListEntry
	(*TContainerDataListResponse_TContainerDataListEntry)(nil),         // 133: rpc.TContainerDataListResponse.TContainerDataListEntry
	(*TContainerGetResponse_TContainerGetValueResponse)(nil),           // 134: rpc.TContainerGetResponse.TContainerGetValueResponse
	(*TContainerGetResponse_TContainerGetListResponse)(nil),            // 135: rpc.TContainerGetResponse.TContainerGetListResponse
	(*TFindLabelResponse_TFindLabelEntry)(nil),                         // 136: rpc.TFindLabelResponse.TFindLabelEntry
	(*TVolumePropertyListResponse_TVolumePropertyDescription)(nil),     // 137: rpc.TVolumePropertyListResponse.TVolumePropertyDescription
}
var file_rpc_proto_depIdxs = []int32{
	63,  // 0: rpc.TContainerRequest.create:type_name -> rpc.TContainerCreateRequest
	64,  // 1: rpc.TContainerRequest.destroy:type_name -> rpc.TContainerDestroyRequest
	65,  // 2: rpc.TContainerRequest.list:type_name -> rpc.TContainerListRequest
	67,  // 3: rpc.TContainerRequest.getProperty:type_name -> rpc.TContainerGetPropertyRequest
	71,  // 4: rpc.TContainerRequest.setProperty:type_name -> rpc.TContainerSetPropertyRequest
	69,  // 5: rpc.TContainerRequest.getData:type_name -> rpc.TContainerGetDataRequest
	74,  // 6: rpc.TContainerRequest.start:type_name -> rpc.TContainerStartRequest
	76,  // 7: rpc.TContainerRequest.stop:type_name -> rpc.TContainerStopRequest
	77,  // 8: rpc.TContainerRequest.pause:type_name -> rpc.TContainerPauseRequest
	78,  // 9: rpc.TContainerRequest.resume:type_name -> rpc.TContainerResumeRequest
	59,  // 10: rpc.TContainerRequest.propertyList:type_name -> rpc.TContainerPropertyListRequest
	61,  // 11: rpc.TContainerRequest.dataList:type_name -> rpc.TContainerDataListRequest
	83,  // 12: rpc.TContainerRequest.kill:type_name -> rpc.TContainerKillRequest
	45,  // 13: rpc.TContainerRequest.version:type_name -> rpc.TVersionRequest
	72,  // 14: rpc.TContainerRequest.get:type_name -> rpc.TContainerGetRequest
	81,  // 15: rpc.TContainerRequest.wait:type_name -> rpc.TContainerWaitRequest
	63,  // 16: rpc.TContainerRequest.createWeak:type_name -> rpc.TContainerCreateRequest
	75,  // 17: rpc.TContainerRequest.Respawn:type_name -> rpc.TContainerRespawnRequest
	81,  // 18: rpc.TContainerRequest.AsyncWait:type_name -> rpc.TContainerWaitRequest
	81,  // 19: rpc.TContainerRequest.StopAsyncWait:type_name -> rpc.TContainerWaitRequest
	87,  // 20: rpc.TContainerRequest.FindLabel:type_name -> rpc.TFindLabelRequest
	89,  // 21: rpc.TContainerRequest.SetLabel:type_name -> rpc.TSetLabelRequest
	91,  // 22: rpc.TContainerRequest.IncLabel:type_name -> rpc.TIncLabelRequest
	52,  // 23: rpc.TContainerRequest.CreateFromSpec:type_name -> rpc.TCreateFromSpecRequest
	53,  // 24: rpc.TContainerRequest.UpdateFromSpec:type_name -> rpc.TUpdateFromSpecRequest
	57,  // 25: rpc.TContainerRequest.ListContainersBy:type_name -> rpc.TListContainersRequest
	98,  // 26: rpc.TContainerRequest.listVolumeProperties:type_name -> rpc.TVolumePropertyListRequest
	100, // 27: rpc.TContainerRequest.createVolume:type_name -> rpc.TVolumeCreateRequest
	101, // 28: rpc.TContainerRequest.linkVolume:type_name -> rpc.TVolumeLinkRequest
	101, // 29: rpc.TContainerRequest.LinkVolumeTarget:type_name -> rpc.TVolumeLinkRequest
	102, // 30: rpc.TContainerRequest.unlinkVolume:type_name -> rpc.TVolumeUnlinkRequest
	102, // 31: rpc.TContainerRequest.UnlinkVolumeTarget:type_name -> rpc.TVolumeUnlinkRequest
	103, // 32: rpc.TContainerRequest.listVolumes:type_name -> rpc.TVolumeListRequest
	105, // 33: rpc.TContainerRequest.tuneVolume:type_name -> rpc.TVolumeTuneRequest
	106, // 34: rpc.TContainerRequest.checkVolume:type_name -> rpc.TVolumeCheckRequest
	110, // 35: rpc.TContainerRequest.importLayer:type_name -> rpc.TLayerImportRequest
	112, // 36: rpc.TContainerRequest.removeLayer:type_name -> rpc.TLayerRemoveRequest
	108, // 37: rpc.TContainerRequest.listLayers:type_name -> rpc.TLayerListRequest
	111, // 38: rpc.TContainerRequest.exportLayer:type_name -> rpc.TLayerExportRequest
	113, // 39: rpc.TContainerRequest.getlayerprivate:type_name -> rpc.TLayerGetPrivateRequest
	115, // 40: rpc.TContainerRequest.setlayerprivate:type_name -> rpc.TLayerSetPrivateRequest
	116, // 41: rpc.TContainerRequest.listStorage:type_name -> rpc.TStorageListRequest
	118, // 42: rpc.TContainerRequest.removeStorage:type_name -> rpc.TStorageRemoveRequest
	119, // 43: rpc.TContainerRequest.importStorage:type_name -> rpc.TStorageImportRequest
	120, // 44: rpc.TContainerRequest.exportStorage:type_name -> rpc.TStorageExportRequest
	44,  // 45: rpc.TContainerRequest.CreateMetaStorage:type_name -> rpc.TMetaStorage
	44,  // 46: rpc.TContainerRequest.ResizeMetaStorage:type_name -> rpc.TMetaStorage
	44,  // 47: rpc.TContainerRequest.RemoveMetaStorage:type_name -> rpc.TMetaStorage
	93,  // 48: rpc.TContainerRequest.SetSymlink:type_name -> rpc.TSetSymlinkRequest
	94,  // 49: rpc.TContainerRequest.NewVolume:type_name -> rpc.TNewVolumeRequest
	96,  // 50: rpc.TContainerRequest.GetVolume:type_name -> rpc.TGetVolumeRequest
	79,  // 51: rpc.TContainerRequest.convertPath:type_name -> rpc.TConvertPathRequest
	84,  // 52: rpc.TContainerRequest.attachProcess:type_name -> rpc.TAttachProcessRequest
	85,  // 53: rpc.TContainerRequest.locateProcess:type_name -> rpc.TLocateProcessRequest
	84,  // 54: rpc.TContainerRequest.AttachThread:type_name -> rpc.TAttachProcessRequest
	47,  // 55: rpc.TContainerRequest.GetSystem:type_name -> rpc.TGetSystemRequest
	50,  // 56: rpc.TContainerRequest.SetSystem:type_name -> rpc.TSetSystemRequest
	48,  // 57: rpc.TContainerRequest.ClearStatistics:type_name -> rpc.TClearStatisticsRequest
	122, // 58: rpc.TContainerRequest.dockerImageStatus:type_name -> rpc.TDockerImageStatusRequest
	124, // 59: rpc.TContainerRequest.listDockerImages:type_name -> rpc.TDockerImageListRequest
	126, // 60: rpc.TContainerRequest.pullDockerImage:type_name -> rpc.TDockerImagePullRequest
	128, // 61: rpc.TContainerRequest.removeDockerImage:type_name -> rpc.TDockerImageRemoveRequest
	0,   // 62: rpc.TContainerResponse.error:type_name -> rpc.EError
	66,  // 63: rpc.TContainerResponse.list:type_name -> rpc.TContainerListResponse
	68,  // 64: rpc.TContainerResponse.getProperty:type_name -> rpc.TContainerGetPropertyResponse
	70,  // 65: rpc.TContainerResponse.getData:type_name -> rpc.TContainerGetDataResponse
	60,  // 66: rpc.TContainerResponse.propertyList:type_name -> rpc.TContainerPropertyListResponse
	62,  // 67: rpc.TContainerResponse.dataList:type_name -> rpc.TContainerDataListResponse
	46,  // 68: rpc.TContainerResponse.version:type_name -> rpc.TVersionResponse
	104, // 69: rpc.TContainerResponse.volumeList:type_name -> rpc.TVolumeListResponse
	73,  // 70: rpc.TContainerResponse.get:type_name -> rpc.TContainerGetResponse
	82,  // 71: rpc.TContainerResponse.wait:type_name -> rpc.TContainerWaitResponse
	99,  // 72: rpc.TContainerResponse.volumePropertyList:type_name -> rpc.TVolumePropertyListResponse
	35,  // 73: rpc.TContainerResponse.volumeDescription:type_name -> rpc.TVolumeDescription
	109, // 74: rpc.TContainerResponse.layers:type_name -> rpc.TLayerListResponse
	80,  // 75: rpc.TContainerResponse.convertPath:type_name -> rpc.TConvertPathResponse
	114, // 76: rpc.TContainerResponse.layer_private:type_name -> rpc.TLayerGetPrivateResponse
	117, // 77: rpc.TContainerResponse.storageList:type_name -> rpc.TStorageListResponse
	86,  // 78: rpc.TContainerResponse.locateProcess:type_name -> rpc.TLocateProcessResponse
	82,  // 79: rpc.TContainerResponse.AsyncWait:type_name -> rpc.TContainerWaitResponse
	88,  // 80: rpc.TContainerResponse.FindLabel:type_name -> rpc.TFindLabelResponse
	90,  // 81: rpc.TContainerResponse.SetLabel:type_name -> rpc.TSetLabelResponse
	92,  // 82: rpc.TContainerResponse.IncLabel:type_name -> rpc.TIncLabelResponse
	107, // 83: rpc.TContainerResponse.checkVolume:type_name -> rpc.TVolumeCheckResponse
	58,  // 84: rpc.TContainerResponse.ListContainersBy:type_name -> rpc.TListContainersResponse
	95,  // 85: rpc.TContainerResponse.NewVolume:type_name -> rpc.TNewVolumeResponse
	97,  // 86: rpc.TContainerResponse.GetVolume:type_name -> rpc.TGetVolumeResponse
	49,  // 87: rpc.TContainerResponse.GetSystem:type_name -> rpc.TGetSystemResponse
	51,  // 88: rpc.TContainerResponse.SetSystem:type_name -> rpc.TSetSystemResponse
	123, // 89: rpc.TContainerResponse.dockerImageStatus:type_name -> rpc.TDockerImageStatusResponse
	125, // 90: rpc.TContainerResponse.listDockerImages:type_name -> rpc.TDockerImageListResponse
	127, // 91: rpc.TContainerResponse.pullDockerImage:type_name -> rpc.TDockerImagePullResponse
	129, // 92: rpc.TStringMap.map:type_name -> rpc.TStringMap.TStringMapEntry
	130, // 93: rpc.TUintMap.map:type_name -> rpc.TUintMap.TUintMapEntry
	0,   // 94: rpc.TError.error:type_name -> rpc.EError
	9,   // 95: rpc.TContainerEnv.var:type_name -> rpc.TContainerEnvVar
	11,  // 96: rpc.TContainerUlimits.ulimit:type_name -> rpc.TContainerUlimit
	14,  // 97: rpc.TContainerCgroups.cgroup:type_name -> rpc.TContainerCgroup
	17,  // 98: rpc.TContainerBindMounts.bind:type_name -> rpc.TContainerBindMount
	19,  // 99: rpc.TContainerVolumeLinks.link:type_name -> rpc.TContainerVolumeLink
	22,  // 100: rpc.TContainerPlaceConfig.cfg:type_name -> rpc.TContainerPlace
	24,  // 101: rpc.TContainerDevices.device:type_name -> rpc.TContainerDevice
	26,  // 102: rpc.TContainerNetConfig.cfg:type_name -> rpc.TContainerNetOption
	131, // 103: rpc.TContainerIpConfig.cfg:type_name -> rpc.TContainerIpConfig.TContainerIp
	5,   // 104: rpc.TContainerStatus.start_error:type_name -> rpc.TError
	7,   // 105: rpc.TContainerStatus.capabilities_allowed:type_name -> rpc.TCapabilities
	7,   // 106: rpc.TContainerStatus.capabilities_ambient_allowed:type_name -> rpc.TCapabilities
	15,  // 107: rpc.TContainerStatus.cgroups:type_name -> rpc.TContainerCgroups
	16,  // 108: rpc.TContainerStatus.cpu_set_affinity:type_name -> rpc.TContainerCpuSet
	4,   // 109: rpc.TContainerStatus.io_read:type_name -> rpc.TUintMap
	4,   // 110: rpc.TContainerStatus.io_write:type_name -> rpc.TUintMap
	4,   // 111: rpc.TContainerStatus.io_ops:type_name -> rpc.TUintMap
	4,   // 112: rpc.TContainerStatus.io_read_ops:type_name -> rpc.TUintMap
	4,   // 113: rpc.TContainerStatus.io_write_ops:type_name -> rpc.TUintMap
	4,   // 114: rpc.TContainerStatus.io_time:type_name -> rpc.TUintMap
	4,   // 115: rpc.TContainerStatus.place_usage:type_name -> rpc.TUintMap
	30,  // 116: rpc.TContainerStatus.virtual_memory:type_name -> rpc.TVmStat
	4,   // 117: rpc.TContainerStatus.net_bytes:type_name -> rpc.TUintMap
	4,   // 118: rpc.TContainerStatus.net_packets:type_name -> rpc.TUintMap
	4,   // 119: rpc.TContainerStatus.net_drops:type_name -> rpc.TUintMap
	4,   // 120: rpc.TContainerStatus.net_overlimits:type_name -> rpc.TUintMap
	4,   // 121: rpc.TContainerStatus.net_rx_bytes:type_name -> rpc.TUintMap
	4,   // 122: rpc.TContainerStatus.net_rx_packets:type_name -> rpc.TUintMap
	4,   // 123: rpc.TContainerStatus.net_rx_drops:type_name -> rpc.TUintMap
	4,   // 124: rpc.TContainerStatus.net_rx_overlimits:type_name -> rpc.TUintMap
	4,   // 125: rpc.TContainerStatus.net_tx_bytes:type_name -> rpc.TUintMap
	4,   // 126: rpc.TContainerStatus.net_tx_packets:type_name -> rpc.TUintMap
	4,   // 127: rpc.TContainerStatus.net_tx_drops:type_name -> rpc.TUintMap
	4,   // 128: rpc.TContainerStatus.net_netstat:type_name -> rpc.TUintMap
	4,   // 129: rpc.TContainerStatus.net_snmp:type_name -> rpc.TUintMap
	4,   // 130: rpc.TContainerStatus.net_snmp6:type_name -> rpc.TUintMap
	20,  // 131: rpc.TContainerStatus.volumes_linked:type_name -> rpc.TContainerVolumeLinks
	21,  // 132: rpc.TContainerStatus.volumes_owned:type_name -> rpc.TContainerVolumes
	5,   // 133: rpc.TContainerStatus.error:type_name -> rpc.TError
	5,   // 134: rpc.TContainerStatus.warning:type_name -> rpc.TError
	5,   // 135: rpc.TContainerStatus.taint:type_name -> rpc.TError
	3,   // 136: rpc.TContainerSpec.labels:type_name -> rpc.TStringMap
	8,   // 137: rpc.TContainerSpec.command_argv:type_name -> rpc.TContainerCommandArgv
	10,  // 138: rpc.TContainerSpec.env:type_name -> rpc.TContainerEnv
	10,  // 139: rpc.TContainerSpec.env_secret:type_name -> rpc.TContainerEnv
	12,  // 140: rpc.TContainerSpec.ulimit:type_name -> rpc.TContainerUlimits
	6,   // 141: rpc.TContainerSpec.task_cred:type_name -> rpc.TCred
	6,   // 142: rpc.TContainerSpec.owner_cred:type_name -> rpc.TCred
	7,   // 143: rpc.TContainerSpec.capabilities:type_name -> rpc.TCapabilities
	7,   // 144: rpc.TContainerSpec.capabilities_ambient:type_name -> rpc.TCapabilities
	18,  // 145: rpc.TContainerSpec.bind:type_name -> rpc.TContainerBindMounts
	3,   // 146: rpc.TContainerSpec.symlink:type_name -> rpc.TStringMap
	25,  // 147: rpc.TContainerSpec.devices:type_name -> rpc.TContainerDevices
	23,  // 148: rpc.TContainerSpec.place:type_name -> rpc.TContainerPlaceConfig
	4,   // 149: rpc.TContainerSpec.place_limit:type_name -> rpc.TUintMap
	13,  // 150: rpc.TContainerSpec.controllers:type_name -> rpc.TContainerControllers
	16,  // 151: rpc.TContainerSpec.cpu_set:type_name -> rpc.TContainerCpuSet
	4,   // 152: rpc.TContainerSpec.io_limit:type_name -> rpc.TUintMap
	4,   // 153: rpc.TContainerSpec.io_ops_limit:type_name -> rpc.TUintMap
	27,  // 154: rpc.TContainerSpec.net:type_name -> rpc.TContainerNetConfig
	28,  // 155: rpc.TContainerSpec.ip_limit:type_name -> rpc.TContainerIpLimit
	29,  // 156: rpc.TContainerSpec.ip:type_name -> rpc.TContainerIpConfig
	29,  // 157: rpc.TContainerSpec.default_gw:type_name -> rpc.TContainerIpConfig
	3,   // 158: rpc.TContainerSpec.sysctl:type_name -> rpc.TStringMap
	4,   // 159: rpc.TContainerSpec.net_guarantee:type_name -> rpc.TUintMap
	4,   // 160: rpc.TContainerSpec.net_limit:type_name -> rpc.TUintMap
	4,   // 161: rpc.TContainerSpec.net_rx_limit:type_name -> rpc.TUintMap
	21,  // 162: rpc.TContainerSpec.volumes_required:type_name -> rpc.TContainerVolumes
	32,  // 163: rpc.TContainer.spec:type_name -> rpc.TContainerSpec
	31,  // 164: rpc.TContainer.status:type_name -> rpc.TContainerStatus
	5,   // 165: rpc.TContainer.error:type_name -> rpc.TError
	34,  // 166: rpc.TVolumeDescription.properties:type_name -> rpc.TVolumeProperty
	36,  // 167: rpc.TVolumeDescription.links:type_name -> rpc.TVolumeLink
	6,   // 168: rpc.TVolumeDirectory.cred:type_name -> rpc.TCred
	36,  // 169: rpc.TVolumeSpec.links:type_name -> rpc.TVolumeLink
	6,   // 170: rpc.TVolumeSpec.cred:type_name -> rpc.TCred
	37,  // 171: rpc.TVolumeSpec.space:type_name -> rpc.TVolumeResource
	37,  // 172: rpc.TVolumeSpec.inodes:type_name -> rpc.TVolumeResource
	6,   // 173: rpc.TVolumeSpec.owner:type_name -> rpc.TCred
	38,  // 174: rpc.TVolumeSpec.directories:type_name -> rpc.TVolumeDirectory
	39,  // 175: rpc.TVolumeSpec.symlinks:type_name -> rpc.TVolumeSymlink
	40,  // 176: rpc.TVolumeSpec.shares:type_name -> rpc.TVolumeShare
	32,  // 177: rpc.TCreateFromSpecRequest.container:type_name -> rpc.TContainerSpec
	41,  // 178: rpc.TCreateFromSpecRequest.volumes:type_name -> rpc.TVolumeSpec
	32,  // 179: rpc.TUpdateFromSpecRequest.container:type_name -> rpc.TContainerSpec
	3,   // 180: rpc.TListContainersFilter.labels:type_name -> rpc.TStringMap
	55,  // 181: rpc.TListContainersFieldOptions.stdout_options:type_name -> rpc.TStreamDumpOptions
	55,  // 182: rpc.TListContainersFieldOptions.stderr_options:type_name -> rpc.TStreamDumpOptions
	54,  // 183: rpc.TListContainersRequest.filters:type_name -> rpc.TListContainersFilter
	56,  // 184: rpc.TListContainersRequest.field_options:type_name -> rpc.TListContainersFieldOptions
	33,  // 185: rpc.TListContainersResponse.containers:type_name -> rpc.TContainer
	132, // 186: rpc.TContainerPropertyListResponse.list:type_name -> rpc.TContainerPropertyListResponse.TContainerPropertyListEntry
	133, // 187: rpc.TContainerDataListResponse.list:type_name -> rpc.TContainerDataListResponse.TContainerDataListEntry
	135, // 188: rpc.TContainerGetResponse.list:type_name -> rpc.TContainerGetResponse.TContainerGetListResponse
	136, // 189: rpc.TFindLabelResponse.list:type_name -> rpc.TFindLabelResponse.TFindLabelEntry
	41,  // 190: rpc.TNewVolumeRequest.volume:type_name -> rpc.TVolumeSpec
	41,  // 191: rpc.TNewVolumeResponse.volume:type_name -> rpc.TVolumeSpec
	41,  // 192: rpc.TGetVolumeResponse.volume:type_name -> rpc.TVolumeSpec
	137, // 193: rpc.TVolumePropertyListResponse.properties:type_name -> rpc.TVolumePropertyListResponse.TVolumePropertyDescription
	34,  // 194: rpc.TVolumeCreateRequest.properties:type_name -> rpc.TVolumeProperty
	35,  // 195: rpc.TVolumeListResponse.volumes:type_name -> rpc.TVolumeDescription
	34,  // 196: rpc.TVolumeTuneRequest.properties:type_name -> rpc.TVolumeProperty
	42,  // 197: rpc.TLayerListResponse.layers:type_name -> rpc.TLayerDescription
	43,  // 198: rpc.TStorageListResponse.storages:type_name -> rpc.TStorageDescription
	44,  // 199: rpc.TStorageListResponse.meta_storages:type_name -> rpc.TMetaStorage
	121, // 200: rpc.TDockerImageStatusResponse.image:type_name -> rpc.TDockerImage
	121, // 201: rpc.TDockerImageListResponse.images:type_name -> rpc.TDockerImage
	121, // 202: rpc.TDockerImagePullResponse.image:type_name -> rpc.TDockerImage
	0,   // 203: rpc.TContainerGetResponse.TContainerGetValueResponse.error:type_name -> rpc.EError
	134, // 204: rpc.TContainerGetResponse.TContainerGetListResponse.keyval:type_name -> rpc.TContainerGetResponse.TContainerGetValueResponse
	205, // [205:205] is the sub-list for method output_type
	205, // [205:205] is the sub-list for method input_type
	205, // [205:205] is the sub-list for extension type_name
	205, // [205:205] is the sub-list for extension extendee
	0,   // [0:205] is the sub-list for field type_name
}

func init() { file_rpc_proto_init() }
func file_rpc_proto_init() {
	if File_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStringMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TUintMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCapabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerCommandArgv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerEnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerEnv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerUlimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerUlimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerControllers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerCgroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerCgroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerCpuSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerBindMount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerBindMounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerVolumeLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerVolumeLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerVolumes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerPlace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerPlaceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerDevices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerNetOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerNetConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerIpLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerIpConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVmStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeSymlink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLayerDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStorageDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMetaStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TClearStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetSystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSetSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSetSystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCreateFromSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TUpdateFromSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListContainersFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStreamDumpOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListContainersFieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListContainersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TListContainersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerPropertyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerPropertyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerDataListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerDataListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerGetPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerGetPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerGetDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerGetDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerSetPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerRespawnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerPauseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerResumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TConvertPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TConvertPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerWaitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerWaitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerKillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAttachProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLocateProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLocateProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFindLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFindLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSetLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSetLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TIncLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TIncLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TSetSymlinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TNewVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TNewVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TGetVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumePropertyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumePropertyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeUnlinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeTuneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumeCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLayerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLayerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLayerImportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLayerExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLayerRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLayerGetPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLayerGetPrivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLayerSetPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStorageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStorageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStorageRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStorageImportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStorageExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDockerImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDockerImageStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDockerImageStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDockerImageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDockerImageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDockerImagePullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDockerImagePullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDockerImageRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStringMap_TStringMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TUintMap_TUintMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerIpConfig_TContainerIp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerPropertyListResponse_TContainerPropertyListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerDataListResponse_TContainerDataListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerGetResponse_TContainerGetValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TContainerGetResponse_TContainerGetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFindLabelResponse_TFindLabelEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVolumePropertyListResponse_TVolumePropertyDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   137,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_proto_goTypes,
		DependencyIndexes: file_rpc_proto_depIdxs,
		EnumInfos:         file_rpc_proto_enumTypes,
		MessageInfos:      file_rpc_proto_msgTypes,
	}.Build()
	File_rpc_proto = out.File
	file_rpc_proto_rawDesc = nil
	file_rpc_proto_goTypes = nil
	file_rpc_proto_depIdxs = nil
}
